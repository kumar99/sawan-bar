
Android.mk,438
LOCAL_PATH:= $(call my-dir)LOCAL_PATH1,0
LOCAL_MODULE_TAGS := userLOCAL_MODULE_TAGS8,218
LOCAL_SRC_FILES := \LOCAL_SRC_FILES10,245
LOCAL_MODULE := com.android.phone.commonLOCAL_MODULE15,400
LOCAL_MODULE_TAGS := optionalLOCAL_MODULE_TAGS22,600
LOCAL_SRC_FILES := $(call all-java-files-under, src)LOCAL_SRC_FILES24,631
LOCAL_PACKAGE_NAME := PhoneLOCAL_PACKAGE_NAME30,881
LOCAL_CERTIFICATE := platformLOCAL_CERTIFICATE31,909

CleanSpec.mk,0

src/com/android/phone/AccelerometerListener.java,1824
package com.android.phone;com.android.phone17,621
public final class AccelerometerListener {AccelerometerListener33,1121
    private static final String TAG = "AccelerometerListener";TAG34,1164
    private static final boolean DEBUG = true;DEBUG35,1227
    private static final boolean VDEBUG = false;VDEBUG36,1274
    private SensorManager mSensorManager;mSensorManager38,1324
    private Sensor mSensor;mSensor39,1366
    private int mOrientation;mOrientation42,1478
    private int mPendingOrientation;mPendingOrientation47,1708
    private OrientationListener mListener;mListener49,1746
    public static final int ORIENTATION_UNKNOWN = 0;ORIENTATION_UNKNOWN52,1816
    public static final int ORIENTATION_VERTICAL = 1;ORIENTATION_VERTICAL53,1869
    public static final int ORIENTATION_HORIZONTAL = 2;ORIENTATION_HORIZONTAL54,1923
    private static final int ORIENTATION_CHANGED = 1234;ORIENTATION_CHANGED56,1980
    private static final int VERTICAL_DEBOUNCE = 100;VERTICAL_DEBOUNCE58,2038
    private static final int HORIZONTAL_DEBOUNCE = 500;HORIZONTAL_DEBOUNCE59,2092
    private static final double VERTICAL_ANGLE = 50.0;VERTICAL_ANGLE60,2148
    public interface OrientationListener {OrientationListener62,2204
        public void orientationChanged(int orientation);orientationChanged63,2247
    public AccelerometerListener(Context context, OrientationListener listener) {AccelerometerListener66,2311
    public void enable(boolean enable) {enable72,2598
    private void setOrientation(int orientation) {setOrientation87,3179
    private void onSensorEvent(double x, double y, double z) {onSensorEvent115,4386
    SensorEventListener mSensorListener = new SensorEventListener() {mSensorListener133,5239
    Handler mHandler = new Handler() {mHandler143,5564

src/com/android/phone/ADNList.java,2289
package com.android.phone;com.android.phone17,621
public class ADNList extends ListActivity {ADNList38,1209
    protected static final String TAG = "ADNList";TAG39,1253
    protected static final boolean DBG = false;DBG40,1304
    private static final String[] COLUMN_NAMES = new String[] {COLUMN_NAMES42,1353
    protected static final int NAME_COLUMN = 0;NAME_COLUMN48,1476
    protected static final int NUMBER_COLUMN = 1;NUMBER_COLUMN49,1524
    protected static final int EMAILS_COLUMN = 2;EMAILS_COLUMN50,1574
    private static final int[] VIEW_NAMES = new int[] {VIEW_NAMES52,1625
    protected static final int QUERY_TOKEN = 0;QUERY_TOKEN57,1744
    protected static final int INSERT_TOKEN = 1;INSERT_TOKEN58,1792
    protected static final int UPDATE_TOKEN = 2;UPDATE_TOKEN59,1841
    protected static final int DELETE_TOKEN = 3;DELETE_TOKEN60,1890
    protected QueryHandler mQueryHandler;mQueryHandler63,1941
    protected CursorAdapter mCursorAdapter;mCursorAdapter64,1983
    protected Cursor mCursor = null;mCursor65,2027
    private TextView mEmptyText;mEmptyText67,2065
    protected int mInitialSelection = -1;mInitialSelection69,2099
    protected void onCreate(Bundle icicle) {onCreate72,2156
    protected void onResume() {onResume81,2502
    protected void onStop() {onStop87,2598
    protected Uri resolveIntent() {resolveIntent94,2734
    private void query() {query103,2958
    private void reQuery() {reQuery111,3220
    private void setAdapter() {setAdapter115,3273
    protected CursorAdapter newAdapter() {newAdapter155,4987
    private void displayProgress(boolean flag) {displayProgress161,5195
    private class QueryHandler extends AsyncQueryHandler {QueryHandler169,5563
        public QueryHandler(ContentResolver cr) {QueryHandler170,5622
        protected void onQueryComplete(int token, Object cookie, Cursor c) {onQueryComplete175,5724
        protected void onInsertComplete(int token, Object cookie,onInsertComplete183,5992
        protected void onUpdateComplete(int token, Object cookie, int result) {onUpdateComplete190,6216
        protected void onDeleteComplete(int token, Object cookie, int result) {onDeleteComplete196,6403
    protected void log(String msg) {log202,6578

src/com/android/phone/BluetoothAtPhonebook.java,2461
package com.android.phone;com.android.phone17,621
public class BluetoothAtPhonebook {BluetoothAtPhonebook40,1284
    private static final String TAG = "BtAtPhonebook";TAG41,1320
    private static final boolean DBG = false;DBG42,1375
    private static final String[] CALLS_PROJECTION = new String[] {CALLS_PROJECTION48,1621
    private static final String[] PHONES_PROJECTION = new String[] {PHONES_PROJECTION55,1879
    private static final int MAX_PHONEBOOK_SIZE = 16384;MAX_PHONEBOOK_SIZE61,2160
    private static final String OUTGOING_CALL_WHERE = Calls.TYPE + "=" + Calls.OUTGOING_TYPE;OUTGOING_CALL_WHERE63,2218
    private static final String INCOMING_CALL_WHERE = Calls.TYPE + "=" + Calls.INCOMING_TYPE;INCOMING_CALL_WHERE64,2312
    private static final String MISSED_CALL_WHERE = Calls.TYPE + "=" + Calls.MISSED_TYPE;MISSED_CALL_WHERE65,2406
    private static final String VISIBLE_PHONEBOOK_WHERE = Phone.IN_VISIBLE_GROUP + "=1";VISIBLE_PHONEBOOK_WHERE66,2496
    private class PhonebookResult {PhonebookResult68,2586
        public Cursor  cursor; // result set of last querycursor69,2622
        public int     numberColumn;numberColumn70,2681
        public int     typeColumn;typeColumn71,2718
        public int     nameColumn;nameColumn72,2753
    private final Context mContext;mContext75,2796
    private final BluetoothHandsfree mHandsfree;mHandsfree76,2832
    private String mCurrentPhonebook;mCurrentPhonebook78,2882
    private String mCharacterSet = "UTF-8";mCharacterSet79,2920
    private final HashMap<String, PhonebookResult> mPhonebooks =mPhonebooks81,2965
    public BluetoothAtPhonebook(Context context, BluetoothHandsfree handsfree) {BluetoothAtPhonebook84,3084
    public String getLastDialledNumber() {getLastDialledNumber96,3673
    public void register(AtParser parser) {register114,4311
    private synchronized PhonebookResult getPhonebookResult(String pb, boolean force) {getPhonebookResult327,14040
    private synchronized boolean queryPhonebook(String pb, PhonebookResult pbr) {queryPhonebook344,14486
    synchronized void resetAtState() {resetAtState394,16563
    private synchronized int getMaxPhoneBookSize(int currSize) {getMaxPhoneBookSize398,16642
    private int roundUpToPowerOfTwo(int x) {roundUpToPowerOfTwo411,17243
    private static String getPhoneType(int type) {getPhoneType420,17423
    private static void log(String msg) {log438,17927

src/com/android/phone/BluetoothCmeError.java,1760
package com.android.phone;com.android.phone17,621
public class BluetoothCmeError {BluetoothCmeError20,729
    public static final int AG_FAILURE = 0;AG_FAILURE21,762
    public static final int NO_CONNECTION_TO_PHONE = 1;NO_CONNECTION_TO_PHONE22,806
    public static final int OPERATION_NOT_ALLOWED = 3;OPERATION_NOT_ALLOWED23,862
    public static final int OPERATION_NOT_SUPPORTED = 4;OPERATION_NOT_SUPPORTED24,917
    public static final int PIN_REQUIRED = 5;PIN_REQUIRED25,974
    public static final int SIM_MISSING = 10;SIM_MISSING26,1020
    public static final int SIM_PIN_REQUIRED = 11;SIM_PIN_REQUIRED27,1066
    public static final int SIM_PUK_REQUIRED = 12;SIM_PUK_REQUIRED28,1117
    public static final int SIM_FAILURE = 13;SIM_FAILURE29,1168
    public static final int SIM_BUSY = 14;SIM_BUSY30,1214
    public static final int WRONG_PASSWORD = 16;WRONG_PASSWORD31,1257
    public static final int SIM_PIN2_REQUIRED = 17;SIM_PIN2_REQUIRED32,1306
    public static final int SIM_PUK2_REQUIRED = 18;SIM_PUK2_REQUIRED33,1358
    public static final int MEMORY_FULL = 20;MEMORY_FULL34,1410
    public static final int INVALID_INDEX = 21;INVALID_INDEX35,1456
    public static final int MEMORY_FAILURE = 23;MEMORY_FAILURE36,1504
    public static final int TEXT_TOO_LONG = 24;TEXT_TOO_LONG37,1553
    public static final int TEXT_HAS_INVALID_CHARS = 25;TEXT_HAS_INVALID_CHARS38,1601
    public static final int DIAL_STRING_TOO_LONG = 26;DIAL_STRING_TOO_LONG39,1658
    public static final int DIAL_STRING_HAS_INVALID_CHARS = 27;DIAL_STRING_HAS_INVALID_CHARS40,1713
    public static final int NO_SERVICE = 30;NO_SERVICE41,1777
    public static final int ONLY_911_ALLOWED = 32;ONLY_911_ALLOWED42,1822

src/com/android/phone/BluetoothHandsfree.java,14524
package com.android.phone;com.android.phone17,621
public class BluetoothHandsfree {BluetoothHandsfree60,2024
    private static final String TAG = "BT HS/HF";TAG61,2058
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 1)DBG62,2108
    private static final boolean VDBG = (PhoneApp.DBG_LEVEL >= 2);  // even more loggingVDBG64,2240
    public static final int TYPE_UNKNOWN           = 0;TYPE_UNKNOWN66,2330
    public static final int TYPE_HEADSET           = 1;TYPE_HEADSET67,2386
    public static final int TYPE_HANDSFREE         = 2;TYPE_HANDSFREE68,2442
    private final Context mContext;mContext70,2499
    private final CallManager mCM;mCM71,2535
    private final BluetoothA2dp mA2dp;mA2dp72,2570
    private BluetoothDevice mA2dpDevice;mA2dpDevice74,2610
    private int mA2dpState;mA2dpState75,2651
    private ServiceState mServiceState;mServiceState77,2680
    private HeadsetBase mHeadset;  // null when not connectedmHeadset78,2720
    private int mHeadsetType;mHeadsetType79,2782
    private boolean mAudioPossible;mAudioPossible80,2812
    private ScoSocket mIncomingSco;mIncomingSco81,2848
    private ScoSocket mOutgoingSco;mOutgoingSco82,2884
    private ScoSocket mConnectedSco;mConnectedSco83,2920
    private AudioManager mAudioManager;mAudioManager85,2958
    private PowerManager mPowerManager;mPowerManager86,2998
    private boolean mPendingSco;  // waiting for a2dp sink to suspend before establishing SCOmPendingSco88,3039
    private boolean mA2dpSuspended;mA2dpSuspended89,3133
    private boolean mUserWantsAudio;mUserWantsAudio90,3169
    private WakeLock mStartCallWakeLock;  // held while waiting for the intent to start callmStartCallWakeLock91,3206
    private WakeLock mStartVoiceRecognitionWakeLock;  // held while waiting for voice recognitionmStartVoiceRecognitionWakeLock92,3299
    private static final int GSM_MAX_CONNECTIONS = 6;  // Max connections allowed by GSMGSM_MAX_CONNECTIONS95,3422
    private static final int CDMA_MAX_CONNECTIONS = 2;  // Max connections allowed by CDMACDMA_MAX_CONNECTIONS96,3511
    private long mBgndEarliestConnectionTime = 0;mBgndEarliestConnectionTime98,3603
    private boolean mClip = false;  // Calling Line Information PresentationmClip99,3653
    private boolean mIndicatorsEnabled = false;mIndicatorsEnabled100,3730
    private boolean mCmee = false;  // Extended Error reportingmCmee101,3778
    private long[] mClccTimestamps; // Timestamps associated with each clcc indexmClccTimestamps102,3842
    private boolean[] mClccUsed;     // Is this clcc index in usemClccUsed103,3924
    private boolean mWaitingForCallStart;mWaitingForCallStart104,3990
    private boolean mWaitingForVoiceRecognition;mWaitingForVoiceRecognition105,4032
    private boolean mServiceConnectionEstablished;mServiceConnectionEstablished109,4280
    private final BluetoothPhoneState mBluetoothPhoneState;  // for CIND and CIEV updatesmBluetoothPhoneState111,4332
    private final BluetoothAtPhonebook mPhonebook;mPhonebook112,4422
    private Phone.State mPhoneState = Phone.State.IDLE;mPhoneState113,4473
    CdmaPhoneCallState.PhoneCallState mCdmaThreeWayCallState =mCdmaThreeWayCallState114,4529
    private DebugThread mDebugThread;mDebugThread117,4677
    private int mScoGain = Integer.MIN_VALUE;mScoGain118,4715
    private static Intent sVoiceCommandIntent;sVoiceCommandIntent120,4762
    private static final String HEADSET_NREC = "bt_headset_nrec";HEADSET_NREC123,4834
    private static final String HEADSET_NAME = "bt_headset_name";HEADSET_NAME124,4900
    private int mRemoteBrsf = 0;mRemoteBrsf126,4967
    private int mLocalBrsf = 0;mLocalBrsf127,5000
    private boolean mCdmaIsSecondCallActive = false;mCdmaIsSecondCallActive134,5400
    private static final int BRSF_AG_THREE_WAY_CALLING = 1 << 0;BRSF_AG_THREE_WAY_CALLING137,5534
    private static final int BRSF_AG_EC_NR = 1 << 1;BRSF_AG_EC_NR138,5599
    private static final int BRSF_AG_VOICE_RECOG = 1 << 2;BRSF_AG_VOICE_RECOG139,5652
    private static final int BRSF_AG_IN_BAND_RING = 1 << 3;BRSF_AG_IN_BAND_RING140,5711
    private static final int BRSF_AG_VOICE_TAG_NUMBE = 1 << 4;BRSF_AG_VOICE_TAG_NUMBE141,5771
    private static final int BRSF_AG_REJECT_CALL = 1 << 5;BRSF_AG_REJECT_CALL142,5834
    private static final int BRSF_AG_ENHANCED_CALL_STATUS = 1 <<  6;BRSF_AG_ENHANCED_CALL_STATUS143,5893
    private static final int BRSF_AG_ENHANCED_CALL_CONTROL = 1 << 7;BRSF_AG_ENHANCED_CALL_CONTROL144,5962
    private static final int BRSF_AG_ENHANCED_ERR_RESULT_CODES = 1 << 8;BRSF_AG_ENHANCED_ERR_RESULT_CODES145,6031
    private static final int BRSF_HF_EC_NR = 1 << 0;BRSF_HF_EC_NR147,6105
    private static final int BRSF_HF_CW_THREE_WAY_CALLING = 1 << 1;BRSF_HF_CW_THREE_WAY_CALLING148,6158
    private static final int BRSF_HF_CLIP = 1 << 2;BRSF_HF_CLIP149,6226
    private static final int BRSF_HF_VOICE_REG_ACT = 1 << 3;BRSF_HF_VOICE_REG_ACT150,6278
    private static final int BRSF_HF_REMOTE_VOL_CONTROL = 1 << 4;BRSF_HF_REMOTE_VOL_CONTROL151,6339
    private static final int BRSF_HF_ENHANCED_CALL_STATUS = 1 <<  5;BRSF_HF_ENHANCED_CALL_STATUS152,6405
    private static final int BRSF_HF_ENHANCED_CALL_CONTROL = 1 << 6;BRSF_HF_ENHANCED_CALL_CONTROL153,6474
    public static String typeToString(int type) {typeToString155,6544
    public BluetoothHandsfree(Context context, CallManager cm) {BluetoothHandsfree167,6831
    /* package */ synchronized void onBluetoothEnabled() {onBluetoothEnabled212,8805
    /* package */ synchronized void onBluetoothDisabled() {onBluetoothDisabled225,9356
    private boolean isHeadsetConnected() {isHeadsetConnected233,9556
    /* package */ synchronized void connectHeadset(HeadsetBase headset, int headsetType) {connectHeadset240,9713
    private boolean isIncallAudio() {isIncallAudio266,10420
    /* package */ synchronized void disconnectHeadset() {disconnectHeadset272,10598
    /* package */ synchronized void resetAtState() {resetAtState280,10790
    private void configAudioParameters() {configAudioParameters294,11250
    private class BluetoothPhoneState {BluetoothPhoneState305,11601
        private int mService;mService308,11688
        private int mCall;mCall312,11827
        private int mCallsetup;mCallsetup318,12022
        private int mCallheld;mCallheld323,12152
        private int mSignal;mSignal326,12231
        private int mRssi;  // for CSQmRssi329,12315
        private int mRoam;mRoam333,12424
        private int mBattchg;mBattchg336,12489
        private int mStat;  // for CREGmStat341,12622
        private String mRingingNumber;  // Context for in-progress RING'smRingingNumber343,12663
        private int    mRingingType;mRingingType344,12737
        private boolean mIgnoreRing = false;mIgnoreRing345,12774
        private boolean mStopRing = false;mStopRing346,12819
        private static final int SERVICE_STATE_CHANGED = 1;SERVICE_STATE_CHANGED348,12863
        private static final int PRECISE_CALL_STATE_CHANGED = 2;PRECISE_CALL_STATE_CHANGED349,12923
        private static final int RING = 3;RING350,12988
        private static final int PHONE_CDMA_CALL_WAITING = 4;PHONE_CDMA_CALL_WAITING351,13031
        private Handler mStateChangeHandler = new Handler() {mStateChangeHandler353,13094
        private BluetoothPhoneState() {BluetoothPhoneState379,14185
        private void updateBtPhoneStateAfterRadioTechnologyChange() {updateBtPhoneStateAfterRadioTechnologyChange406,15734
        private boolean sendUpdate() {sendUpdate423,16655
        private boolean sendClipUpdate() {sendClipUpdate427,16802
        private void stopRing() {stopRing431,16940
        private int gsmAsuToSignal(SignalStrength signalStrength) {gsmAsuToSignal438,17166
        private int cdmaDbmEcioToSignal(SignalStrength signalStrength) {cdmaDbmEcioToSignal455,17802
        private int asuToSignal(SignalStrength signalStrength) {asuToSignal507,20033
        private int signalToRssi(int signal) {signalToRssi520,20487
        private final BroadcastReceiver mStateReceiver = new BroadcastReceiver() {mStateReceiver534,20837
        private synchronized void updateBatteryState(Intent intent) {updateBatteryState582,23481
        private synchronized void updateSignalState(Intent intent) {updateSignalState597,24044
        private synchronized void updateServiceState(boolean sendUpdate, ServiceState state) {updateServiceState621,24964
        private synchronized void handlePreciseCallStateChange(boolean sendUpdate,handlePreciseCallStateChange655,26109
        private int getCdmaCallHeldStatus(CdmaPhoneCallState.PhoneCallState currState,getCdmaCallHeldStatus890,36199
        private AtCommandResult ring() {ring911,37289
        private synchronized String toCregString() {toCregString926,37929
        private synchronized AtCommandResult toCindResult() {toCindResult930,38045
        private synchronized AtCommandResult toCsqResult() {toCsqResult940,38518
        private synchronized AtCommandResult getCindTestResult() {getCindTestResult948,38790
        private synchronized void ignoreRing() {ignoreRing954,39117
    private static final int SCO_ACCEPTED = 1;SCO_ACCEPTED964,39342
    private static final int SCO_CONNECTED = 2;SCO_CONNECTED965,39389
    private static final int SCO_CLOSED = 3;SCO_CLOSED966,39437
    private static final int CHECK_CALL_STARTED = 4;CHECK_CALL_STARTED967,39482
    private static final int CHECK_VOICE_RECOGNITION_STARTED = 5;CHECK_VOICE_RECOGNITION_STARTED968,39535
    private static final int MESSAGE_CHECK_PENDING_SCO = 6;MESSAGE_CHECK_PENDING_SCO969,39601
    private final Handler mHandler = new Handler() {mHandler971,39662
    private ScoSocket createScoSocket() {createScoSocket1055,43944
    private void broadcastAudioStateIntent(int state, BluetoothDevice device) {broadcastAudioStateIntent1059,44089
    private void broadcastVendorSpecificEventIntent(String command,broadcastVendorSpecificEventIntent1070,44641
    void updateBtHandsfreeAfterRadioTechnologyChange() {updateBtHandsfreeAfterRadioTechnologyChange1087,45630
    /* package */ synchronized boolean audioOn() {audioOn1098,46125
    /* package */ synchronized void userWantsAudioOn() {userWantsAudioOn1158,48186
    /* package */ synchronized void userWantsAudioOff() {userWantsAudioOff1166,48477
    /* package */ synchronized void audioOff() {audioOff1174,48732
    /* package */ boolean isAudioOn() {isAudioOn1209,49917
    private boolean isA2dpMultiProfile() {isA2dpMultiProfile1213,50004
    /* package */ void ignoreRing() {ignoreRing1218,50193
    private void sendURC(String urc) {sendURC1222,50281
    private AtCommandResult redial() {redial1229,50456
    private synchronized AtCommandResult gsmGetClccResult() {gsmGetClccResult1254,51650
    private String connectionToClccEntry(int index, Connection c) {connectionToClccEntry1334,54773
    private synchronized AtCommandResult cdmaGetClccResult() {cdmaGetClccResult1383,56094
    private String cdmaConnectionToClccEntry(int index, Connection c) {cdmaConnectionToClccEntry1438,59011
    private void registerVendorSpecificCommand(String commandName,registerVendorSpecificCommand1514,61924
    private void registerAllVendorSpecificCommands() {registerAllVendorSpecificCommands1524,62312
    private void initializeHeadsetAtParser() {initializeHeadsetAtParser1536,62737
    private void initializeHandsfreeAtParser() {initializeHandsfreeAtParser1589,65206
    public void sendScoGainUpdate(int gain) {sendScoGainUpdate2224,93446
    public AtCommandResult reportCmeError(int error) {reportCmeError2231,93660
    private static final int START_CALL_TIMEOUT = 10000;  // msSTART_CALL_TIMEOUT2241,94003
    private synchronized void expectCallStart() {expectCallStart2243,94068
    private synchronized void callStarted() {callStarted2252,94406
    private static final int START_VOICE_RECOGNITION_TIMEOUT = 5000;  // msSTART_VOICE_RECOGNITION_TIMEOUT2262,94681
    private synchronized void expectVoiceRecognition() {expectVoiceRecognition2264,94758
    /* package */ synchronized boolean startVoiceRecognition() {startVoiceRecognition2273,95173
    /* package */ synchronized boolean stopVoiceRecognition() {stopVoiceRecognition2289,95652
    private class VendorSpecificCommandHandler extends AtCommandHandler {VendorSpecificCommandHandler2298,95899
        private String mCommandName;mCommandName2300,95974
        private int mCompanyId;mCompanyId2302,96012
        private VendorSpecificCommandHandler(String commandName, int companyId) {VendorSpecificCommandHandler2304,96045
        public AtCommandResult handleSetCommand(Object[] arguments) {handleSetCommand2310,96232
    private boolean inDebug() {inDebug2319,96633
    private boolean allowAudioAnytime() {allowAudioAnytime2323,96759
    private void startDebug() {startDebug2328,96931
    private void stopDebug() {stopDebug2335,97103
    private class DebugThread extends Thread {DebugThread2345,97476
        private static final String DEBUG_HANDSFREE = "debug.bt.hfp";DEBUG_HANDSFREE2347,97584
        private static final String DEBUG_HANDSFREE_BATTERY = "debug.bt.hfp.battery";DEBUG_HANDSFREE_BATTERY2350,97709
        private static final String DEBUG_HANDSFREE_SERVICE = "debug.bt.hfp.service";DEBUG_HANDSFREE_SERVICE2353,97847
        private static final String DEBUG_HANDSFREE_ROAM = "debug.bt.hfp.roam";DEBUG_HANDSFREE_ROAM2356,97981
        private static final String DEBUG_HANDSFREE_AUDIO = "debug.bt.hfp.audio";DEBUG_HANDSFREE_AUDIO2361,98229
        private static final String DEBUG_HANDSFREE_AUDIO_ANYTIME = "debug.bt.hfp.audio_anytime";DEBUG_HANDSFREE_AUDIO_ANYTIME2365,98385
        private static final String DEBUG_HANDSFREE_SIGNAL = "debug.bt.hfp.signal";DEBUG_HANDSFREE_SIGNAL2368,98548
        private static final String DEBUG_HANDSFREE_CLCC = "debug.bt.hfp.clcc";DEBUG_HANDSFREE_CLCC2371,98682
        private static final String DEBUG_UNSOL_INBAND_RINGTONE =DEBUG_UNSOL_INBAND_RINGTONE2379,99022
        public void run() {run2383,99144
    public void cdmaSwapSecondCallState() {cdmaSwapSecondCallState2454,102176
    public void cdmaSetSecondCallState(boolean state) {cdmaSetSecondCallState2459,102370
    private static void log(String msg) {log2464,102568

src/com/android/phone/BluetoothHeadsetService.java,4513
package com.android.phone;com.android.phone17,621
public class BluetoothHeadsetService extends Service {BluetoothHeadsetService55,1813
    private static final String TAG = "BT HSHFP";TAG56,1868
    private static final boolean DBG = true;DBG57,1918
    private static final String PREF_NAME = BluetoothHeadsetService.class.getSimpleName();PREF_NAME59,1964
    private static final String PREF_LAST_HEADSET = "lastHeadsetAddress";PREF_LAST_HEADSET60,2055
    private static final int PHONE_STATE_CHANGED = 1;PHONE_STATE_CHANGED62,2130
    private static final String BLUETOOTH_ADMIN_PERM = android.Manifest.permission.BLUETOOTH_ADMIN;BLUETOOTH_ADMIN_PERM64,2185
    private static final String BLUETOOTH_PERM = android.Manifest.permission.BLUETOOTH;BLUETOOTH_PERM65,2285
    private static boolean sHasStarted = false;sHasStarted67,2374
    private BluetoothDevice mDeviceSdpQuery;mDeviceSdpQuery69,2423
    private BluetoothAdapter mAdapter;mAdapter70,2468
    private IBluetooth mBluetoothService;mBluetoothService71,2507
    private PowerManager mPowerManager;mPowerManager72,2549
    private BluetoothAudioGateway mAg;mAg73,2589
    private BluetoothHandsfree mBtHandsfree;mBtHandsfree74,2628
    private HashMap<BluetoothDevice, BluetoothRemoteHeadset> mRemoteHeadsets;mRemoteHeadsets75,2673
    public void onCreate() {onCreate78,2766
   private class BluetoothRemoteHeadset {BluetoothRemoteHeadset100,3841
       private int mState;mState101,3883
       private int mHeadsetType;mHeadsetType102,3910
       private HeadsetBase mHeadset;mHeadset103,3943
       private IncomingConnectionInfo mIncomingInfo;mIncomingInfo104,3980
       BluetoothRemoteHeadset() {BluetoothRemoteHeadset106,4034
       BluetoothRemoteHeadset(int headsetType, IncomingConnectionInfo incomingInfo) {BluetoothRemoteHeadset113,4255
   synchronized private BluetoothDevice getCurrentDevice() {getCurrentDevice121,4521
    public void onStart(Intent intent, int startId) {onStart133,4919
    private final Handler mIncomingConnectionHandler = new Handler() {mIncomingConnectionHandler149,5473
    private final BroadcastReceiver mBluetoothReceiver = new BroadcastReceiver() {mBluetoothReceiver245,9997
    private static final int CONNECT_HEADSET_DELAYED = 1;CONNECT_HEADSET_DELAYED313,13336
    private Handler mHandler = new Handler() {mHandler314,13394
    public IBinder onBind(Intent intent) {onBind327,13784
    private static final int RFCOMM_CONNECTED             = 1;RFCOMM_CONNECTED334,14039
    private static final int RFCOMM_ERROR                 = 2;RFCOMM_ERROR335,14102
    private long mTimestamp;mTimestamp337,14166
    private RfcommConnectThread mConnectThread;mConnectThread343,14327
    private class RfcommConnectThread extends Thread {RfcommConnectThread344,14375
        private BluetoothDevice device;device345,14430
        private int channel;channel346,14470
        private int type;type347,14499
        private static final int EINTERRUPT = -1000;EINTERRUPT349,14526
        private static final int ECONNREFUSED = -111;ECONNREFUSED350,14579
        public RfcommConnectThread(BluetoothDevice device, int channel, int type) {RfcommConnectThread352,14634
        private int waitForConnect(HeadsetBase headset) {waitForConnect359,14850
        public void run() {run374,15418
    private final Handler mConnectingStatusHandler = new Handler() {mConnectingStatusHandler425,17498
    private final Handler mConnectedStatusHandler = new Handler() {mConnectedStatusHandler459,18852
    private void setState(BluetoothDevice device, int state) {setState476,19478
    private void setState(BluetoothDevice device, int state, int result) {setState480,19614
    private synchronized void setState(BluetoothDevice device,setState484,19741
    private void adjustOtherHeadsetPriorities(BluetoothDevice connectedDevice) {adjustOtherHeadsetPriorities520,21494
    private void setPriority(BluetoothDevice device, int priority) {setPriority529,21864
    private int getPriority(BluetoothDevice device) {getPriority537,22124
    private void adjustPriorities() {adjustPriorities546,22418
    private synchronized void getSdpRecordsAndConnect(BluetoothDevice device) {getSdpRecordsAndConnect568,23326
    private final IBluetoothHeadset.Stub mBinder = new IBluetoothHeadset.Stub() {mBinder610,25296
    public void onDestroy() {onDestroy835,35736
    private static void log(String msg) {log851,36235

src/com/android/phone/ButtonGridLayout.java,1370
package com.android.phone;com.android.phone17,621
public class ButtonGridLayout extends ViewGroup {ButtonGridLayout47,1664
    static private final String TAG = "ButtonGridLayout";TAG48,1714
    static private final int COLUMNS = 3;COLUMNS49,1772
    static private final int ROWS = 4;ROWS50,1814
    static private final int NUM_CHILDREN = ROWS * COLUMNS;NUM_CHILDREN51,1853
    private View[] mButtons = new View[NUM_CHILDREN];mButtons53,1914
    private int mButtonWidth;mButtonWidth76,2512
    private int mButtonHeight;mButtonHeight77,2542
    private int mWidthInc;mWidthInc80,2621
    private int mHeightInc;mHeightInc81,2648
    private int mWidth;mWidth85,2758
    private int mHeight;mHeight86,2782
    public ButtonGridLayout(Context context) {ButtonGridLayout89,2809
    public ButtonGridLayout(Context context, AttributeSet attrs) {ButtonGridLayout93,2887
    public ButtonGridLayout(Context context, AttributeSet attrs, int defStyle) {ButtonGridLayout97,2992
    protected void onFinishInflate () {onFinishInflate108,3390
    public void setChildrenBackgroundResource(int resid) {setChildrenBackgroundResource133,4409
    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {onLayout141,4642
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {onMeasure171,5787

src/com/android/phone/CallCard.java,5339
package com.android.phone;com.android.phone17,621
public class CallCard extends FrameLayoutCallCard53,1813
    private static final String LOG_TAG = "CallCard";LOG_TAG56,2036
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG57,2090
    private InCallScreen mInCallScreen;mInCallScreen64,2357
    private PhoneApp mApplication;mApplication67,2424
    private ViewGroup mPrimaryCallInfo;mPrimaryCallInfo70,2502
    private ViewGroup mSecondaryCallInfo;mSecondaryCallInfo71,2542
    private TextView mUpperTitle;mUpperTitle74,2623
    private TextView mElapsedTime;mElapsedTime75,2657
    private int mTextColorDefaultPrimary;mTextColorDefaultPrimary78,2746
    private int mTextColorDefaultSecondary;mTextColorDefaultSecondary79,2788
    private int mTextColorConnected;mTextColorConnected80,2832
    private int mTextColorConnectedBluetooth;mTextColorConnectedBluetooth81,2869
    private int mTextColorEnded;mTextColorEnded82,2915
    private int mTextColorOnHold;mTextColorOnHold83,2948
    private int mTextColorCallTypeSip;mTextColorCallTypeSip84,2982
    private ImageView mPhoto;mPhoto88,3142
    private Button mManageConferencePhotoButton;  // Possibly shown in place of mPhotomManageConferencePhotoButton89,3172
    private TextView mName;mName90,3259
    private TextView mPhoneNumber;mPhoneNumber91,3287
    private TextView mLabel;mLabel92,3322
    private TextView mCallTypeLabel;mCallTypeLabel93,3351
    private TextView mSocialStatus;mSocialStatus94,3388
    private TextView mSecondaryCallName;mSecondaryCallName98,3527
    private TextView mSecondaryCallStatus;mSecondaryCallStatus99,3568
    private ImageView mSecondaryCallPhoto;mSecondaryCallPhoto100,3611
    private TextView mMenuButtonHint;mMenuButtonHint103,3679
    private int mRotarySelectorHintTextResId;mRotarySelectorHintTextResId106,3784
    private int mRotarySelectorHintColorResId;mRotarySelectorHintColorResId107,3830
    private CallTime mCallTime;mCallTime109,3878
    private ContactsAsyncHelper.ImageTracker mPhotoTracker;mPhotoTracker112,3949
    private float mDensity;mDensity115,4048
    public CallCard(Context context, AttributeSet attrs) {CallCard117,4077
    void setInCallScreenInstance(InCallScreen inCallScreen) {setInCallScreenInstance142,4958
    public void onTickForCallTimeElapsed(long timeElapsed) {onTickForCallTimeElapsed146,5065
    void stopTimer() {stopTimer153,5288
    protected void onFinishInflate() {onFinishInflate158,5365
    void updateState(CallManager cm) {updateState205,7726
    private void updateForegroundCall(CallManager cm) {updateForegroundCall264,10722
    private void updateRingingCall(CallManager cm) {updateRingingCall310,12655
    private void updateNoCall(CallManager cm) {updateNoCall333,13603
    private void displayMainCallStatus(CallManager cm, Call call) {displayMainCallStatus344,13944
    public void onQueryComplete(int token, Object cookie, CallerInfo ci) {onQueryComplete549,23802
    public void onImageLoadComplete(int token, Object cookie, ImageView iView,onImageLoadComplete596,26299
    private void updateCardTitleWidgets(Phone phone, Call call) {updateCardTitleWidgets611,26887
    private void updateElapsedTimeWidget(long timeElapsed) {updateElapsedTimeWidget733,32950
    private String getTitleForCallCard(Call call) {getTitleForCallCard748,33543
    private void displayOnHoldCallStatus(CallManager cm, Call call) {displayOnHoldCallStatus814,35957
    private String getCallFailedString(Call call) {getCallFailedString954,43702
    private void updateDisplayForPerson(CallerInfo info,updateDisplayForPerson1045,46715
    private String getPresentationString(int presentation) {getPresentationString1181,53439
    private void updateDisplayForConference(Call call) {updateDisplayForConference1198,54095
    private void updatePhotoForCallState(Call call) {updatePhotoForCallState1262,57264
    private static final boolean showCachedImage(ImageView view, CallerInfo ci) {showCachedImage1378,63026
    private static final void showImage(ImageView view, int resource) {showImage1391,63508
    private static final void showImage(ImageView view, Drawable drawable) {showImage1397,63764
    /* package */ TextView getMenuButtonHint() {getMenuButtonHint1407,64102
    private void setSideMargins(ViewGroup vg, int margin) {setSideMargins1418,64447
    private void setUpperTitle(String title, int color, Call.State state) {setUpperTitle1431,64950
    private void clearUpperTitle() {clearUpperTitle1452,65877
    private void updateCallTypeLabel(Call call) {updateCallTypeLabel1466,66447
    private void updateSocialStatus(String socialStatusText,updateSocialStatus1485,67345
    public void hideCallCardElements() {hideCallCardElements1517,68722
    /* package */ void setRotarySelectorHint(int hintTextResId, int hintColorResId) {setRotarySelectorHint1526,69030
    public void onClick(View view) {onClick1532,69276
    public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event) {dispatchPopulateAccessibilityEvent1554,70097
    private void dispatchPopulateAccessibilityEvent(AccessibilityEvent event, View view) {dispatchPopulateAccessibilityEvent1568,70875
    private void log(String msg) {log1581,71304

src/com/android/phone/CallFeaturesSetting.java,13653
package com.android.phone;com.android.phone17,621
public class CallFeaturesSetting extends PreferenceActivityCallFeaturesSetting67,2297
    public static final String ACTION_ADD_VOICEMAIL =ACTION_ADD_VOICEMAIL74,2628
    public static final String ACTION_CONFIGURE_VOICEMAIL =ACTION_CONFIGURE_VOICEMAIL78,2852
    public static final String VM_NUMBER_EXTRA = "com.android.phone.VoicemailNumber";VM_NUMBER_EXTRA81,3071
    public static final String FWD_NUMBER_EXTRA = "com.android.phone.ForwardingNumber";FWD_NUMBER_EXTRA83,3253
    public static final String FWD_NUMBER_TIME_EXTRA = "com.android.phone.ForwardingNumberTime";FWD_NUMBER_TIME_EXTRA85,3437
    public static final String SIGNOUT_EXTRA = "com.android.phone.Signout";SIGNOUT_EXTRA88,3657
    public static final CallForwardInfo[] FWD_SETTINGS_DONT_TOUCH = null;FWD_SETTINGS_DONT_TOUCH91,3804
    public static final String VM_NUMBER_TAG = "#VMNumber";VM_NUMBER_TAG93,3939
    public static final String FWD_SETTINGS_TAG = "#FWDSettings";FWD_SETTINGS_TAG95,4070
    public static final String FWD_SETTINGS_LENGTH_TAG = "#Length";FWD_SETTINGS_LENGTH_TAG97,4220
    public static final String FWD_SETTING_TAG = "#Setting";FWD_SETTING_TAG99,4369
    public static final String FWD_SETTING_STATUS = "#Status";FWD_SETTING_STATUS101,4523
    public static final String FWD_SETTING_REASON = "#Reason";FWD_SETTING_REASON102,4586
    public static final String FWD_SETTING_NUMBER = "#Number";FWD_SETTING_NUMBER103,4649
    public static final String FWD_SETTING_TIME = "#Time";FWD_SETTING_TIME104,4712
    public static final String DEFAULT_VM_PROVIDER_KEY = "";DEFAULT_VM_PROVIDER_KEY107,4827
    public static final String IGNORE_PROVIDER_EXTRA = "com.android.phone.ProviderToIgnore";IGNORE_PROVIDER_EXTRA111,5030
    private static final String LOG_TAG = "CallFeaturesSetting";LOG_TAG114,5142
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG115,5207
    private static final String NUM_PROJECTION[] = {CommonDataKinds.Phone.NUMBER};NUM_PROJECTION118,5298
    private static final String BUTTON_VOICEMAIL_KEY = "button_voicemail_key";BUTTON_VOICEMAIL_KEY121,5423
    private static final String BUTTON_VOICEMAIL_PROVIDER_KEY = "button_voicemail_provider_key";BUTTON_VOICEMAIL_PROVIDER_KEY122,5502
    private static final String BUTTON_VOICEMAIL_SETTING_KEY = "button_voicemail_setting_key";BUTTON_VOICEMAIL_SETTING_KEY123,5599
    private static final String BUTTON_FDN_KEY   = "button_fdn_key";BUTTON_FDN_KEY124,5694
    private static final String BUTTON_DTMF_KEY   = "button_dtmf_settings";BUTTON_DTMF_KEY126,5764
    private static final String BUTTON_RETRY_KEY  = "button_auto_retry_key";BUTTON_RETRY_KEY127,5840
    private static final String BUTTON_TTY_KEY    = "button_tty_mode_key";BUTTON_TTY_KEY128,5917
    private static final String BUTTON_HAC_KEY    = "button_hac_key";BUTTON_HAC_KEY129,5992
    private static final String BUTTON_GSM_UMTS_OPTIONS = "button_gsm_more_expand_key";BUTTON_GSM_UMTS_OPTIONS131,6063
    private static final String BUTTON_CDMA_OPTIONS = "button_cdma_more_expand_key";BUTTON_CDMA_OPTIONS132,6151
    private static final String VM_NUMBERS_SHARED_PREFERENCES_NAME = "vm_numbers";VM_NUMBERS_SHARED_PREFERENCES_NAME134,6237
    private static final String BUTTON_SIP_CALL_OPTIONS =BUTTON_SIP_CALL_OPTIONS136,6321
    private static final String BUTTON_SIP_CALL_OPTIONS_WIFI_ONLY =BUTTON_SIP_CALL_OPTIONS_WIFI_ONLY138,6415
    private static final String SIP_SETTINGS_CATEGORY_KEY =SIP_SETTINGS_CATEGORY_KEY140,6529
    private Intent mContactListIntent;mContactListIntent143,6631
    private static final int EVENT_VOICEMAIL_CHANGED        = 500;EVENT_VOICEMAIL_CHANGED146,6720
    private static final int EVENT_FORWARDING_CHANGED       = 501;EVENT_FORWARDING_CHANGED147,6787
    private static final int EVENT_FORWARDING_GET_COMPLETED = 502;EVENT_FORWARDING_GET_COMPLETED148,6854
    static final int preferredTtyMode = Phone.TTY_MODE_OFF;preferredTtyMode152,6974
    static final int DTMF_TONE_TYPE_NORMAL = 0;DTMF_TONE_TYPE_NORMAL155,7058
    static final int DTMF_TONE_TYPE_LONG   = 1;DTMF_TONE_TYPE_LONG156,7106
    public static final String HAC_KEY = "HACSetting";HAC_KEY158,7155
    public static final String HAC_VAL_ON = "ON";HAC_VAL_ON159,7210
    public static final String HAC_VAL_OFF = "OFF";HAC_VAL_OFF160,7260
    private static final int VOICEMAIL_PREF_ID = 1;VOICEMAIL_PREF_ID163,7349
    private static final int VOICEMAIL_PROVIDER_CFG_ID = 2;VOICEMAIL_PROVIDER_CFG_ID164,7401
    private Phone mPhone;mPhone166,7462
    private AudioManager mAudioManager;mAudioManager168,7489
    private SipManager mSipManager;mSipManager169,7529
    private static final int VM_NOCHANGE_ERROR = 400;VM_NOCHANGE_ERROR171,7566
    private static final int VM_RESPONSE_ERROR = 500;VM_RESPONSE_ERROR172,7620
    private static final int FW_SET_RESPONSE_ERROR = 501;FW_SET_RESPONSE_ERROR173,7674
    private static final int FW_GET_RESPONSE_ERROR = 502;FW_GET_RESPONSE_ERROR174,7732
    private static final int VOICEMAIL_DIALOG_CONFIRM = 600;VOICEMAIL_DIALOG_CONFIRM178,7832
    private static final int VOICEMAIL_FWD_SAVING_DIALOG = 601;VOICEMAIL_FWD_SAVING_DIALOG179,7893
    private static final int VOICEMAIL_FWD_READING_DIALOG = 602;VOICEMAIL_FWD_READING_DIALOG180,7957
    private static final int VOICEMAIL_REVERTING_DIALOG = 603;VOICEMAIL_REVERTING_DIALOG181,8022
    private static final int MSG_OK = 100;MSG_OK184,8132
    private static final int MSG_VM_EXCEPTION = 400;MSG_VM_EXCEPTION187,8224
    private static final int MSG_FW_SET_EXCEPTION = 401;MSG_FW_SET_EXCEPTION188,8277
    private static final int MSG_FW_GET_EXCEPTION = 402;MSG_FW_GET_EXCEPTION189,8334
    private static final int MSG_VM_OK = 600;MSG_VM_OK190,8391
    private static final int MSG_VM_NOCHANGE = 700;MSG_VM_NOCHANGE191,8437
    private EditPhoneNumberPreference mSubMenuVoicemailSettings;mSubMenuVoicemailSettings193,8490
    private CheckBoxPreference mButtonAutoRetry;mButtonAutoRetry195,8556
    private CheckBoxPreference mButtonHAC;mButtonHAC196,8605
    private ListPreference mButtonDTMF;mButtonDTMF197,8648
    private ListPreference mButtonTTY;mButtonTTY198,8688
    private ListPreference mButtonSipCallOptions;mButtonSipCallOptions199,8727
    private ListPreference mVoicemailProviders;mVoicemailProviders200,8777
    private PreferenceScreen mVoicemailSettings;mVoicemailSettings201,8825
    private SipSharedPreferences mSipSharedPreferences;mSipSharedPreferences202,8874
    private class VoiceMailProvider {VoiceMailProvider204,8931
        public VoiceMailProvider(String name, Intent intent) {VoiceMailProvider205,8969
        public String name;name209,9106
        public Intent intent;intent210,9134
    static final int [] FORWARDING_SETTINGS_REASONS = new int[] {FORWARDING_SETTINGS_REASONS216,9236
    private class VoiceMailProviderSettings {VoiceMailProviderSettings223,9499
        public VoiceMailProviderSettings(String voicemailNumber, String forwardingNumber,VoiceMailProviderSettings227,9667
        public VoiceMailProviderSettings(String voicemailNumber, CallForwardInfo[] infos) {VoiceMailProviderSettings247,10748
        public boolean equals(Object o) {equals253,10966
        private boolean forwardingSettingsEqual(CallForwardInfo[] infos1,forwardingSettingsEqual267,11586
        public String toString() {toString288,12439
        public String voicemailNumber;voicemailNumber293,12621
        public CallForwardInfo[] forwardingSettings;forwardingSettings294,12660
    SharedPreferences mPerProviderSavedVMNumbers;mPerProviderSavedVMNumbers297,12720
    CallForwardInfo[] mForwardingReadResults = null;mForwardingReadResults302,12833
    private Map<Integer, AsyncResult> mForwardingChangeResults = null;mForwardingChangeResults308,13002
    private Collection<Integer> mExpectedChangeResultReasons = null;mExpectedChangeResultReasons315,13275
    AsyncResult mVoicemailChangeResult = null;mVoicemailChangeResult320,13395
    String mPreviousVMProviderKey = null;mPreviousVMProviderKey325,13538
    int mCurrentDialogId = 0;mCurrentDialogId330,13644
    boolean mVMProviderSettingsForced = false;mVMProviderSettingsForced336,13822
    boolean mChangingVMorFwdDueToProviderChange = false;mChangingVMorFwdDueToProviderChange342,13991
    boolean mVMChangeCompletedSuccesfully = false;mVMChangeCompletedSuccesfully348,14223
    boolean mFwdChangesRequireRollback = false;mFwdChangesRequireRollback354,14402
    int mVMOrFwdSetError = 0;mVMOrFwdSetError360,14580
    private final Map<String, VoiceMailProvider> mVMProvidersData =mVMProvidersData370,14988
    private String mOldVmNumber;mOldVmNumber374,15178
    private CallForwardInfo[] mNewFwdSettings;mNewFwdSettings379,15410
    String mNewVMNumber;mNewVMNumber380,15457
    private boolean mForeground;mForeground382,15483
    public void onPause() {onPause385,15531
    private boolean mReadingSettingsForDefaultProvider = false;mReadingSettingsForDefaultProvider396,15933
    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {onPreferenceTreeClick404,16142
    public boolean onPreferenceChange(Preference preference, Object objValue) {onPreferenceChange441,17825
    public void onDialogClosed(EditPhoneNumberPreference preference, int buttonClicked) {onDialogClosed489,20251
    public String onGetDefaultNumber(EditPhoneNumberPreference preference) {onGetDefaultNumber509,20991
    public void startActivityForResult(Intent intent, int requestCode) {startActivityForResult533,21969
    private void switchToPreviousVoicemailProvider() {switchToPreviousVoicemailProvider544,22383
    void onRevertDone() {onRevertDone596,25234
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {onActivityResult610,25769
    private void handleVMBtnClickRequest() {handleVMBtnClickRequest697,29930
    private void showDialogIfForeground(int id) {showDialogIfForeground734,31541
    private void dismissDialogSafely(int id) {dismissDialogSafely740,31663
    private void saveVoiceMailAndForwardingNumber(String key,saveVoiceMailAndForwardingNumber750,32000
    private final Handler mGetOptionComplete = new Handler() {mGetOptionComplete796,34082
    void handleForwardingSettingsReadResult(AsyncResult ar, int idx) {handleForwardingSettingsReadResult808,34486
    private CallForwardInfo infoForReason(CallForwardInfo[] infos, int reason) {infoForReason888,37762
    private boolean isUpdateRequired(CallForwardInfo oldInfo,isUpdateRequired901,38139
    private void resetForwardingChangeState() {resetForwardingChangeState914,38586
    private void saveVoiceMailAndForwardingNumberStage2() {saveVoiceMailAndForwardingNumberStage2921,38869
    void setVMNumberWithCarrier() {setVMNumberWithCarrier954,40273
    private final Handler mSetOptionComplete = new Handler() {mSetOptionComplete965,40644
    private final Handler mRevertOptionComplete = new Handler() {mRevertOptionComplete1025,43560
    private boolean checkForwardingCompleted() {checkForwardingCompleted1061,45095
    private String checkFwdChangeSuccess() {checkFwdChangeSuccess1081,45740
    private String checkVMChangeSuccess() {checkVMChangeSuccess1102,46402
    private void handleSetVMOrFwdMessage() {handleSetVMOrFwdMessage1113,46714
    private void handleVMOrFwdSetError(int msgId) {handleVMOrFwdSetError1148,47876
    private void handleVMAndFwdSetSuccess(int msgId) {handleVMAndFwdSetSuccess1160,48276
    private void updateVoiceNumberField() {updateVoiceNumberField1169,48569
    protected void onPrepareDialog(int id, Dialog dialog) {onPrepareDialog1194,49443
    protected Dialog onCreateDialog(int id) {onCreateDialog1201,49652
    public void onClick(DialogInterface dialog, int which) {onClick1279,53206
    private void showVMDialog(int msgStatus) {showVMDialog1315,54850
    protected void onCreate(Bundle icicle) {onCreate1345,55832
    private void createSipCallSettings() {createSipCallSettings1458,60738
    private ListPreference getSipCallOptionPreference() {getSipCallOptionPreference1475,61626
    protected void onResume() {onResume1492,62284
    private boolean isAirplaneModeOn() {isAirplaneModeOn1533,63847
    private void handleTTYChange(Preference preference, Object objValue) {handleTTYChange1538,64014
    private void handleSipCallOptionsChange(Object objValue) {handleSipCallOptionsChange1568,65390
    private void updatePreferredTtyModeSummary(int TtyMode) {updatePreferredTtyModeSummary1576,65747
    private static void log(String msg) {log1591,66292
    private void updateVMPreferenceWidgets(String currentProviderSetting) {updateVMPreferenceWidgets1600,66629
    private void initVoiceMailProviders() {initVoiceMailProviders1632,68379
    private String makeKeyForActivity(ActivityInfo ai) {makeKeyForActivity1709,71701
    private void simulatePreferenceClick(Preference preference) {simulatePreferenceClick1719,72093
    private void maybeSaveSettingsForVoicemailProvider(String key,maybeSaveSettingsForVoicemailProvider1738,72923
    private VoiceMailProviderSettings loadSettingsForVoiceMailProvider(String key) {loadSettingsForVoiceMailProvider1777,74859
    private void deleteSettingsForVoicemailProvider(String key) {deleteSettingsForVoicemailProvider1815,76700
    private String getCurrentVoicemailProviderKey() {getCurrentVoicemailProviderKey1826,77087

src/com/android/phone/CallForwardEditPreference.java,1902
package com.android.phone;com.android.phone1,0
public class CallForwardEditPreference extends EditPhoneNumberPreference {CallForwardEditPreference22,694
    private static final String LOG_TAG = "CallForwardEditPreference";LOG_TAG23,769
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG24,840
    private static final String SRC_TAGS[]       = {"{0}"};SRC_TAGS26,907
    private CharSequence mSummaryOnTemplate;mSummaryOnTemplate27,967
    private int mButtonClicked;mButtonClicked28,1012
    private int mServiceClass;mServiceClass29,1044
    private MyHandler mHandler = new MyHandler();mHandler30,1075
    int reason;reason31,1125
    Phone phone;phone32,1141
    CallForwardInfo callForwardInfo;callForwardInfo33,1158
    TimeConsumingPreferenceListener tcpListener;tcpListener34,1195
    public CallForwardEditPreference(Context context, AttributeSet attrs) {CallForwardEditPreference36,1245
    public CallForwardEditPreference(Context context) {CallForwardEditPreference53,1999
    void init(TimeConsumingPreferenceListener listener, boolean skipReading) {init57,2091
    public void onClick(DialogInterface dialog, int which) {onClick72,2662
    protected void onDialogClosed(boolean positiveResult) {onDialogClosed78,2814
    void handleCallForwardResult(CallForwardInfo cf) {handleCallForwardResult124,4798
    private void updateSummaryText() {updateSummaryText132,5085
    private class MyHandler extends Handler {MyHandler151,5753
        private static final int MESSAGE_GET_CF = 0;MESSAGE_GET_CF152,5799
        private static final int MESSAGE_SET_CF = 1;MESSAGE_SET_CF153,5852
        public void handleMessage(Message msg) {handleMessage156,5924
        private void handleGetCFResponse(Message msg) {handleGetCFResponse167,6250
        private void handleSetCFResponse(Message msg) {handleSetCFResponse237,10029

src/com/android/phone/CallLogAsync.java,2178
package com.android.phone;com.android.phone17,621
public class CallLogAsync {CallLogAsync54,1741
    private static final String TAG = "CallLogAsync";TAG55,1769
    public static class AddCallArgs {AddCallArgs60,1915
        public AddCallArgs(Context context,AddCallArgs70,2421
        public final Context context;context104,4118
        public final CallerInfo ci;ci105,4156
        public final String number;number106,4192
        public final int presentation;presentation107,4228
        public final int callType;callType108,4267
        public final long timestamp;timestamp109,4302
        public final int durationInSec;durationInSec110,4339
    public static class GetLastOutgoingCallArgs {GetLastOutgoingCallArgs117,4502
        public GetLastOutgoingCallArgs(Context context,GetLastOutgoingCallArgs118,4552
        public final Context context;context123,4770
        public final OnLastOutgoingCallComplete callback;callback124,4808
    public AsyncTask addCall(AddCallArgs args) {addCall130,4941
    public interface OnLastOutgoingCallComplete {OnLastOutgoingCallComplete136,5143
        void lastOutgoingCall(String number);lastOutgoingCall139,5310
    public AsyncTask getLastOutgoingCall(GetLastOutgoingCallArgs args) {getLastOutgoingCall145,5419
    private class AddCallTask extends AsyncTask<AddCallArgs, Void, Uri[]> {AddCallTask153,5656
        protected Uri[] doInBackground(AddCallArgs... callList) {doInBackground155,5750
        protected void onPostExecute(Uri[] result) {onPostExecute173,6463
    private class GetLastOutgoingCallTask extends AsyncTask<GetLastOutgoingCallArgs, Void, String> {GetLastOutgoingCallTask185,6781
        private final OnLastOutgoingCallComplete mCallback;mCallback186,6882
        private String mNumber;mNumber187,6942
        public GetLastOutgoingCallTask(OnLastOutgoingCallComplete callback) {GetLastOutgoingCallTask188,6974
        protected String doInBackground(GetLastOutgoingCallArgs... list) {doInBackground197,7367
        protected void onPostExecute(String number) {onPostExecute210,7914
    private void assertUiThread() {assertUiThread216,8063

src/com/android/phone/CallNotifier.java,10645
package com.android.phone;com.android.phone17,621
public class CallNotifier extends HandlerCallNotifier59,2277
    private static final String LOG_TAG = "CallNotifier";LOG_TAG61,2385
    private static final boolean DBG =DBG62,2443
    private static final boolean VDBG = (PhoneApp.DBG_LEVEL >= 2);VDBG64,2575
    private static final int RINGTONE_QUERY_WAIT_TIME = 500;  // msecRINGTONE_QUERY_WAIT_TIME68,2767
    private static final int CALLWAITING_CALLERINFO_DISPLAY_TIME = 20000; // msecCALLWAITING_CALLERINFO_DISPLAY_TIME73,3012
    private static final int CALLWAITING_ADDCALL_DISABLE_TIME = 30000; // msecCALLWAITING_ADDCALL_DISABLE_TIME74,3094
    private static final int DISPLAYINFO_NOTIFICATION_TIME = 2000; // msecDISPLAYINFO_NOTIFICATION_TIME77,3242
    private boolean mCallWaitingTimeOut = false;mCallWaitingTimeOut104,4819
    private static final int CALLERINFO_QUERY_READY = 0;CALLERINFO_QUERY_READY107,4913
    private static final int CALLERINFO_QUERYING = -1;CALLERINFO_QUERYING108,4970
    private int mCallerInfoQueryState;mCallerInfoQueryState111,5068
    private Object mCallerInfoQueryStateGuard = new Object();mCallerInfoQueryStateGuard114,5174
    private static final int RINGER_CUSTOM_RINGTONE_QUERY_TIMEOUT = 100;RINGER_CUSTOM_RINGTONE_QUERY_TIMEOUT117,5284
    private static final int PHONE_STATE_CHANGED = 1;PHONE_STATE_CHANGED120,5395
    private static final int PHONE_NEW_RINGING_CONNECTION = 2;PHONE_NEW_RINGING_CONNECTION121,5449
    private static final int PHONE_DISCONNECT = 3;PHONE_DISCONNECT122,5512
    private static final int PHONE_UNKNOWN_CONNECTION_APPEARED = 4;PHONE_UNKNOWN_CONNECTION_APPEARED123,5563
    private static final int PHONE_INCOMING_RING = 5;PHONE_INCOMING_RING124,5631
    private static final int PHONE_STATE_DISPLAYINFO = 6;PHONE_STATE_DISPLAYINFO125,5685
    private static final int PHONE_STATE_SIGNALINFO = 7;PHONE_STATE_SIGNALINFO126,5743
    private static final int PHONE_CDMA_CALL_WAITING = 8;PHONE_CDMA_CALL_WAITING127,5800
    private static final int PHONE_ENHANCED_VP_ON = 9;PHONE_ENHANCED_VP_ON128,5858
    private static final int PHONE_ENHANCED_VP_OFF = 10;PHONE_ENHANCED_VP_OFF129,5913
    private static final int PHONE_RINGBACK_TONE = 11;PHONE_RINGBACK_TONE130,5970
    private static final int PHONE_RESEND_MUTE = 12;PHONE_RESEND_MUTE131,6025
    private static final int PHONE_MWI_CHANGED = 21;PHONE_MWI_CHANGED134,6115
    private static final int PHONE_BATTERY_LOW = 22;PHONE_BATTERY_LOW135,6168
    private static final int CALLWAITING_CALLERINFO_DISPLAY_DONE = 23;CALLWAITING_CALLERINFO_DISPLAY_DONE136,6221
    private static final int CALLWAITING_ADDCALL_DISABLE_TIMEOUT = 24;CALLWAITING_ADDCALL_DISABLE_TIMEOUT137,6292
    private static final int DISPLAYINFO_NOTIFICATION_DONE = 25;DISPLAYINFO_NOTIFICATION_DONE138,6363
    private static final int EVENT_OTA_PROVISION_CHANGE = 26;EVENT_OTA_PROVISION_CHANGE139,6428
    private static final int CDMA_CALL_WAITING_REJECT = 27;CDMA_CALL_WAITING_REJECT140,6490
    private static final int EMERGENCY_TONE_OFF = 0;EMERGENCY_TONE_OFF143,6590
    private static final int EMERGENCY_TONE_ALERT = 1;EMERGENCY_TONE_ALERT144,6643
    private static final int EMERGENCY_TONE_VIBRATE = 2;EMERGENCY_TONE_VIBRATE145,6698
    private PhoneApp mApplication;mApplication147,6756
    private CallManager mCM;mCM148,6791
    private Ringer mRinger;mRinger149,6820
    private BluetoothHandsfree mBluetoothHandsfree;mBluetoothHandsfree150,6848
    private CallLogAsync mCallLog;mCallLog151,6900
    private boolean mSilentRingerRequested;mSilentRingerRequested152,6935
    private ToneGenerator mSignalInfoToneGenerator;mSignalInfoToneGenerator155,7039
    private static final int TONE_RELATIVE_VOLUME_SIGNALINFO = 80;TONE_RELATIVE_VOLUME_SIGNALINFO158,7165
    private Call.State mPreviousCdmaCallState;mPreviousCdmaCallState160,7233
    private boolean mCdmaVoicePrivacyState = false;mCdmaVoicePrivacyState161,7280
    private boolean mIsCdmaRedialCall = false;mIsCdmaRedialCall162,7332
    private int mIsEmergencyToneOn;mIsEmergencyToneOn165,7420
    private int mCurrentEmergencyToneState = EMERGENCY_TONE_OFF;mCurrentEmergencyToneState166,7456
    private EmergencyTonePlayerVibrator mEmergencyTonePlayerVibrator;mEmergencyTonePlayerVibrator167,7521
    private InCallTonePlayer mInCallRingbackTonePlayer;mInCallRingbackTonePlayer170,7620
    private InCallTonePlayer mCallWaitingTonePlayer;mCallWaitingTonePlayer173,7709
    private AudioManager mAudioManager;mAudioManager176,7790
    public CallNotifier(PhoneApp app, Phone phone, Ringer ringer,CallNotifier178,7831
    public void handleMessage(Message msg) {handleMessage212,9293
    PhoneStateListener mPhoneStateListener = new PhoneStateListener() {mPhoneStateListener349,14875
    private void onNewRingingConnection(AsyncResult r) {onNewRingingConnection361,15210
    private void startIncomingCallQuery(Connection c) {startIncomingCallQuery483,21117
    private void onCustomRingQueryComplete() {onCustomRingQueryComplete556,24667
    private void onUnknownConnectionAppeared(AsyncResult r) {onUnknownConnectionAppeared599,26655
    private void showIncomingCall() {showIncomingCall629,27877
    private void onPhoneStateChanged(AsyncResult r) {onPhoneStateChanged687,30718
    void updateCallNotifierRegistrationsAfterRadioTechnologyChange() {updateCallNotifierRegistrationsAfterRadioTechnologyChange798,36057
    private void registerForNotifications() {registerForNotifications831,37372
    public void onQueryComplete(int token, Object cookie, CallerInfo ci) {onQueryComplete853,38716
    private void onDisconnect(AsyncResult r) {onDisconnect895,40573
    private void resetAudioStateAfterDisconnect() {resetAudioStateAfterDisconnect1172,54797
    private void onMwiChanged(boolean visible) {onMwiChanged1186,55262
    /* package */ void sendMwiChangedDelayed(long delayMillis) {sendMwiChangedDelayed1195,55568
    private void onCfiChanged(boolean visible) {onCfiChanged1200,55757
    boolean isRinging() {isRinging1208,55995
    void silenceRinger() {silenceRinger1216,56186
    /* package */ void sendBatteryLow() {sendBatteryLow1226,56463
    private void onBatteryLow() {onBatteryLow1231,56609
    private class InCallTonePlayer extends Thread {InCallTonePlayer1256,57589
        private int mToneId;mToneId1257,57641
        private int mState;mState1258,57670
        public static final int TONE_NONE = 0;TONE_NONE1260,57741
        public static final int TONE_CALL_WAITING = 1;TONE_CALL_WAITING1261,57788
        public static final int TONE_BUSY = 2;TONE_BUSY1262,57843
        public static final int TONE_CONGESTION = 3;TONE_CONGESTION1263,57890
        public static final int TONE_BATTERY_LOW = 4;TONE_BATTERY_LOW1264,57943
        public static final int TONE_CALL_ENDED = 5;TONE_CALL_ENDED1265,57997
        public static final int TONE_VOICE_PRIVACY = 6;TONE_VOICE_PRIVACY1266,58050
        public static final int TONE_REORDER = 7;TONE_REORDER1267,58106
        public static final int TONE_INTERCEPT = 8;TONE_INTERCEPT1268,58156
        public static final int TONE_CDMA_DROP = 9;TONE_CDMA_DROP1269,58208
        public static final int TONE_OUT_OF_SERVICE = 10;TONE_OUT_OF_SERVICE1270,58260
        public static final int TONE_REDIAL = 11;TONE_REDIAL1271,58318
        public static final int TONE_OTA_CALL_END = 12;TONE_OTA_CALL_END1272,58368
        public static final int TONE_RING_BACK = 13;TONE_RING_BACK1273,58424
        public static final int TONE_UNOBTAINABLE_NUMBER = 14;TONE_UNOBTAINABLE_NUMBER1274,58477
        private static final int TONE_RELATIVE_VOLUME_HIPRI = 80;TONE_RELATIVE_VOLUME_HIPRI1277,58607
        private static final int TONE_RELATIVE_VOLUME_LOPRI = 50;TONE_RELATIVE_VOLUME_LOPRI1278,58673
        private static final int TONE_TIMEOUT_BUFFER = 20;TONE_TIMEOUT_BUFFER1283,58918
        private static final int TONE_OFF = 0;TONE_OFF1286,59004
        private static final int TONE_ON = 1;TONE_ON1287,59051
        private static final int TONE_STOPPED = 2;TONE_STOPPED1288,59097
        InCallTonePlayer(int toneId) {InCallTonePlayer1290,59149
        public void run() {run1297,59299
        public void stopTone() {stopTone1506,70102
    private void onDisplayInfo(AsyncResult r) {onDisplayInfo1519,70421
    private class SignalInfoTonePlayer extends Thread {SignalInfoTonePlayer1541,71255
        private int mToneId;mToneId1542,71311
        SignalInfoTonePlayer(int toneId) {SignalInfoTonePlayer1544,71341
        public void run() {run1550,71464
    private void onSignalInfo(AsyncResult r) {onSignalInfo1566,71977
    /* package */ void stopSignalInfoTone() {stopSignalInfoTone1602,73706
    private void onCdmaCallWaiting(AsyncResult r) {onCdmaCallWaiting1610,74009
    /* package */ void sendCdmaCallWaitingReject() {sendCdmaCallWaitingReject1665,76482
    private void onCdmaCallWaitingReject() {onCdmaCallWaitingReject1676,76866
    /* package */ Call.State getPreviousCdmaCallState() {getPreviousCdmaCallState1736,79440
    /* package */ boolean getCdmaVoicePrivacyState() {getCdmaVoicePrivacyState1743,79619
    /* package */ boolean getIsCdmaRedialCall() {getIsCdmaRedialCall1750,79790
    private void showMissedCallNotification(Connection c, final long date) {showMissedCallNotification1757,79961
    private class EmergencyTonePlayerVibrator {EmergencyTonePlayerVibrator1795,81953
        private final int EMG_VIBRATE_LENGTH = 1000;  // ms.EMG_VIBRATE_LENGTH1796,82001
        private final int EMG_VIBRATE_PAUSE  = 1000;  // ms.EMG_VIBRATE_PAUSE1797,82062
        private final long[] mVibratePattern =mVibratePattern1798,82123
        private ToneGenerator mToneGenerator;mToneGenerator1801,82241
        private Vibrator mEmgVibrator;mEmgVibrator1802,82287
        public EmergencyTonePlayerVibrator() {EmergencyTonePlayerVibrator1807,82374
        private void start() {start1813,82505
        private void stop() {stop1839,83735
    private void onRingbackTone(AsyncResult r) {onRingbackTone1854,84292
    private void onResendMute() {onResendMute1878,85255
    private String getLogNumber(Connection conn, CallerInfo callerInfo) {getLogNumber1898,86045
    private CallerInfo getCallerInfoFromConnection(Connection conn) {getCallerInfoFromConnection1944,87868
    private int getPresentation(Connection conn, CallerInfo callerInfo) {getPresentation1964,88482
    private void log(String msg) {log1978,89012

src/com/android/phone/CallTime.java,2107
package com.android.phone;com.android.phone17,621
public class CallTime extends Handler {CallTime34,1079
    private static final String LOG_TAG = "PHONE/CallTime";LOG_TAG35,1119
    private static final boolean DBG = false;DBG36,1179
    /* package */ static final boolean PROFILE = true;PROFILE37,1225
    private static final int PROFILE_STATE_NONE = 0;PROFILE_STATE_NONE39,1281
    private static final int PROFILE_STATE_READY = 1;PROFILE_STATE_READY40,1334
    private static final int PROFILE_STATE_RUNNING = 2;PROFILE_STATE_RUNNING41,1388
    private static int sProfileState = PROFILE_STATE_NONE;sProfileState43,1445
    private Call mCall;mCall45,1505
    private long mLastReportedTime;mLastReportedTime46,1529
    private boolean mTimerRunning;mTimerRunning47,1565
    private long mInterval;mInterval48,1600
    private PeriodicTimerCallback mTimerCallback;mTimerCallback49,1628
    private OnTickListener mListener;mListener50,1678
    interface OnTickListener {OnTickListener52,1717
        void onTickForCallTimeElapsed(long timeElapsed);onTickForCallTimeElapsed53,1748
    public CallTime(OnTickListener listener) {CallTime56,1812
    /* package */ void setActiveCallMode(Call call) {setActiveCallMode69,2252
    /* package */ void reset() {reset77,2493
    /* package */ void periodicUpdateTimer() {periodicUpdateTimer82,2637
    /* package */ void cancelTimer() {cancelTimer113,3539
    private void updateElapsedTime(Call call) {updateElapsedTime119,3699
    /* package */ static long getCallDuration(Call call) {getCallDuration130,4040
    private static void log(String msg) {log157,5025
    private class PeriodicTimerCallback implements Runnable {PeriodicTimerCallback161,5119
        PeriodicTimerCallback() {PeriodicTimerCallback162,5181
        public void run() {run166,5227
    static void setTraceReady() {setTraceReady176,5433
    boolean isTraceReady() {isTraceReady185,5695
    boolean isTraceRunning() {isTraceRunning189,5784
    void startTrace() {startTrace193,5877
    void stopTrace() {stopTrace222,6928

src/com/android/phone/CallWaitingCheckBoxPreference.java,1506
package com.android.phone;com.android.phone1,0
public class CallWaitingCheckBoxPreference extends CheckBoxPreference {CallWaitingCheckBoxPreference20,584
    private static final String LOG_TAG = "CallWaitingCheckBoxPreference";LOG_TAG21,656
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG22,731
    private final MyHandler mHandler = new MyHandler();mHandler24,791
    Phone phone;phone25,847
    TimeConsumingPreferenceListener tcpListener;tcpListener26,864
    public CallWaitingCheckBoxPreference(Context context, AttributeSet attrs, int defStyle) {CallWaitingCheckBoxPreference28,914
    public CallWaitingCheckBoxPreference(Context context, AttributeSet attrs) {CallWaitingCheckBoxPreference34,1105
    public CallWaitingCheckBoxPreference(Context context) {CallWaitingCheckBoxPreference38,1275
    void init(TimeConsumingPreferenceListener listener, boolean skipReading) {init42,1371
    protected void onClick() {onClick55,1832
    private class MyHandler extends Handler {MyHandler65,2108
        private static final int MESSAGE_GET_CALL_WAITING = 0;MESSAGE_GET_CALL_WAITING66,2154
        private static final int MESSAGE_SET_CALL_WAITING = 1;MESSAGE_SET_CALL_WAITING67,2217
        public void handleMessage(Message msg) {handleMessage70,2299
        private void handleGetCallWaitingResponse(Message msg) {handleGetCallWaitingResponse81,2663
        private void handleSetCallWaitingResponse(Message msg) {handleSetCallWaitingResponse117,4392

src/com/android/phone/CarrierLogo.java,352
package com.android.phone;com.android.phone17,621
public class CarrierLogo {CarrierLogo25,761
    private CarrierLogo() {CarrierLogo27,833
    private static Map<String, Integer> sLogoMap = null;sLogoMap30,868
    private static Map<String, Integer> getLogoMap() {getLogoMap32,926
    public static int getLogo(String name) {getLogo47,1413

src/com/android/phone/CdmaCallOptions.java,644
package com.android.phone;com.android.phone1,0
public class CdmaCallOptions extends PreferenceActivity {CdmaCallOptions17,477
    private static final String LOG_TAG = "CdmaCallOptions";LOG_TAG18,535
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG19,596
    private static final String BUTTON_VP_KEY = "button_voice_privacy_key";BUTTON_VP_KEY21,656
    private CheckBoxPreference mButtonVoicePrivacy;mButtonVoicePrivacy22,732
    protected void onCreate(Bundle icicle) {onCreate25,799
    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {onPreferenceTreeClick38,1231

src/com/android/phone/CdmaDisplayInfo.java,610
package com.android.phone;com.android.phone17,621
public class CdmaDisplayInfo {CdmaDisplayInfo28,887
    private static final String LOG_TAG = "CdmaDisplayInfo";LOG_TAG29,918
    private static final boolean DBG = (SystemProperties.getInt("ro.debuggable", 0) == 1);DBG30,979
    private static AlertDialog sDisplayInfoDialog = null;sDisplayInfoDialog33,1106
    public static void displayInfoRecord(Context context, String infoMsg) {displayInfoRecord42,1382
    public static void dismissDisplayInfoRecord() {dismissDisplayInfoRecord73,2467
    private static void log(String msg) {log83,2721

src/com/android/phone/CdmaOptions.java,1196
package com.android.phone;com.android.phone17,621
public class CdmaOptions {CdmaOptions28,897
    private static final String LOG_TAG = "CdmaOptions";LOG_TAG29,924
    private CdmaSystemSelectListPreference mButtonCdmaSystemSelect;mButtonCdmaSystemSelect31,982
    private CdmaSubscriptionListPreference mButtonCdmaSubscription;mButtonCdmaSubscription32,1050
    private static final String BUTTON_CDMA_SYSTEM_SELECT_KEY = "cdma_system_select_key";BUTTON_CDMA_SYSTEM_SELECT_KEY34,1119
    private static final String BUTTON_CDMA_SUBSCRIPTION_KEY = "cdma_subscription_key";BUTTON_CDMA_SUBSCRIPTION_KEY35,1209
    private PreferenceActivity mPrefActivity;mPrefActivity37,1298
    private PreferenceScreen mPrefScreen;mPrefScreen38,1344
    public CdmaOptions(PreferenceActivity prefActivity, PreferenceScreen prefScreen) {CdmaOptions40,1387
    protected void create() {create46,1571
    private boolean deviceSupportsNvAndRuim() {deviceSupportsNvAndRuim66,2438
    public boolean preferenceTreeClick(Preference preference) {preferenceTreeClick92,3579
    public void showDialog(Preference preference) {showDialog104,4039
    protected void log(String s) {log112,4368

src/com/android/phone/CdmaPhoneCallState.java,1522
package com.android.phone;com.android.phone17,621
   public class CdmaPhoneCallState {CdmaPhoneCallState45,2482
        public enum PhoneCallState {PhoneCallState54,2885
            IDLE,IDLE55,2922
            SINGLE_ACTIVE,SINGLE_ACTIVE56,2940
            THRWAY_ACTIVE,THRWAY_ACTIVE57,2967
            CONF_CALLCONF_CALL58,2994
        private PhoneCallState mPreviousCallState;mPreviousCallState62,3088
        private PhoneCallState mCurrentCallState;mCurrentCallState63,3139
        private boolean mThreeWayCallOrigStateDialing;mThreeWayCallOrigStateDialing66,3237
        private boolean mAddCallMenuStateAfterCW;mAddCallMenuStateAfterCW70,3452
        public void CdmaPhoneCallStateInit() {CdmaPhoneCallStateInit75,3594
        public PhoneCallState getCurrentCallState() {getCurrentCallState85,3921
        public void setCurrentCallState(PhoneCallState newState) {setCurrentCallState92,4101
        public boolean IsThreeWayCallOrigStateDialing() {IsThreeWayCallOrigStateDialing114,5012
        public void setThreeWayCallOrigState(boolean newState) {setThreeWayCallOrigState121,5195
        public boolean getAddCallMenuStateAfterCallWaiting() {getAddCallMenuStateAfterCallWaiting128,5423
        public void setAddCallMenuStateAfterCallWaiting(boolean newState) {setAddCallMenuStateAfterCallWaiting135,5649
        public PhoneCallState getPreviousCallState() {getPreviousCallState142,5853
        public void resetCdmaPhoneCallState() {resetCdmaPhoneCallState149,6018

src/com/android/phone/CdmaSubscriptionListPreference.java,1505
package com.android.phone;com.android.phone17,621
public class CdmaSubscriptionListPreference extends ListPreference {CdmaSubscriptionListPreference32,1033
    private static final String LOG_TAG = "CdmaSubscriptionListPreference";LOG_TAG34,1103
    private static final int CDMA_SUBSCRIPTION_RUIM_SIM = 0;CDMA_SUBSCRIPTION_RUIM_SIM37,1219
    private static final int CDMA_SUBSCRIPTION_NV = 1;CDMA_SUBSCRIPTION_NV38,1280
    static final int preferredSubscriptionMode = CDMA_SUBSCRIPTION_NV;preferredSubscriptionMode42,1433
    private Phone mPhone;mPhone44,1505
    private CdmaSubscriptionButtonHandler mHandler;mHandler45,1531
    public CdmaSubscriptionListPreference(Context context, AttributeSet attrs) {CdmaSubscriptionListPreference47,1584
    private void setCurrentCdmaSubscriptionModeValue() {setCurrentCdmaSubscriptionModeValue55,1856
    public CdmaSubscriptionListPreference(Context context) {CdmaSubscriptionListPreference61,2170
    protected void showDialog(Bundle state) {showDialog66,2281
    protected void onDialogClosed(boolean positiveResult) {onDialogClosed73,2429
    private class CdmaSubscriptionButtonHandler extends Handler {CdmaSubscriptionButtonHandler103,3670
        private static final int MESSAGE_SET_CDMA_SUBSCRIPTION = 0;MESSAGE_SET_CDMA_SUBSCRIPTION105,3737
        public void handleMessage(Message msg) {handleMessage108,3824
        private void handleSetCdmaSubscriptionMode(Message msg) {handleSetCdmaSubscriptionMode116,4065

src/com/android/phone/CdmaSystemSelectListPreference.java,1447
package com.android.phone;com.android.phone17,621
public class CdmaSystemSelectListPreference extends ListPreference {CdmaSystemSelectListPreference34,1128
    private static final String LOG_TAG = "CdmaRoamingListPreference";LOG_TAG36,1198
    private static final boolean DBG = true;DBG37,1269
    private Phone mPhone;mPhone39,1315
    private MyHandler mHandler = new MyHandler();;mHandler40,1341
    public CdmaSystemSelectListPreference(Context context, AttributeSet attrs) {CdmaSystemSelectListPreference42,1393
    public CdmaSystemSelectListPreference(Context context) {CdmaSystemSelectListPreference51,1724
    protected void showDialog(Bundle state) {showDialog56,1835
    protected void onDialogClosed(boolean positiveResult) {onDialogClosed66,2143
    private class MyHandler extends Handler {MyHandler98,3668
        private static final int MESSAGE_GET_ROAMING_PREFERENCE = 0;MESSAGE_GET_ROAMING_PREFERENCE100,3715
        private static final int MESSAGE_SET_ROAMING_PREFERENCE = 1;MESSAGE_SET_ROAMING_PREFERENCE101,3784
        public void handleMessage(Message msg) {handleMessage104,3872
        private void handleQueryCdmaRoamingPreference(Message msg) {handleQueryCdmaRoamingPreference116,4255
        private void handleSetCdmaRoamingPreference(Message msg) {handleSetCdmaRoamingPreference146,5851
        private void resetCdmaRoamingModeToDefault() {resetCdmaRoamingModeToDefault159,6424

src/com/android/phone/CdmaVoicePrivacyCheckBoxPreference.java,1307
package com.android.phone;com.android.phone1,0
public class CdmaVoicePrivacyCheckBoxPreference extends CheckBoxPreference {CdmaVoicePrivacyCheckBoxPreference13,348
    private static final String LOG_TAG = "CdmaVoicePrivacyCheckBoxPreference";LOG_TAG14,425
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG15,505
    Phone phone;phone17,565
    private MyHandler mHandler = new MyHandler();mHandler18,582
    public CdmaVoicePrivacyCheckBoxPreference(Context context, AttributeSet attrs, int defStyle) {CdmaVoicePrivacyCheckBoxPreference20,633
    public CdmaVoicePrivacyCheckBoxPreference(Context context, AttributeSet attrs) {CdmaVoicePrivacyCheckBoxPreference27,918
    public CdmaVoicePrivacyCheckBoxPreference(Context context) {CdmaVoicePrivacyCheckBoxPreference31,1093
    protected void onClick() {onClick37,1209
    private class MyHandler extends Handler {MyHandler46,1396
        private static final int MESSAGE_GET_VP = 0;MESSAGE_GET_VP47,1442
        private static final int MESSAGE_SET_VP = 1;MESSAGE_SET_VP48,1495
        public void handleMessage(Message msg) {handleMessage51,1567
        private void handleGetVPResponse(Message msg) {handleGetVPResponse62,1893
        private void handleSetVPResponse(Message msg) {handleSetVPResponse78,2603

src/com/android/phone/CellBroadcastSms.java,8514
package com.android.phone;com.android.phone18,622
public class CellBroadcastSms extends PreferenceActivityCellBroadcastSms39,1206
    private static final String LOG_TAG = "CellBroadcastSms";LOG_TAG42,1339
    private static final boolean DBG = true;DBG43,1401
    private static final String BUTTON_ENABLE_DISABLE_BC_SMS_KEY =BUTTON_ENABLE_DISABLE_BC_SMS_KEY46,1487
    private static final String LIST_LANGUAGE_KEY =LIST_LANGUAGE_KEY48,1599
    private static final String BUTTON_EMERGENCY_BROADCAST_KEY =BUTTON_EMERGENCY_BROADCAST_KEY50,1676
    private static final String BUTTON_ADMINISTRATIVE_KEY =BUTTON_ADMINISTRATIVE_KEY52,1779
    private static final String BUTTON_MAINTENANCE_KEY =BUTTON_MAINTENANCE_KEY54,1872
    private static final String BUTTON_LOCAL_WEATHER_KEY =BUTTON_LOCAL_WEATHER_KEY56,1959
    private static final String BUTTON_ATR_KEY =BUTTON_ATR_KEY58,2050
    private static final String BUTTON_LAFS_KEY =BUTTON_LAFS_KEY60,2121
    private static final String BUTTON_RESTAURANTS_KEY =BUTTON_RESTAURANTS_KEY62,2194
    private static final String BUTTON_LODGINGS_KEY =BUTTON_LODGINGS_KEY64,2281
    private static final String BUTTON_RETAIL_DIRECTORY_KEY =BUTTON_RETAIL_DIRECTORY_KEY66,2362
    private static final String BUTTON_ADVERTISEMENTS_KEY =BUTTON_ADVERTISEMENTS_KEY68,2459
    private static final String BUTTON_STOCK_QUOTES_KEY =BUTTON_STOCK_QUOTES_KEY70,2552
    private static final String BUTTON_EO_KEY =BUTTON_EO_KEY72,2641
    private static final String BUTTON_MHH_KEY =BUTTON_MHH_KEY74,2710
    private static final String BUTTON_TECHNOLOGY_NEWS_KEY =BUTTON_TECHNOLOGY_NEWS_KEY76,2781
    private static final String BUTTON_MULTI_CATEGORY_KEY =BUTTON_MULTI_CATEGORY_KEY78,2876
    private static final String BUTTON_LOCAL_GENERAL_NEWS_KEY =BUTTON_LOCAL_GENERAL_NEWS_KEY81,2970
    private static final String BUTTON_REGIONAL_GENERAL_NEWS_KEY =BUTTON_REGIONAL_GENERAL_NEWS_KEY83,3071
    private static final String BUTTON_NATIONAL_GENERAL_NEWS_KEY =BUTTON_NATIONAL_GENERAL_NEWS_KEY85,3178
    private static final String BUTTON_INTERNATIONAL_GENERAL_NEWS_KEY =BUTTON_INTERNATIONAL_GENERAL_NEWS_KEY87,3285
    private static final String BUTTON_LOCAL_BF_NEWS_KEY =BUTTON_LOCAL_BF_NEWS_KEY90,3407
    private static final String BUTTON_REGIONAL_BF_NEWS_KEY =BUTTON_REGIONAL_BF_NEWS_KEY92,3498
    private static final String BUTTON_NATIONAL_BF_NEWS_KEY =BUTTON_NATIONAL_BF_NEWS_KEY94,3595
    private static final String BUTTON_INTERNATIONAL_BF_NEWS_KEY =BUTTON_INTERNATIONAL_BF_NEWS_KEY96,3692
    private static final String BUTTON_LOCAL_SPORTS_NEWS_KEY =BUTTON_LOCAL_SPORTS_NEWS_KEY99,3804
    private static final String BUTTON_REGIONAL_SPORTS_NEWS_KEY =BUTTON_REGIONAL_SPORTS_NEWS_KEY101,3903
    private static final String BUTTON_NATIONAL_SPORTS_NEWS_KEY =BUTTON_NATIONAL_SPORTS_NEWS_KEY103,4008
    private static final String BUTTON_INTERNATIONAL_SPORTS_NEWS_KEY =BUTTON_INTERNATIONAL_SPORTS_NEWS_KEY105,4113
    private static final String BUTTON_LOCAL_ENTERTAINMENT_NEWS_KEY =BUTTON_LOCAL_ENTERTAINMENT_NEWS_KEY108,4233
    private static final String BUTTON_REGIONAL_ENTERTAINMENT_NEWS_KEY =BUTTON_REGIONAL_ENTERTAINMENT_NEWS_KEY110,4346
    private static final String BUTTON_NATIONAL_ENTERTAINMENT_NEWS_KEY =BUTTON_NATIONAL_ENTERTAINMENT_NEWS_KEY112,4465
    private static final String BUTTON_INTERNATIONAL_ENTERTAINMENT_NEWS_KEY =BUTTON_INTERNATIONAL_ENTERTAINMENT_NEWS_KEY114,4584
    private static final int NO_OF_SERVICE_CATEGORIES = 31;NO_OF_SERVICE_CATEGORIES120,4856
    private static final int NO_OF_INTS_STRUCT_1 = 3;NO_OF_INTS_STRUCT_1121,4916
    private static final int MAX_LENGTH_RESULT = NO_OF_SERVICE_CATEGORIES * NO_OF_INTS_STRUCT_1 + 1;MAX_LENGTH_RESULT122,4970
    private static final int MESSAGE_ACTIVATE_CB_SMS = 1;MESSAGE_ACTIVATE_CB_SMS124,5090
    private static final int MESSAGE_GET_CB_SMS_CONFIG = 2;MESSAGE_GET_CB_SMS_CONFIG125,5148
    private static final int MESSAGE_SET_CB_SMS_CONFIG = 3;MESSAGE_SET_CB_SMS_CONFIG126,5208
    private CheckBoxPreference mButtonBcSms;mButtonBcSms129,5286
    private ListPreference mListLanguage;mListLanguage131,5336
    private CheckBoxPreference mButtonEmergencyBroadcast;mButtonEmergencyBroadcast133,5383
    private CheckBoxPreference mButtonAdministrative;mButtonAdministrative134,5441
    private CheckBoxPreference mButtonMaintenance;mButtonMaintenance135,5495
    private CheckBoxPreference mButtonLocalWeather;mButtonLocalWeather136,5546
    private CheckBoxPreference mButtonAtr;mButtonAtr137,5598
    private CheckBoxPreference mButtonLafs;mButtonLafs138,5641
    private CheckBoxPreference mButtonRestaurants;mButtonRestaurants139,5685
    private CheckBoxPreference mButtonLodgings;mButtonLodgings140,5736
    private CheckBoxPreference mButtonRetailDirectory;mButtonRetailDirectory141,5784
    private CheckBoxPreference mButtonAdvertisements;mButtonAdvertisements142,5839
    private CheckBoxPreference mButtonStockQuotes;mButtonStockQuotes143,5893
    private CheckBoxPreference mButtonEo;mButtonEo144,5944
    private CheckBoxPreference mButtonMhh;mButtonMhh145,5986
    private CheckBoxPreference mButtonTechnologyNews;mButtonTechnologyNews146,6029
    private CheckBoxPreference mButtonMultiCategory;mButtonMultiCategory147,6083
    private CheckBoxPreference mButtonLocal1;mButtonLocal1149,6137
    private CheckBoxPreference mButtonRegional1;mButtonRegional1150,6183
    private CheckBoxPreference mButtonNational1;mButtonNational1151,6232
    private CheckBoxPreference mButtonInternational1;mButtonInternational1152,6281
    private CheckBoxPreference mButtonLocal2;mButtonLocal2154,6340
    private CheckBoxPreference mButtonRegional2;mButtonRegional2155,6386
    private CheckBoxPreference mButtonNational2;mButtonNational2156,6435
    private CheckBoxPreference mButtonInternational2;mButtonInternational2157,6484
    private CheckBoxPreference mButtonLocal3;mButtonLocal3159,6543
    private CheckBoxPreference mButtonRegional3;mButtonRegional3160,6589
    private CheckBoxPreference mButtonNational3;mButtonNational3161,6638
    private CheckBoxPreference mButtonInternational3;mButtonInternational3162,6687
    private CheckBoxPreference mButtonLocal4;mButtonLocal4164,6746
    private CheckBoxPreference mButtonRegional4;mButtonRegional4165,6792
    private CheckBoxPreference mButtonNational4;mButtonNational4166,6841
    private CheckBoxPreference mButtonInternational4;mButtonInternational4167,6890
    private Phone mPhone;mPhone171,6977
    private MyHandler mHandler;mHandler172,7003
    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen,onPreferenceTreeClick180,7245
    public boolean onPreferenceChange(Preference preference, Object objValue) {onPreferenceChange325,16996
    public void onCreate(Bundle icicle) {onCreate336,17435
    protected void onResume() {onResume421,21806
    protected void onPause() {onPause442,22572
    private void enableDisableAllCbConfigButtons(boolean enable) {enableDisableAllCbConfigButtons451,22886
    private void setAllCbConfigButtons(int[] configArray) {setAllCbConfigButtons490,24463
    private class MyHandler extends Handler {MyHandler532,26737
        public void handleMessage(Message msg) {handleMessage535,26802
    private static final class CellBroadcastSmsConfig {CellBroadcastSmsConfig573,28596
        private static int mBSelected[] = new int[NO_OF_SERVICE_CATEGORIES + 1];mBSelected579,28947
        private static int mConfigDataComplete[] = new int[MAX_LENGTH_RESULT];mConfigDataComplete580,29028
        private static void setCbSmsConfig(int[] configData) {setCbSmsConfig582,29108
        private static void setCbSmsBSelectedValue(boolean value, int pos) {setCbSmsBSelectedValue617,30554
        private static int[] getCbSmsBselectedValues() {getCbSmsBselectedValues625,30851
        private static int[] getCbSmsAllValues() {getCbSmsAllValues630,31028
        private static void setCbSmsNoOfStructs(int value) {setCbSmsNoOfStructs634,31139
        private static void setConfigDataCompleteBSelected(boolean value, int serviceCategory) {setConfigDataCompleteBSelected640,31378
        private static void setConfigDataCompleteLanguage(int language) {setConfigDataCompleteLanguage650,31846
        private static int getConfigDataLanguage() {getConfigDataLanguage657,32167

src/com/android/phone/ChangeIccPinScreen.java,2156
package com.android.phone;com.android.phone17,621
public class ChangeIccPinScreen extends Activity {ChangeIccPinScreen45,1432
    private static final String LOG_TAG = PhoneApp.LOG_TAG;LOG_TAG46,1483
    private static final boolean DBG = false;DBG47,1543
    private static final int EVENT_PIN_CHANGED = 100;EVENT_PIN_CHANGED49,1590
    private enum EntryState {EntryState51,1649
        ES_PIN,ES_PIN52,1679
        ES_PUKES_PUK53,1695
    private EntryState mState;mState56,1721
    private static final int NO_ERROR = 0;NO_ERROR58,1753
    private static final int PIN_MISMATCH = 1;PIN_MISMATCH59,1796
    private static final int PIN_INVALID_LENGTH = 2;PIN_INVALID_LENGTH60,1843
    private static final int MIN_PIN_LENGTH = 4;MIN_PIN_LENGTH62,1897
    private static final int MAX_PIN_LENGTH = 8;MAX_PIN_LENGTH63,1946
    private Phone mPhone;mPhone65,1996
    private boolean mChangePin2;mChangePin266,2022
    private TextView mBadPinError;mBadPinError67,2055
    private TextView mMismatchError;mMismatchError68,2090
    private EditText mOldPin;mOldPin69,2127
    private EditText mNewPin1;mNewPin170,2157
    private EditText mNewPin2;mNewPin271,2188
    private EditText mPUKCode;mPUKCode72,2219
    private Button mButton;mButton73,2250
    private Button mPUKSubmit;mPUKSubmit74,2278
    private ScrollView mScrollView;mScrollView75,2309
    private LinearLayout mIccPUKPanel;mIccPUKPanel77,2346
    private Handler mHandler = new Handler() {mHandler79,2386
    public void onCreate(Bundle icicle) {onCreate92,2732
    private void resolveIntent() {resolveIntent140,4456
    private void reset() {reset145,4602
    private int validateNewPin(String p1, String p2) {validateNewPin151,4768
    private View.OnClickListener mClicked = new View.OnClickListener() {mClicked169,5150
    private void handleResult(AsyncResult ar) {handleResult235,7893
    private AlertDialog mPUKAlert;mPUKAlert278,9702
    private void displayPUKAlert () {displayPUKAlert279,9737
    private void showConfirmation() {showConfirmation298,10420
    private void log(String msg) {log303,10603

src/com/android/phone/CLIRListPreference.java,1385
package com.android.phone;com.android.phone1,0
public class CLIRListPreference extends ListPreference {CLIRListPreference18,568
    private static final String LOG_TAG = "CLIRListPreference";LOG_TAG19,625
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG20,689
    private MyHandler mHandler = new MyHandler();mHandler22,749
    Phone phone;phone23,799
    TimeConsumingPreferenceListener tcpListener;tcpListener24,816
    int clirArray[];clirArray26,866
    public CLIRListPreference(Context context, AttributeSet attrs) {CLIRListPreference28,888
    public CLIRListPreference(Context context) {CLIRListPreference34,1044
    protected void onDialogClosed(boolean positiveResult) {onDialogClosed39,1143
    void init(TimeConsumingPreferenceListener listener, boolean skipReading) {init49,1490
    void handleGetCLIRResult(int tmpClirArray[]) {handleGetCLIRResult60,1924
    private class MyHandler extends Handler {MyHandler108,3800
        private static final int MESSAGE_GET_CLIR = 0;MESSAGE_GET_CLIR109,3846
        private static final int MESSAGE_SET_CLIR = 1;MESSAGE_SET_CLIR110,3901
        public void handleMessage(Message msg) {handleMessage113,3975
        private void handleGetCLIRResponse(Message msg) {handleGetCLIRResponse124,4309
        private void handleSetCLIRResponse(Message msg) {handleSetCLIRResponse150,5556

src/com/android/phone/DataUsage.java,855
package com.android.phone;com.android.phone17,621
public class DataUsage extends PreferenceActivity {DataUsage36,1073
    private Preference mCurrentUsagePref;mCurrentUsagePref38,1126
    private Preference mTimeFramePref;mTimeFramePref39,1168
    private Preference mThrottleRatePref;mThrottleRatePref40,1207
    private Preference mHelpPref;mHelpPref41,1249
    private String mHelpUri;mHelpUri42,1283
    private DataUsageListener mDataUsageListener;mDataUsageListener44,1313
    private ThrottleManager mThrottleManager;mThrottleManager45,1363
    protected void onCreate(Bundle icicle) {onCreate48,1424
    protected void onResume() {onResume72,2305
    protected void onPause() {onPause78,2421
    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {onPreferenceTreeClick85,2535

src/com/android/phone/DataUsageListener.java,1803
package com.android.phone;com.android.phone17,621
public class DataUsageListener {DataUsageListener40,1209
    private ThrottleManager mThrottleManager;mThrottleManager42,1243
    private Preference mCurrentUsagePref = null;mCurrentUsagePref43,1289
    private Preference mTimeFramePref = null;mTimeFramePref44,1338
    private Preference mThrottleRatePref = null;mThrottleRatePref45,1384
    private Preference mSummaryPref = null;mSummaryPref46,1433
    private PreferenceScreen mPrefScreen = null;mPrefScreen47,1477
    private boolean mSummaryPrefEnabled = false;mSummaryPrefEnabled48,1526
    private final Context mContext;mContext50,1576
    private IntentFilter mFilter;mFilter51,1612
    private BroadcastReceiver mReceiver;mReceiver52,1646
    private int mPolicyThrottleValue;  //in kbpsmPolicyThrottleValue54,1688
    private long mPolicyThreshold;mPolicyThreshold55,1737
    private int mCurrentThrottleRate;mCurrentThrottleRate56,1772
    private long mDataUsed;mDataUsed57,1810
    private Calendar mStart;mStart58,1838
    private Calendar mEnd;mEnd59,1867
    public DataUsageListener(Context context, Preference summary, PreferenceScreen prefScreen) {DataUsageListener61,1895
    public DataUsageListener(Context context, Preference currentUsage,DataUsageListener69,2151
    private void initialize() {initialize78,2460
    void resume() {resume108,3875
    void pause() {pause113,3981
    private void updatePolicy() {updatePolicy117,4055
    private void updateThrottleRate(int throttleRate) {updateThrottleRate142,4943
    private void updateUsageStats(long readByteCount, long writeByteCount,updateUsageStats147,5071
    private void updateUI() {updateUI155,5351
    private String toReadable (long data) {toReadable213,8067

src/com/android/phone/DeleteFdnContactScreen.java,1942
package com.android.phone;com.android.phone17,621
public class DeleteFdnContactScreen extends Activity {DeleteFdnContactScreen38,1191
    private static final String LOG_TAG = PhoneApp.LOG_TAG;LOG_TAG39,1246
    private static final boolean DBG = false;DBG40,1306
    private static final String INTENT_EXTRA_NAME = "name";INTENT_EXTRA_NAME42,1353
    private static final String INTENT_EXTRA_NUMBER = "number";INTENT_EXTRA_NUMBER43,1413
    private static final int PIN2_REQUEST_CODE = 100;PIN2_REQUEST_CODE45,1478
    private String mName;mName47,1533
    private String mNumber;mNumber48,1559
    private String mPin2;mPin249,1587
    protected QueryHandler mQueryHandler;mQueryHandler51,1614
    private Handler mHandler = new Handler();mHandler53,1657
    protected void onCreate(Bundle icicle) {onCreate56,1718
    protected void onActivityResult(int requestCode, int resultCode,onActivityResult68,2007
    private void resolveIntent() {resolveIntent90,2851
    private void deleteContact() {deleteContact101,3128
    private void authenticatePin2() {authenticatePin2122,3763
    private void displayProgress(boolean flag) {displayProgress128,3957
    private void showStatus(CharSequence statusMsg) {showStatus136,4323
    private void handleResult(boolean success) {handleResult143,4512
    private class QueryHandler extends AsyncQueryHandler {QueryHandler160,5008
        public QueryHandler(ContentResolver cr) {QueryHandler161,5067
        protected void onQueryComplete(int token, Object cookie, Cursor c) {onQueryComplete166,5169
        protected void onInsertComplete(int token, Object cookie,onInsertComplete169,5257
        protected void onUpdateComplete(int token, Object cookie, int result) {onUpdateComplete173,5385
        protected void onDeleteComplete(int token, Object cookie, int result) {onDeleteComplete176,5476
    private void log(String msg) {log184,5694

src/com/android/phone/DTMFTwelveKeyDialer.java,5791
package com.android.phone;com.android.phone17,621
public class DTMFTwelveKeyDialer implementsDTMFTwelveKeyDialer50,1577
    private static final String LOG_TAG = "DTMFTwelveKeyDialer";LOG_TAG55,1769
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG56,1834
    private static final int PHONE_DISCONNECT = 100;PHONE_DISCONNECT59,1915
    private static final int DTMF_SEND_CNF = 101;DTMF_SEND_CNF60,1968
    private CallManager mCM;mCM62,2019
    private ToneGenerator mToneGenerator;mToneGenerator63,2048
    private Object mToneGeneratorLock = new Object();mToneGeneratorLock64,2090
    private boolean mDTMFToneEnabled;mDTMFToneEnabled67,2206
    private int mDTMFToneType;mDTMFToneType70,2267
    private boolean mDTMFBurstCnfPending = false;mDTMFBurstCnfPending73,2364
    private Queue<Character> mDTMFQueue = new LinkedList<Character>();mDTMFQueue76,2464
    private static final int DTMF_DURATION_MS = 120;DTMF_DURATION_MS79,2569
    private static final HashMap<Character, Integer> mToneMap =mToneMap83,2672
    private static final HashMap<Integer, Character> mDisplayMap =mDisplayMap86,2830
    private EditText mDialpadDigits;mDialpadDigits122,4421
    private InCallScreen mInCallScreen;mInCallScreen125,4490
    private SlidingDrawer mDialerDrawer;mDialerDrawer129,4642
    private DTMFTwelveKeyDialerView mDialerView;mDialerView132,4750
    private DTMFKeyListener mDialerKeyListener;mDialerKeyListener135,4867
    private static class DTMFDisplayMovementMethod implements MovementMethod {DTMFDisplayMovementMethod141,5095
        public boolean onKeyDown(TextView widget, Spannable buffer, int keyCode, KeyEvent event) {onKeyDown144,5239
        public boolean onKeyUp(TextView widget, Spannable buffer, int keyCode, KeyEvent event) {onKeyUp149,5439
        public boolean onKeyOther(TextView view, Spannable text, KeyEvent event) {onKeyOther154,5637
        public boolean onTrackballEvent(TextView widget, Spannable buffer, MotionEvent event) {onTrackballEvent159,5821
        public boolean onTouchEvent(TextView widget, Spannable buffer, MotionEvent event) {onTouchEvent164,6018
        public void initialize(TextView widget, Spannable text) {initialize168,6147
        public void onTakeFocus(TextView view, Spannable text, int dir) {onTakeFocus171,6224
        public boolean canSelectArbitrarily() {canSelectArbitrarily175,6352
    private class DTMFKeyListener extends DialerKeyListener {DTMFKeyListener190,6884
        private DTMFKeyListener() {DTMFKeyListener192,6947
        protected char[] getAcceptedChars(){getAcceptedChars200,7122
        public boolean backspace(View view, Editable content, int keyCode,backspace206,7287
        private boolean isAcceptableModifierKey(int keyCode) {isAcceptableModifierKey215,7565
        public boolean onKeyDown(View view, Editable content,onKeyDown232,8143
        public boolean onKeyUp(View view, Editable content,onKeyUp262,9322
        public boolean onKeyDown(KeyEvent event) {onKeyDown285,10052
        public boolean onKeyUp(KeyEvent event) {onKeyUp311,11126
        private char lookup(KeyEvent event) {lookup340,12163
        boolean isKeyEventAcceptable (KeyEvent event) {isKeyEventAcceptable356,12763
        public final char[] DTMF_CHARACTERS = new char[] {DTMF_CHARACTERS364,13043
    private Handler mHandler = new Handler() {mHandler372,13288
    public DTMFTwelveKeyDialer(InCallScreen parent,DTMFTwelveKeyDialer403,14549
    /* package */ void clearInCallScreenReference() {clearInCallScreenReference463,17069
    private void onDialerOpen() {onDialerOpen485,17874
    public void startDialerSession() {startDialerSession512,18924
    private void onDialerClose() {onDialerClose545,20331
    public void stopDialerSession() {stopDialerSession567,20989
    public boolean onDialerKeyDown(KeyEvent event) {onDialerKeyDown580,21346
    public boolean onDialerKeyUp(KeyEvent event) {onDialerKeyUp588,21606
    private void setupKeypad(DTMFTwelveKeyDialerView dialerView) {setupKeypad596,21843
    public boolean onKeyDown(int keyCode, KeyEvent event) {onKeyDown612,22404
    public boolean onKeyUp(int keyCode, KeyEvent event) {onKeyUp628,22975
    public boolean onTouch(View v, MotionEvent event) {onTouch636,23235
    public boolean onKey(View v, int keyCode, KeyEvent event) {onKey662,24233
    public boolean isOpened() {isOpened691,25335
    public boolean usingSlidingDrawer() {usingSlidingDrawer706,25855
    public void openDialer(boolean animate) {openDialer716,26132
    public void closeDialer(boolean animate) {closeDialer747,27238
    public void setHandleVisible(boolean visible) {setHandleVisible777,28333
    public void onDrawerOpened() {onDrawerOpened786,28608
    public void onDrawerClosed() {onDrawerClosed793,28767
    private final void processDtmf(char c) {processDtmf802,29043
    public void clearDigits() {clearDigits858,31727
    /* package */ void startDtmfTone(char tone) {startDtmfTone875,32290
    /* package */ void stopDtmfTone() {stopDtmfTone903,33397
    boolean isKeyEventAcceptable (KeyEvent event) {isKeyEventAcceptable924,34058
    private static void log(String msg) {log931,34257
    private void startTone(char c) {startTone938,34401
    private void stopTone() {stopTone951,34755
    void startToneCdma(char tone) {startToneCdma967,35264
    void startLocalToneCdma(char tone) {startLocalToneCdma989,36096
    private void sendShortDtmfToNetwork(char dtmfDigit) {sendShortDtmfToNetwork1017,37244
    private void stopToneCdma() {stopToneCdma1036,38014
    void stopLocalToneCdma() {stopLocalToneCdma1046,38206
    void handleBurstDtmfConfirmation() {handleBurstDtmfConfirmation1064,38805

src/com/android/phone/DTMFTwelveKeyDialerView.java,881
package com.android.phone;com.android.phone17,621
class DTMFTwelveKeyDialerView extends LinearLayout {DTMFTwelveKeyDialerView40,1301
    private static final String LOG_TAG = "PHONE/DTMFTwelveKeyDialerView";LOG_TAG42,1355
    private static final boolean DBG = false;DBG43,1430
    private DTMFTwelveKeyDialer mDialer;mDialer45,1477
    private ButtonGridLayout mButtonGrid;mButtonGrid46,1518
    public DTMFTwelveKeyDialerView (Context context) {DTMFTwelveKeyDialerView48,1561
    public DTMFTwelveKeyDialerView(Context context, AttributeSet attrs) {DTMFTwelveKeyDialerView52,1647
    void setDialer (DTMFTwelveKeyDialer dialer) {setDialer56,1759
    public boolean dispatchKeyEvent(KeyEvent event) {dispatchKeyEvent66,2085
    public void setKeysBackgroundResource(int resid) {setKeysBackgroundResource89,2939
    private void log(String msg) {log93,3059

src/com/android/phone/EditFdnContactScreen.java,3583
package com.android.phone;com.android.phone17,621
public class EditFdnContactScreen extends Activity {EditFdnContactScreen52,1688
    private static final String LOG_TAG = PhoneApp.LOG_TAG;LOG_TAG53,1741
    private static final boolean DBG = false;DBG54,1801
    private static final int MENU_IMPORT = 1;MENU_IMPORT57,1871
    private static final int MENU_DELETE = 2;MENU_DELETE58,1917
    private static final String INTENT_EXTRA_NAME = "name";INTENT_EXTRA_NAME60,1964
    private static final String INTENT_EXTRA_NUMBER = "number";INTENT_EXTRA_NUMBER61,2024
    private static final int PIN2_REQUEST_CODE = 100;PIN2_REQUEST_CODE63,2089
    private String mName;mName65,2144
    private String mNumber;mNumber66,2170
    private String mPin2;mPin267,2198
    private boolean mAddContact;mAddContact68,2224
    private QueryHandler mQueryHandler;mQueryHandler69,2257
    private EditText mNameField;mNameField71,2298
    private EditText mNumberField;mNumberField72,2331
    private LinearLayout mPinFieldContainer;mPinFieldContainer73,2366
    private Button mButton;mButton74,2411
    private Handler mHandler = new Handler();mHandler76,2440
    private static final int CONTACTS_PICKER_CODE = 200;CONTACTS_PICKER_CODE82,2602
    private static final String NUM_PROJECTION[] = {PeopleColumns.DISPLAY_NAME,NUM_PROJECTION84,2704
    private static final Intent CONTACT_IMPORT_INTENT;CONTACT_IMPORT_INTENT87,2870
    private boolean mDataBusy;mDataBusy93,3144
    protected void onCreate(Bundle icicle) {onCreate96,3190
    protected void onActivityResult(int requestCode, int resultCode,onActivityResult118,3822
    public boolean onCreateOptionsMenu(Menu menu) {onCreateOptionsMenu162,5596
    public boolean onPrepareOptionsMenu(Menu menu) {onPrepareOptionsMenu179,6162
    public boolean onOptionsItemSelected(MenuItem item) {onOptionsItemSelected188,6416
    private void resolveIntent() {resolveIntent202,6816
    private void setupView() {setupView217,7324
    private String getNameFromTextField() {getNameFromTextField249,8359
    private String getNumberFromTextField() {getNumberFromTextField253,8458
    private Uri getContentURI() {getContentURI257,8561
     private boolean isValidNumber(String number) {isValidNumber265,8775
    private void addContact() {addContact270,8877
    private void updateContact() {updateContact292,9537
    private void deleteSelected() {deleteSelected317,10381
    private void authenticatePin2() {authenticatePin2329,10789
    private void displayProgress(boolean flag) {displayProgress335,10983
    private void showStatus(CharSequence statusMsg) {showStatus350,11529
    private void handleResult(boolean success, boolean invalidNumber) {handleResult357,11718
    private View.OnClickListener mClicked = new View.OnClickListener() {mClicked378,12433
    View.OnFocusChangeListener mOnFocusChangeHandler =mOnFocusChangeHandler398,13104
    private class QueryHandler extends AsyncQueryHandler {QueryHandler408,13447
        public QueryHandler(ContentResolver cr) {QueryHandler409,13506
        protected void onQueryComplete(int token, Object cookie, Cursor c) {onQueryComplete414,13608
        protected void onInsertComplete(int token, Object cookie,onInsertComplete418,13714
        protected void onUpdateComplete(int token, Object cookie, int result) {onUpdateComplete426,13988
        protected void onDeleteComplete(int token, Object cookie, int result) {onDeleteComplete433,14224
    private void log(String msg) {log437,14321

src/com/android/phone/EditPhoneNumberPreference.java,4604
package com.android.phone;com.android.phone17,621
public class EditPhoneNumberPreference extends EditTextPreference {EditPhoneNumberPreference38,1324
    private static final int CM_CONFIRM = 0;CM_CONFIRM42,1479
    private static final int CM_ACTIVATION = 1;CM_ACTIVATION44,1624
    private int mConfirmationMode;mConfirmationMode46,1673
    private static final String VALUE_SEPARATOR = ":";VALUE_SEPARATOR53,2030
    private static final String VALUE_OFF = "0";VALUE_OFF54,2085
    private static final String VALUE_ON = "1";VALUE_ON55,2134
    private ImageButton mContactPickButton;mContactPickButton58,2199
    private View.OnFocusChangeListener mDialogFocusChangeListener;mDialogFocusChangeListener62,2315
    private OnDialogClosedListener mDialogOnClosedListener;mDialogOnClosedListener64,2427
    private GetDefaultNumberListener mGetDefaultNumberListener;mGetDefaultNumberListener69,2601
    private Activity mParentActivity;mParentActivity72,2688
    private Intent mContactListIntent;mContactListIntent73,2726
    private int mPrefId;mPrefId75,2824
    private CharSequence mEnableText;mEnableText78,2885
    private CharSequence mDisableText;mDisableText79,2923
    private CharSequence mChangeNumberText;mChangeNumberText80,2962
    private CharSequence mSummaryOn;mSummaryOn81,3006
    private CharSequence mSummaryOff;mSummaryOff82,3043
    private int mButtonClicked;mButtonClicked85,3130
    private String mPhoneNumber;mPhoneNumber88,3206
    private boolean mChecked;mChecked89,3239
    interface OnDialogClosedListener {OnDialogClosedListener97,3502
        void onDialogClosed(EditPhoneNumberPreference preference, int buttonClicked);onDialogClosed98,3541
    interface GetDefaultNumberListener {GetDefaultNumberListener105,3780
        String onGetDefaultNumber(EditPhoneNumberPreference preference);onGetDefaultNumber112,4090
    public EditPhoneNumberPreference(Context context, AttributeSet attrs) {EditPhoneNumberPreference118,4205
    public EditPhoneNumberPreference(Context context) {EditPhoneNumberPreference143,5541
    protected void onBindView(View view) {onBindView153,5760
    protected void onBindDialogView(View view) {onBindDialogView188,6834
    protected void onAddEditTextToDialogView(View dialogView, EditText editText) {onAddEditTextToDialogView234,8633
    protected void onPrepareDialogBuilder(AlertDialog.Builder builder) {onPrepareDialogBuilder249,9177
    public void setDialogOnFocusChangeListener(View.OnFocusChangeListener l) {setDialogOnFocusChangeListener271,10030
    public void setDialogOnClosedListener(OnDialogClosedListener l) {setDialogOnClosedListener276,10218
    public void setParentActivity(Activity parent, int identifier) {setParentActivity281,10419
    public void setParentActivity(Activity parent, int identifier, GetDefaultNumberListener l) {setParentActivity289,10732
    public void onPickActivityResult(String pickedValue) {onPickActivityResult299,11047
    public void onClick(DialogInterface dialog, int which) {onClick308,11296
    protected void onDialogClosed(boolean positiveResult) {onDialogClosed322,11904
    public boolean isToggled() {isToggled344,12673
    public EditPhoneNumberPreference setToggled(boolean checked) {setToggled350,12838
    public String getPhoneNumber() {getPhoneNumber362,13073
    protected String getRawPhoneNumber() {getRawPhoneNumber369,13342
    public EditPhoneNumberPreference setPhoneNumber(String number) {setPhoneNumber375,13527
    protected void onSetInitialValue(boolean restoreValue, Object defaultValue) {onSetInitialValue389,13884
    public boolean shouldDisableDependents() {shouldDisableDependents398,14166
    private String mEncodedText = null;mEncodedText420,15210
    protected boolean persistString(String value) {persistString422,15264
    public EditPhoneNumberPreference setSummaryOn(CharSequence summary) {setSummaryOn432,15521
    public EditPhoneNumberPreference setSummaryOn(int summaryResId) {setSummaryOn442,15831
    public CharSequence getSummaryOn() {getSummaryOn447,16021
    public EditPhoneNumberPreference setSummaryOff(CharSequence summary) {setSummaryOff456,16223
    public EditPhoneNumberPreference setSummaryOff(int summaryResId) {setSummaryOff466,16537
    public CharSequence getSummaryOff() {getSummaryOff471,16730
    protected void setValueFromString(String value) {setValueFromString480,16921
    protected String getStringValue() {getStringValue487,17195
    public void showPhoneNumberDialog() {showPhoneNumberDialog496,17488

src/com/android/phone/EditPinPreference.java,1133
package com.android.phone;com.android.phone17,621
public class EditPinPreference extends EditTextPreference {EditPinPreference35,1140
    private boolean shouldHideButtons;shouldHideButtons37,1201
    interface OnPinEnteredListener {OnPinEnteredListener39,1245
        void onPinEntered(EditPinPreference preference, boolean positiveResult);onPinEntered40,1282
    private OnPinEnteredListener mPinListener;mPinListener43,1374
    public void setOnPinEnteredListener(OnPinEnteredListener listener) {setOnPinEnteredListener45,1422
    public EditPinPreference(Context context, AttributeSet attrs) {EditPinPreference49,1539
    public EditPinPreference(Context context, AttributeSet attrs, int defStyle) {EditPinPreference53,1645
    protected View onCreateDialogView() {onCreateDialogView62,1941
    protected void onBindDialogView(View view) {onBindDialogView78,2540
    protected void onPrepareDialogBuilder(AlertDialog.Builder builder) {onPrepareDialogBuilder86,2810
    protected void onDialogClosed(boolean positiveResult) {onDialogClosed97,3152
    public void showPinDialog() {showPinDialog109,3536

src/com/android/phone/EmergencyCallbackModeExitDialog.java,2295
package com.android.phone;com.android.phone17,621
public class EmergencyCallbackModeExitDialog extends Activity implements OnDismissListener {EmergencyCallbackModeExitDialog52,1721
    static final String ACTION_SHOW_ECM_EXIT_DIALOG =ACTION_SHOW_ECM_EXIT_DIALOG55,1884
    public static final String EXTRA_EXIT_ECM_RESULT = "exit_ecm_result";EXTRA_EXIT_ECM_RESULT58,2077
    public static final int EXIT_ECM_BLOCK_OTHERS = 1;EXIT_ECM_BLOCK_OTHERS60,2152
    public static final int EXIT_ECM_DIALOG = 2;EXIT_ECM_DIALOG61,2207
    public static final int EXIT_ECM_PROGRESS_DIALOG = 3;EXIT_ECM_PROGRESS_DIALOG62,2256
    public static final int EXIT_ECM_IN_EMERGENCY_CALL_DIALOG = 4;EXIT_ECM_IN_EMERGENCY_CALL_DIALOG63,2314
    AlertDialog mAlertDialog = null;mAlertDialog65,2382
    ProgressDialog mProgressDialog = null;mProgressDialog66,2419
    CountDownTimer mTimer = null;mTimer67,2462
    EmergencyCallbackModeService mService = null;mService68,2496
    Handler mHandler = null;mHandler69,2546
    int mDialogType = 0;mDialogType70,2575
    long mEcmTimeout = 0;mEcmTimeout71,2600
    private boolean mInEmergencyCall = false;mInEmergencyCall72,2626
    private static final int ECM_TIMER_RESET = 1;ECM_TIMER_RESET73,2672
    private Phone mPhone = null;mPhone74,2722
    public void onCreate(Bundle savedInstanceState) {onCreate77,2770
    public void onDestroy() {onDestroy105,3873
    protected void onRestoreInstanceState(Bundle savedInstanceState) {onRestoreInstanceState113,4101
    protected void onSaveInstanceState(Bundle outState) {onSaveInstanceState119,4315
    private Runnable mTask = new Runnable() {mTask127,4543
    private void showEmergencyCallbackModeExitDialog() {showEmergencyCallbackModeExitDialog169,6043
    protected Dialog onCreateDialog(int id) {onCreateDialog203,7248
    private CharSequence getDialogText(long millisUntilFinished) {getDialogText267,10478
    public void onDismiss(DialogInterface dialog) {onDismiss287,11240
    private BroadcastReceiver mEcmExitReceiver = new BroadcastReceiver() {mEcmExitReceiver296,11536
    private ServiceConnection mConnection = new ServiceConnection() {mConnection318,12496
    private Handler mTimerResetHandler = new Handler () {mTimerResetHandler335,13141

src/com/android/phone/EmergencyCallbackModeService.java,1684
package com.android.phone;com.android.phone17,621
public class EmergencyCallbackModeService extends Service {EmergencyCallbackModeService49,1672
    private static final int DEFAULT_ECM_EXIT_TIMER_VALUE = 300000;DEFAULT_ECM_EXIT_TIMER_VALUE52,1786
    private static final String LOG_TAG = "EmergencyCallbackModeService";LOG_TAG53,1854
    private NotificationManager mNotificationManager = null;mNotificationManager55,1929
    private CountDownTimer mTimer = null;mTimer56,1990
    private long mTimeLeft = 0;mTimeLeft57,2032
    private Phone mPhone = null;mPhone58,2064
    private boolean mInEmergencyCall = false;mInEmergencyCall59,2097
    private static final int ECM_TIMER_RESET = 1;ECM_TIMER_RESET61,2144
    private Handler mHandler = new Handler () {mHandler63,2195
    public void onCreate() {onCreate74,2493
    public void onDestroy() {onDestroy98,3465
    private BroadcastReceiver mEcmReceiver = new BroadcastReceiver() {mEcmReceiver112,3896
    private void startTimerNotification() {startTimerNotification135,4853
    private void showNotification(long millisUntilFinished) {showNotification163,5723
    private void resetEcmTimer(AsyncResult r) {resetEcmTimer198,7233
    public IBinder onBind(Intent intent) {onBind212,7606
    private final IBinder mBinder = new LocalBinder();mBinder217,7747
    public class LocalBinder extends Binder {LocalBinder222,7854
        EmergencyCallbackModeService getService() {getService223,7900
    public long getEmergencyCallbackModeTimeout() {getEmergencyCallbackModeTimeout231,8092
    public boolean getEmergencyCallbackModeCallState() {getEmergencyCallbackModeCallState238,8243

src/com/android/phone/EmergencyCallHandler.java,1350
package com.android.phone;com.android.phone17,621
public class EmergencyCallHandler extends Activity {EmergencyCallHandler48,1845
    public static final String EMERGENCY_CALL_RETRY_KEY = "emergency_call_retry_count";EMERGENCY_CALL_RETRY_KEY50,1966
    public static final int INITIAL_ATTEMPT = -1;INITIAL_ATTEMPT53,2134
    public static final int NUMBER_OF_RETRIES = 6;NUMBER_OF_RETRIES56,2272
    public static final int TIME_BETWEEN_RETRIES_MS = 5000;TIME_BETWEEN_RETRIES_MS57,2323
    private static final int EVENT_SERVICE_STATE_CHANGED = 100;EVENT_SERVICE_STATE_CHANGED60,2411
    private static final int EVENT_TIMEOUT_EMERGENCY_CALL = 200;EVENT_TIMEOUT_EMERGENCY_CALL61,2475
    private static class EmergencyCallInfo {EmergencyCallInfo66,2621
        public Phone phone;phone67,2666
        public Intent intent;intent68,2694
        public ProgressDialog dialog;dialog69,2724
        public Application app;app70,2762
    private static EmergencyCallEventHandler sHandler;sHandler76,2891
    private static class EmergencyCallEventHandler extends Handler {EmergencyCallEventHandler77,2946
        public void handleMessage(Message msg) {handleMessage78,3015
    protected void onCreate(Bundle icicle) {onCreate106,4287
    private ProgressDialog constructDialog(int retryCount) {constructDialog184,7759

src/com/android/phone/EmergencyDialer.java,3389
package com.android.phone;com.android.phone17,621
public class EmergencyDialer extends ActivityEmergencyDialer63,2302
    private static final String LAST_NUMBER = "lastNumber";LAST_NUMBER67,2502
    public static final String ACTION_DIAL = "com.android.phone.EmergencyDialer.DIAL";ACTION_DIAL70,2603
    private static final boolean DBG = false;DBG73,2715
    private static final String LOG_TAG = "EmergencyDialer";LOG_TAG74,2761
    private static final int TONE_LENGTH_MS = 150;TONE_LENGTH_MS77,2875
    private static final int TONE_RELATIVE_VOLUME = 80;TONE_RELATIVE_VOLUME80,2998
    private static final int DIAL_TONE_STREAM_TYPE = AudioManager.STREAM_MUSIC;DIAL_TONE_STREAM_TYPE83,3154
    private static final int BAD_EMERGENCY_NUMBER_DIALOG = 0;BAD_EMERGENCY_NUMBER_DIALOG85,3235
    EditText mDigits;mDigits87,3298
    private View mVoicemailDialAndDeleteRow;mVoicemailDialAndDeleteRow89,3405
    private View mDialButton;mDialButton90,3450
    private View mDelete;mDelete91,3480
    private ToneGenerator mToneGenerator;mToneGenerator93,3507
    private Object mToneGeneratorLock = new Object();mToneGeneratorLock94,3549
    private Drawable mDigitsBackground;mDigitsBackground97,3636
    private Drawable mDigitsEmptyBackground;mDigitsEmptyBackground98,3676
    private boolean mDTMFToneEnabled;mDTMFToneEnabled101,3781
    private HapticFeedback mHaptic = new HapticFeedback();mHaptic104,3879
    private BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {mBroadcastReceiver107,3983
    private String mLastNumber; // last number we tried to dial. Used to restore error dialog.mLastNumber115,4253
    public void beforeTextChanged(CharSequence s, int start, int count, int after) {beforeTextChanged117,4349
    public void onTextChanged(CharSequence input, int start, int before, int changeCount) {onTextChanged121,4463
    public void afterTextChanged(Editable input) {afterTextChanged126,4585
    protected void onCreate(Bundle icicle) {onCreate152,5671
    protected void onDestroy() {onDestroy243,9564
    protected void onRestoreInstanceState(Bundle icicle) {onRestoreInstanceState255,9884
    protected void onSaveInstanceState(Bundle outState) {onSaveInstanceState260,10017
    protected void maybeAddNumberFormatting() {maybeAddNumberFormatting269,10308
    protected void onPostCreate(Bundle savedInstanceState) {onPostCreate274,10400
    private void setupKeypad() {setupKeypad284,10902
    public boolean onKeyDown(int keyCode, KeyEvent event) {onKeyDown308,11812
    private void keyPressed(int keyCode) {keyPressed326,12495
    public boolean onKey(View view, int keyCode, KeyEvent event) {onKey332,12685
    public void onClick(View view) {onClick344,13017
    public boolean onLongClick(View view) {onLongClick427,15699
    protected void onResume() {onResume447,16339
    public void onPause() {onPause482,17756
    void placeCall() {placeCall503,18470
    void playTone(int tone) {playTone538,19886
    private CharSequence createErrorMessage(String number) {createErrorMessage567,21037
    protected Dialog onCreateDialog(int id) {onCreateDialog576,21338
    protected void onPrepareDialog(int id, Dialog dialog) {onPrepareDialog593,21995
    private void updateDialAndDeleteButtonStateEnabledAttr() {updateDialAndDeleteButtonStateEnabledAttr604,22380

src/com/android/phone/EnableFdnScreen.java,1212
package com.android.phone;com.android.phone17,621
public class EnableFdnScreen extends Activity {EnableFdnScreen39,1209
    private static final String LOG_TAG = PhoneApp.LOG_TAG;LOG_TAG40,1257
    private static final boolean DBG = false;DBG41,1317
    private static final int ENABLE_FDN_COMPLETE = 100;ENABLE_FDN_COMPLETE43,1364
    private LinearLayout mPinFieldContainer;mPinFieldContainer45,1421
    private EditText mPin2Field;mPin2Field46,1466
    private TextView mStatusField;mStatusField47,1499
    private boolean mEnable;mEnable48,1534
    private Phone mPhone;mPhone49,1563
    private Handler mHandler = new Handler() {mHandler51,1590
    protected void onCreate(Bundle icicle) {onCreate65,1952
    protected void onResume() {onResume79,2351
    private void setupView() {setupView84,2465
    private void showStatus(CharSequence statusMsg) {showStatus94,2851
    private String getPin2() {getPin2105,3239
    private void enableFdn() {enableFdn109,3325
    private void handleResult(AsyncResult ar) {handleResult115,3564
    private View.OnClickListener mClicked = new View.OnClickListener() {mClicked135,4333
    private void log(String msg) {log148,4684

src/com/android/phone/EnableIccPinScreen.java,1178
package com.android.phone;com.android.phone17,621
public class EnableIccPinScreen extends Activity {EnableIccPinScreen39,1217
    private static final String LOG_TAG = PhoneApp.LOG_TAG;LOG_TAG40,1268
    private static final int ENABLE_ICC_PIN_COMPLETE = 100;ENABLE_ICC_PIN_COMPLETE42,1329
    private static final boolean DBG = false;DBG43,1389
    private LinearLayout mPinFieldContainer;mPinFieldContainer45,1436
    private EditText mPinField;mPinField46,1481
    private TextView mStatusField;mStatusField47,1513
    private boolean mEnable;mEnable48,1548
    private Phone mPhone;mPhone49,1577
    private Handler mHandler = new Handler() {mHandler51,1604
    protected void onCreate(Bundle icicle) {onCreate65,1970
    private void setupView() {setupView78,2368
    private void showStatus(CharSequence statusMsg) {showStatus88,2750
    private String getPin() {getPin99,3138
    private void enableIccPin() {enableIccPin103,3222
    private void handleResult(AsyncResult ar) {handleResult110,3510
    private View.OnClickListener mClicked = new View.OnClickListener() {mClicked130,4272
    private void log(String msg) {log143,4625

src/com/android/phone/FakePhoneActivity.java,566
package com.android.phone;com.android.phone17,621
public class FakePhoneActivity extends Activity {FakePhoneActivity33,1090
    private static final String TAG = "FakePhoneActivity";TAG34,1140
    private Button mPlaceCall;mPlaceCall36,1200
    private EditText mPhoneNumber;mPhoneNumber37,1231
    SimulatedRadioControl mRadioControl;mRadioControl38,1266
    public void onCreate(Bundle icicle) {onCreate41,1322
    private class ButtonListener implements OnClickListener {ButtonListener64,2178
        public void onClick(View v) {onClick65,2240

src/com/android/phone/FdnList.java,1114
package com.android.phone;com.android.phone17,621
public class FdnList extends ADNList {FdnList30,899
    private static final int MENU_ADD = 1;MENU_ADD31,938
    private static final int MENU_EDIT = 2;MENU_EDIT32,981
    private static final int MENU_DELETE = 3;MENU_DELETE33,1025
    private static final String INTENT_EXTRA_NAME = "name";INTENT_EXTRA_NAME35,1072
    private static final String INTENT_EXTRA_NUMBER = "number";INTENT_EXTRA_NUMBER36,1132
    protected Uri resolveIntent() {resolveIntent40,1212
    public boolean onCreateOptionsMenu(Menu menu) {onCreateOptionsMenu47,1395
    public boolean onPrepareOptionsMenu(Menu menu) {onPrepareOptionsMenu63,1998
    public boolean onOptionsItemSelected(MenuItem item) {onOptionsItemSelected75,2372
    public void onListItemClick(ListView l, View v, int position, long id) {onListItemClick94,2818
    private void addContact() {addContact99,2980
    private void editSelected() {editSelected113,3510
    private void editSelected(int position) {editSelected120,3675
    private void deleteSelected() {deleteSelected133,4159

src/com/android/phone/FdnSetting.java,3204
package com.android.phone;com.android.phone17,621
public class FdnSetting extends PreferenceActivityFdnSetting38,1252
    private Phone mPhone;mPhone41,1398
    private static final int EVENT_PIN2_ENTRY_COMPLETE = 100;EVENT_PIN2_ENTRY_COMPLETE47,1547
    private static final int EVENT_PIN2_CHANGE_COMPLETE = 200;EVENT_PIN2_CHANGE_COMPLETE48,1609
    private static final String BUTTON_FDN_ENABLE_KEY = "button_fdn_enable_key";BUTTON_FDN_ENABLE_KEY53,1834
    private static final String BUTTON_CHANGE_PIN2_KEY = "button_change_pin2_key";BUTTON_CHANGE_PIN2_KEY54,1915
    private EditPinPreference mButtonEnableFDN;mButtonEnableFDN56,1999
    private EditPinPreference mButtonChangePin2;mButtonChangePin257,2047
    private String mOldPin;mOldPin60,2120
    private String mNewPin;mNewPin61,2148
    private static final int PIN_CHANGE_OLD = 0;PIN_CHANGE_OLD62,2176
    private static final int PIN_CHANGE_NEW = 1;PIN_CHANGE_NEW63,2225
    private static final int PIN_CHANGE_REENTER = 2;PIN_CHANGE_REENTER64,2274
    private static final int PIN_CHANGE_PUK = 3;PIN_CHANGE_PUK65,2327
    private int mPinChangeState;mPinChangeState66,2376
    private boolean mSkipOldPin;    // Indicates we know that we are PUK2 blocked.mSkipOldPin67,2409
    private static final String SKIP_OLD_PIN_KEY = "skip_old_pin_key";SKIP_OLD_PIN_KEY69,2493
    private static final String PIN_CHANGE_STATE_KEY = "pin_change_state_key";PIN_CHANGE_STATE_KEY70,2564
    private static final String OLD_PIN_KEY = "old_pin_key";OLD_PIN_KEY71,2643
    private static final String NEW_PIN_KEY = "new_pin_key";NEW_PIN_KEY72,2704
    private static final String DIALOG_MESSAGE_KEY = "dialog_message_key";DIALOG_MESSAGE_KEY73,2765
    private static final String DIALOG_PIN_ENTRY_KEY = "dialog_pin_entry_key";DIALOG_PIN_ENTRY_KEY74,2840
    private static final int MIN_PIN_LENGTH = 4;MIN_PIN_LENGTH77,2952
    private static final int MAX_PIN_LENGTH = 8;MAX_PIN_LENGTH78,3001
    public void onPinEntered(EditPinPreference preference, boolean positiveResult) {onPinEntered83,3111
    private void toggleFDNEnable(boolean positiveResult) {toggleFDNEnable94,3464
    private void updatePINChangeState(boolean positiveResult) {updatePINChangeState119,4323
    private Handler mFDNHandler = new Handler() {mFDNHandler201,8112
    public void onCancel(DialogInterface dialog) {onCancel275,11939
    private final void displayMessage(int strId) {displayMessage284,12235
    private final void displayPinChangeDialog() {displayPinChangeDialog292,12477
    private final void displayPinChangeDialog(int strId, boolean shouldDisplay) {displayPinChangeDialog296,12575
    private final void resetPinChangeState() {resetPinChangeState330,13619
    private final void resetPinChangeStateForPUK2() {resetPinChangeStateForPUK2339,13874
    private boolean validatePin(String pin, boolean isPUK) {validatePin353,14273
    private void updateEnableFDN() {updateEnableFDN369,14730
    protected void onCreate(Bundle icicle) {onCreate382,15256
    protected void onResume() {onResume414,16516
    protected void onSaveInstanceState(Bundle out) {onSaveInstanceState424,16728

src/com/android/phone/GetPin2Screen.java,596
package com.android.phone;com.android.phone17,621
public class GetPin2Screen extends Activity {GetPin2Screen32,950
    private static final String LOG_TAG = PhoneApp.LOG_TAG;LOG_TAG33,996
    private EditText mPin2Field;mPin2Field35,1057
    protected void onCreate(Bundle icicle) {onCreate38,1105
    private void setupView() {setupView49,1368
    private String getPin2() {getPin258,1679
    private void returnResult() {returnResult62,1765
    private View.OnClickListener mClicked = new View.OnClickListener() {mClicked75,2126
    private void log(String msg) {log85,2381

src/com/android/phone/GsmUmtsAdditionalCallOptions.java,992
package com.android.phone;com.android.phone1,0
public class GsmUmtsAdditionalCallOptions extendsGsmUmtsAdditionalCallOptions10,191
    private static final String LOG_TAG = "GsmUmtsAdditionalCallOptions";LOG_TAG12,283
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG13,357
    private static final String BUTTON_CLIR_KEY  = "button_clir_key";BUTTON_CLIR_KEY15,417
    private static final String BUTTON_CW_KEY    = "button_cw_key";BUTTON_CW_KEY16,487
    private CLIRListPreference mCLIRButton;mCLIRButton18,556
    private CallWaitingCheckBoxPreference mCWButton;mCWButton19,600
    private ArrayList<Preference> mPreferences = new ArrayList<Preference> ();mPreferences21,654
    private int mInitIndex= 0;mInitIndex22,733
    protected void onCreate(Bundle icicle) {onCreate25,779
    protected void onSaveInstanceState(Bundle outState) {onSaveInstanceState57,2000
    public void onFinished(Preference preference, boolean reading) {onFinished66,2259

src/com/android/phone/GsmUmtsCallForwardOptions.java,1919
package com.android.phone;com.android.phone1,0
public class GsmUmtsCallForwardOptions extends TimeConsumingPreferenceActivity {GsmUmtsCallForwardOptions17,432
    private static final String LOG_TAG = "GsmUmtsCallForwardOptions";LOG_TAG18,513
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG19,584
    private static final String NUM_PROJECTION[] = {Phone.NUMBER};NUM_PROJECTION21,644
    private static final String BUTTON_CFU_KEY   = "button_cfu_key";BUTTON_CFU_KEY23,712
    private static final String BUTTON_CFB_KEY   = "button_cfb_key";BUTTON_CFB_KEY24,781
    private static final String BUTTON_CFNRY_KEY = "button_cfnry_key";BUTTON_CFNRY_KEY25,850
    private static final String BUTTON_CFNRC_KEY = "button_cfnrc_key";BUTTON_CFNRC_KEY26,921
    private static final String KEY_TOGGLE = "toggle";KEY_TOGGLE28,993
    private static final String KEY_STATUS = "status";KEY_STATUS29,1048
    private static final String KEY_NUMBER = "number";KEY_NUMBER30,1103
    private CallForwardEditPreference mButtonCFU;mButtonCFU32,1159
    private CallForwardEditPreference mButtonCFB;mButtonCFB33,1209
    private CallForwardEditPreference mButtonCFNRy;mButtonCFNRy34,1259
    private CallForwardEditPreference mButtonCFNRc;mButtonCFNRc35,1311
    private final ArrayList<CallForwardEditPreference> mPreferences =mPreferences37,1364
    private int mInitIndex= 0;mInitIndex39,1491
    private boolean mFirstResume;mFirstResume41,1523
    private Bundle mIcicle;mIcicle42,1557
    protected void onCreate(Bundle icicle) {onCreate45,1600
    public void onResume() {onResume75,2877
    protected void onSaveInstanceState(Bundle outState) {onSaveInstanceState101,3808
    public void onFinished(Preference preference, boolean reading) {onFinished116,4376
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {onActivityResult126,4678

src/com/android/phone/GsmUmtsCallOptions.java,352
package com.android.phone;com.android.phone17,621
public class GsmUmtsCallOptions extends PreferenceActivity {GsmUmtsCallOptions28,948
    private static final String LOG_TAG = "GsmUmtsCallOptions";LOG_TAG29,1009
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG30,1073
    protected void onCreate(Bundle icicle) {onCreate33,1147

src/com/android/phone/GsmUmtsOptions.java,1205
package com.android.phone;com.android.phone17,621
public class GsmUmtsOptions {GsmUmtsOptions30,976
    private static final String LOG_TAG = "GsmUmtsOptions";LOG_TAG31,1006
    private PreferenceScreen mButtonAPNExpand;mButtonAPNExpand33,1067
    private PreferenceScreen mButtonOperatorSelectionExpand;mButtonOperatorSelectionExpand34,1114
    private CheckBoxPreference mButtonPrefer2g;mButtonPrefer2g35,1175
    private static final String BUTTON_APN_EXPAND_KEY = "button_apn_key";BUTTON_APN_EXPAND_KEY37,1224
    private static final String BUTTON_OPERATOR_SELECTION_EXPAND_KEY = "button_carrier_sel_key";BUTTON_OPERATOR_SELECTION_EXPAND_KEY38,1298
    private static final String BUTTON_PREFER_2G_KEY = "button_prefer_2g_key";BUTTON_PREFER_2G_KEY39,1395
    private PreferenceActivity mPrefActivity;mPrefActivity41,1475
    private PreferenceScreen mPrefScreen;mPrefScreen42,1521
    public GsmUmtsOptions(PreferenceActivity prefActivity, PreferenceScreen prefScreen) {GsmUmtsOptions44,1564
    protected void create() {create50,1751
    public boolean preferenceTreeClick(Preference preference) {preferenceTreeClick73,3001
    protected void log(String s) {log82,3296

src/com/android/phone/HapticFeedback.java,1070
package com.android.phone;com.android.phone17,621
public class HapticFeedback {HapticFeedback62,1975
    private static final int VIBRATION_PATTERN_ID =VIBRATION_PATTERN_ID63,2005
    private static final long DURATION = 10;  // millisec.DURATION66,2200
    private static final int NO_REPEAT = -1;NO_REPEAT68,2305
    private static final String TAG = "HapticFeedback";TAG70,2351
    private Context mContext;mContext71,2407
    private long[] mHapticPattern;mHapticPattern72,2437
    private Vibrator mVibrator;mVibrator73,2472
    private boolean mEnabled;mEnabled75,2505
    private Settings.System mSystemSettings;mSystemSettings76,2535
    private ContentResolver mContentResolver;mContentResolver77,2580
    private boolean mSettingEnabled;mSettingEnabled78,2626
    public void init(Context context, boolean enabled) {init89,3045
    public void checkSystemSetting() {checkSystemSetting106,3601
    public void vibrate() {vibrate126,4224
    private boolean loadHapticSystemPattern(Resources r) {loadHapticSystemPattern136,4464

src/com/android/phone/IccNetworkDepersonalizationPanel.java,1656
package com.android.phone;com.android.phone17,621
public class IccNetworkDepersonalizationPanel extends IccPanel {IccNetworkDepersonalizationPanel48,1463
    private static final boolean DBG = false;DBG51,1551
    private static final int EVENT_ICC_NTWRK_DEPERSONALIZATION_RESULT = 100;EVENT_ICC_NTWRK_DEPERSONALIZATION_RESULT54,1611
    private Phone mPhone;mPhone56,1689
    private EditText     mPinEntry;mPinEntry59,1734
    private LinearLayout mEntryPanel;mEntryPanel60,1770
    private LinearLayout mStatusPanel;mStatusPanel61,1808
    private TextView     mStatusText;mStatusText62,1847
    private Button       mUnlockButton;mUnlockButton64,1886
    private Button       mDismissButton;mDismissButton65,1926
    private TextWatcher mPinEntryWatcher = new TextWatcher() {mPinEntryWatcher68,2017
    private Handler mHandler = new Handler() {mHandler84,2565
    public IccNetworkDepersonalizationPanel(Context context) {IccNetworkDepersonalizationPanel112,3765
    protected void onCreate(Bundle icicle) {onCreate117,3873
    protected void onStart() {onStart156,5536
    public boolean onKeyDown(int keyCode, KeyEvent event) {onKeyDown161,5644
    View.OnClickListener mUnlockListener = new View.OnClickListener() {mUnlockListener169,5843
    private void indicateBusy() {indicateBusy184,6378
    private void indicateError() {indicateError190,6572
    private void indicateSuccess() {indicateSuccess196,6763
    private void hideAlert() {hideAlert202,6957
    View.OnClickListener mDismissListener = new View.OnClickListener() {mDismissListener207,7091
    private void log(String msg) {log214,7340

src/com/android/phone/IccPanel.java,547
package com.android.phone;com.android.phone17,621
public class IccPanel extends Dialog {IccPanel31,956
    protected static final String TAG = PhoneApp.LOG_TAG;TAG32,995
    private StatusBarManager mStatusBarManager;mStatusBarManager34,1054
    public IccPanel(Context context) {IccPanel36,1103
    protected void onCreate(Bundle savedInstanceState) {onCreate41,1205
    protected void onStart() {onStart75,2965
    public void onStop() {onStop81,3110
    public boolean onKeyDown(int keyCode, KeyEvent event) {onKeyDown86,3234

src/com/android/phone/IccProvider.java,195
package com.android.phone;com.android.phone17,621
public class IccProvider extends com.android.internal.telephony.IccProvider {IccProvider22,695
    public IccProvider() {IccProvider23,773

src/com/android/phone/InCallControlState.java,1505
package com.android.phone;com.android.phone17,621
public class InCallControlState {InCallControlState44,1692
    private static final String LOG_TAG = "InCallControlState";LOG_TAG45,1726
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG46,1790
    private InCallScreen mInCallScreen;mInCallScreen48,1857
    private CallManager mCM;mCM49,1897
    public boolean manageConferenceVisible;manageConferenceVisible56,2070
    public boolean manageConferenceEnabled;manageConferenceEnabled57,2114
    public boolean canAddCall;canAddCall59,2165
    public boolean canSwap;canSwap61,2203
    public boolean canMerge;canMerge62,2231
    public boolean bluetoothEnabled;bluetoothEnabled64,2267
    public boolean bluetoothIndicatorOn;bluetoothIndicatorOn65,2304
    public boolean speakerEnabled;speakerEnabled67,2352
    public boolean speakerOn;speakerOn68,2387
    public boolean canMute;canMute70,2424
    public boolean muteIndicatorOn;muteIndicatorOn71,2452
    public boolean dialpadEnabled;dialpadEnabled73,2495
    public boolean dialpadVisible;dialpadVisible74,2530
    public boolean supportsHold;supportsHold77,2646
    public boolean onHold;onHold79,2728
    public boolean canHold;canHold85,3077
    public InCallControlState(InCallScreen inCallScreen, CallManager cm) {InCallControlState88,3107
    public void update() {update98,3412
    public void dumpState() {dumpState184,7036
    private void log(String msg) {log203,7855

src/com/android/phone/InCallMenu.java,1482
package com.android.phone;com.android.phone17,621
class InCallMenu {InCallMenu39,1410
    private static final String LOG_TAG = "PHONE/InCallMenu";LOG_TAG40,1429
    private static final boolean DBG = false;DBG41,1491
    private InCallScreen mInCallScreen;mInCallScreen48,1739
    private InCallMenuView mInCallMenuView;mInCallMenuView53,1833
    InCallMenuItemView mManageConference;mManageConference58,1943
    InCallMenuItemView mShowDialpad;mShowDialpad59,1985
    InCallMenuItemView mEndCall;mEndCall60,2022
    InCallMenuItemView mAddCall;mAddCall61,2055
    InCallMenuItemView mSwapCalls;mSwapCalls62,2088
    InCallMenuItemView mMergeCalls;mMergeCalls63,2123
    InCallMenuItemView mBluetooth;mBluetooth64,2159
    InCallMenuItemView mSpeaker;mSpeaker65,2194
    InCallMenuItemView mMute;mMute66,2227
    InCallMenuItemView mHold;mHold67,2257
    InCallMenuItemView mAnswerAndHold;mAnswerAndHold68,2287
    InCallMenuItemView mAnswerAndEnd;mAnswerAndEnd69,2326
    InCallMenuItemView mAnswer;mAnswer70,2364
    InCallMenuItemView mIgnore;mIgnore71,2396
    InCallMenu(InCallScreen inCallScreen) {InCallMenu73,2429
    void clearInCallScreenReference() {clearInCallScreenReference82,2718
    /* package */ InCallMenuView getView() {getView87,2878
    /* package */ void initMenu() {initMenu103,3514
    /* package */ boolean updateItems(CallManager cm) {updateItems265,10388
    private void log(String msg) {log475,19877

src/com/android/phone/InCallMenuItemView.java,1296
package com.android.phone;com.android.phone17,621
class InCallMenuItemView extends TextView {InCallMenuItemView38,1263
    private static final String LOG_TAG = "PHONE/InCallMenuItemView";LOG_TAG39,1307
    private static final boolean DBG = false;DBG40,1377
    private boolean mIndicatorVisible;mIndicatorVisible42,1424
    private boolean mIndicatorState;mIndicatorState43,1463
    private Drawable mIndicatorDrawable;mIndicatorDrawable44,1500
    private Drawable mIcon;mIcon45,1541
    public InCallMenuItemView(Context context) {InCallMenuItemView47,1570
    public void setVisible(boolean isVisible) {setVisible73,2458
    public boolean isVisible() {isVisible77,2564
    public void setIndicatorVisible(boolean isVisible) {setIndicatorVisible85,2758
    public void setIndicatorState(boolean onoff) {setIndicatorState95,3070
    public void setIcon(Drawable icon) {setIcon105,3364
    public void setIconResource(int resId) {setIconResource117,3731
    private void updateIndicator() {updateIndicator126,4040
    private void updateCompoundDrawables() {updateCompoundDrawables141,4622
    private void setSingleLineMarquee() {setSingleLineMarquee175,6183
    public String toString() {toString182,6363
    private void log(String msg) {log186,6466

src/com/android/phone/InCallMenuView.java,2876
package com.android.phone;com.android.phone17,621
class InCallMenuView extends ViewGroup {InCallMenuView42,1342
    private static final String LOG_TAG = "PHONE/InCallMenuView";LOG_TAG43,1383
    private static final boolean DBG = false;DBG44,1449
    private int mRowHeight;mRowHeight46,1496
    private Drawable mHorizontalDivider;mHorizontalDivider49,1575
    private int mHorizontalDividerHeight;mHorizontalDividerHeight51,1660
    private ArrayList<Rect> mHorizontalDividerRects;mHorizontalDividerRects53,1792
    private Drawable mVerticalDivider;mVerticalDivider56,1899
    private int mVerticalDividerWidth;mVerticalDividerWidth58,1979
    private ArrayList<Rect> mVerticalDividerRects;mVerticalDividerRects60,2104
    private Drawable mItemBackground;mItemBackground63,2240
    private static final int NUM_ROWS = 3;NUM_ROWS73,2581
    private static final int MAX_ITEMS_PER_ROW = 10;MAX_ITEMS_PER_ROW74,2624
    private InCallMenuItemView[][] mItems = new InCallMenuItemView[NUM_ROWS][MAX_ITEMS_PER_ROW];mItems75,2677
    private int mNumItemsForRow[] = new int[NUM_ROWS];mNumItemsForRow77,2775
    private int mNumVisibleItemsForRow[] = new int[NUM_ROWS];mNumVisibleItemsForRow84,2998
    private int mNumVisibleRows;mNumVisibleRows85,3060
    private InCallScreen mInCallScreen;mInCallScreen92,3295
    InCallMenuView(Context context, InCallScreen inCallScreen) {InCallMenuView95,3337
    void clearInCallScreenReference() {clearInCallScreenReference165,6781
    /* package */ void addItemView(InCallMenuItemView itemView, int row) {addItemView172,6930
    /* package */ void updateVisibility() {updateVisibility208,8185
    /* package */ void dumpState() {dumpState228,9051
    private void positionChildren(int menuWidth, int menuHeight) {positionChildren254,10249
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {onMeasure347,14455
    protected void onLayout(boolean changed, int l, int t, int r, int b) {onLayout364,15201
    protected void onDraw(Canvas canvas) {onDraw382,15922
    public boolean dispatchKeyEvent(KeyEvent event) {dispatchKeyEvent403,16735
    public LayoutParams generateLayoutParams(AttributeSet attrs) {generateLayoutParams457,19231
    protected boolean checkLayoutParams(ViewGroup.LayoutParams p) {checkLayoutParams462,19388
    public static class LayoutParams extends ViewGroup.MarginLayoutParams {LayoutParams471,19716
        int left, top, right, bottom;left472,19792
        int left, top, right, bottom;top472,19792
        int left, top, right, bottom;right472,19792
        int left, top, right, bottom;bottom472,19792
        public LayoutParams(Context c, AttributeSet attrs) {LayoutParams474,19831
        public LayoutParams(int width, int height) {LayoutParams478,19932
    private void log(String msg) {log483,20036

src/com/android/phone/InCallScreen.java,17365
package com.android.phone;com.android.phone17,621
public class InCallScreen extends ActivityInCallScreen80,2713
    private static final String LOG_TAG = "InCallScreen";LOG_TAG82,2820
    private static final boolean DBG =DBG84,2879
    private static final boolean VDBG = (PhoneApp.DBG_LEVEL >= 2);VDBG86,3011
    static final String SHOW_DIALPAD_EXTRA = "com.android.phone.ShowDialpad";SHOW_DIALPAD_EXTRA95,3437
    /* package */ static final String EXTRA_GATEWAY_PROVIDER_PACKAGE =EXTRA_GATEWAY_PROVIDER_PACKAGE105,3873
    /* package */ static final String EXTRA_GATEWAY_URI =EXTRA_GATEWAY_URI117,4475
    private static final int CALL_ENDED_SHORT_DELAY =  200;  // msecCALL_ENDED_SHORT_DELAY123,4789
    private static final int CALL_ENDED_LONG_DELAY = 2000;  // msecCALL_ENDED_LONG_DELAY124,4858
    private static final int MENU_DISMISS_DELAY =  1000;  // msecMENU_DISMISS_DELAY128,5070
    private static final int PAUSE_PROMPT_DIALOG_TIMEOUT = 2000;  //msecPAUSE_PROMPT_DIALOG_TIMEOUT132,5264
    private static final int TOUCH_LOCK_DELAY_DEFAULT =  6000;  // msecTOUCH_LOCK_DELAY_DEFAULT135,5421
    private static final int THREEWAY_CALLERINFO_DISPLAY_TIME = 3000; // msecTHREEWAY_CALLERINFO_DISPLAY_TIME138,5570
    private static final int PROVIDER_OVERLAY_TIMEOUT = 5000;  // msecPROVIDER_OVERLAY_TIMEOUT141,5725
    static final int AUTO_RETRY_OFF = 0;AUTO_RETRY_OFF148,6056
    static final int AUTO_RETRY_ON = 1;AUTO_RETRY_ON149,6097
    private static final int PHONE_STATE_CHANGED = 101;PHONE_STATE_CHANGED153,6243
    private static final int PHONE_DISCONNECT = 102;PHONE_DISCONNECT154,6299
    private static final int EVENT_HEADSET_PLUG_STATE_CHANGED = 103;EVENT_HEADSET_PLUG_STATE_CHANGED155,6352
    private static final int POST_ON_DIAL_CHARS = 104;POST_ON_DIAL_CHARS156,6421
    private static final int WILD_PROMPT_CHAR_ENTERED = 105;WILD_PROMPT_CHAR_ENTERED157,6476
    private static final int ADD_VOICEMAIL_NUMBER = 106;ADD_VOICEMAIL_NUMBER158,6537
    private static final int DONT_ADD_VOICEMAIL_NUMBER = 107;DONT_ADD_VOICEMAIL_NUMBER159,6594
    private static final int DELAYED_CLEANUP_AFTER_DISCONNECT = 108;DELAYED_CLEANUP_AFTER_DISCONNECT160,6656
    private static final int SUPP_SERVICE_FAILED = 110;SUPP_SERVICE_FAILED161,6725
    private static final int DISMISS_MENU = 111;DISMISS_MENU162,6781
    private static final int ALLOW_SCREEN_ON = 112;ALLOW_SCREEN_ON163,6830
    private static final int TOUCH_LOCK_TIMER = 113;TOUCH_LOCK_TIMER164,6882
    private static final int REQUEST_UPDATE_BLUETOOTH_INDICATION = 114;REQUEST_UPDATE_BLUETOOTH_INDICATION165,6935
    private static final int PHONE_CDMA_CALL_WAITING = 115;PHONE_CDMA_CALL_WAITING166,7007
    private static final int THREEWAY_CALLERINFO_DISPLAY_DONE = 116;THREEWAY_CALLERINFO_DISPLAY_DONE167,7067
    private static final int EVENT_OTA_PROVISION_CHANGE = 117;EVENT_OTA_PROVISION_CHANGE168,7136
    private static final int REQUEST_CLOSE_SPC_ERROR_NOTICE = 118;REQUEST_CLOSE_SPC_ERROR_NOTICE169,7199
    private static final int REQUEST_CLOSE_OTA_FAILURE_NOTICE = 119;REQUEST_CLOSE_OTA_FAILURE_NOTICE170,7266
    private static final int EVENT_PAUSE_DIALOG_COMPLETE = 120;EVENT_PAUSE_DIALOG_COMPLETE171,7335
    private static final int EVENT_HIDE_PROVIDER_OVERLAY = 121;  // Time to remove the overlay.EVENT_HIDE_PROVIDER_OVERLAY172,7399
    private static final int REQUEST_UPDATE_TOUCH_UI = 122;REQUEST_UPDATE_TOUCH_UI173,7495
    public static final String ACTION_SHOW_ACTIVATION =ACTION_SHOW_ACTIVATION176,7604
    public static final String OTA_NUMBER = "*228";OTA_NUMBER178,7721
    public static final String EXTRA_OTA_CALL = "android.phone.extra.OTA_CALL";EXTRA_OTA_CALL179,7773
    public static final String ACTION_UNDEFINED = "com.android.phone.InCallScreen.UNDEFINED";ACTION_UNDEFINED185,8067
    private enum InCallScreenMode {InCallScreenMode188,8207
        NORMAL,NORMAL192,8314
        MANAGE_CONFERENCE,MANAGE_CONFERENCE197,8452
        CALL_ENDED,CALL_ENDED202,8629
        OTA_NORMAL,OTA_NORMAL206,8725
        OTA_ENDED,OTA_ENDED210,8840
        UNDEFINEDUNDEFINED214,8925
    private InCallScreenMode mInCallScreenMode = InCallScreenMode.UNDEFINED;mInCallScreenMode216,8949
    private enum InCallInitStatus {InCallInitStatus222,9297
        SUCCESS,SUCCESS223,9333
        VOICEMAIL_NUMBER_MISSING,VOICEMAIL_NUMBER_MISSING224,9350
        POWER_OFF,POWER_OFF225,9384
        EMERGENCY_ONLY,EMERGENCY_ONLY226,9403
        OUT_OF_SERVICE,OUT_OF_SERVICE227,9427
        PHONE_NOT_IN_USE,PHONE_NOT_IN_USE228,9451
        NO_PHONE_NUMBER_SUPPLIED,NO_PHONE_NUMBER_SUPPLIED229,9477
        DIALED_MMI,DIALED_MMI230,9511
        CALL_FAILEDCALL_FAILED231,9531
    private InCallInitStatus mInCallInitialStatus;  // see onResume()mInCallInitialStatus233,9557
    private boolean mRegisteredForPhoneStates;mRegisteredForPhoneStates235,9628
    private boolean mNeedShowCallLostDialog;mNeedShowCallLostDialog236,9675
    private CallManager mCM;mCM238,9721
    private Phone mPhone;mPhone240,9751
    private BluetoothHandsfree mBluetoothHandsfree;mBluetoothHandsfree242,9778
    private BluetoothHeadset mBluetoothHeadset;mBluetoothHeadset243,9830
    private boolean mBluetoothConnectionPending;mBluetoothConnectionPending244,9878
    private long mBluetoothConnectionRequestTime;mBluetoothConnectionRequestTime245,9927
    private ViewGroup mMainFrame;mMainFrame248,10012
    private ViewGroup mInCallPanel;mInCallPanel249,10046
    private CallCard mCallCard;mCallCard252,10116
    private InCallControlState mInCallControlState;mInCallControlState255,10169
    private InCallMenu mInCallMenu;  // used on some devicesmInCallMenu256,10221
    private InCallTouchUi mInCallTouchUi;  // used on some devicesmInCallTouchUi257,10282
    private ManageConferenceUtils mManageConferenceUtils;mManageConferenceUtils258,10349
    private DTMFTwelveKeyDialer mDialer;mDialer261,10452
    private DTMFTwelveKeyDialerView mDialerView;mDialerView262,10493
    private boolean mProviderOverlayVisible = false;mProviderOverlayVisible266,10671
    private CharSequence mProviderLabel;mProviderLabel267,10724
    private Drawable mProviderIcon;mProviderIcon268,10765
    private Uri mProviderGatewayUri;mProviderGatewayUri269,10801
    private String mProviderAddress;mProviderAddress271,10916
    public OtaUtils otaUtils;otaUtils274,10974
    private EditText mWildPromptText;mWildPromptText276,11005
    private boolean mUseTouchLockOverlay;  // True if we use this feature on the current devicemUseTouchLockOverlay279,11080
    private View mTouchLockOverlay;  // The overlay over the whole screenmTouchLockOverlay280,11176
    private View mTouchLockIcon;  // The "lock" icon in the middle of the screenmTouchLockIcon281,11250
    private Animation mTouchLockFadeIn;mTouchLockFadeIn282,11331
    private long mTouchLockLastTouchTime;  // in SystemClock.uptimeMillis() time basemTouchLockLastTouchTime283,11371
    private Dialog mMmiStartedDialog;mMmiStartedDialog291,11779
    private AlertDialog mMissingVoicemailDialog;mMissingVoicemailDialog292,11817
    private AlertDialog mGenericErrorDialog;mGenericErrorDialog293,11866
    private AlertDialog mSuppServiceFailureDialog;mSuppServiceFailureDialog294,11911
    private AlertDialog mWaitPromptDialog;mWaitPromptDialog295,11962
    private AlertDialog mWildPromptDialog;mWildPromptDialog296,12005
    private AlertDialog mCallLostDialog;mCallLostDialog297,12048
    private AlertDialog mPausePromptDialog;mPausePromptDialog298,12089
    private boolean mIsDestroyed = false;mIsDestroyed303,12366
    private boolean mIsForegroundActivity = false;mIsForegroundActivity304,12408
    private String mPostDialStrAfterPause;mPostDialStrAfterPause307,12504
    private boolean mPauseInProgress = false;mPauseInProgress308,12547
    private Connection.DisconnectCause mLastDisconnectCause;mLastDisconnectCause314,12850
    private Handler mHandler = new Handler() {mHandler317,12913
    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {mReceiver505,21242
    protected void onCreate(Bundle icicle) {onCreate526,22325
    /* package */ void setPhone(Phone phone) {setPhone649,28028
    protected void onResume() {onResume654,28120
    protected void onPause() {onPause835,36357
    protected void onStop() {onStop935,40496
    protected void onDestroy() {onDestroy967,41941
    public void finish() {finish1026,44105
    public void endInCallScreenSession() {endInCallScreenSession1038,44432
    /* package */ boolean isForegroundActivity() {isForegroundActivity1044,44622
    /* package */ void updateKeyguardPolicy(boolean dismissKeyguard) {updateKeyguardPolicy1048,44718
    private void registerForPhoneStates() {registerForPhoneStates1056,45024
    private void unregisterForPhoneStates() {unregisterForPhoneStates1075,46165
    /* package */ void updateAfterRadioTechnologyChange() {updateAfterRadioTechnologyChange1087,46676
    protected void onNewIntent(Intent intent) {onNewIntent1102,47183
    /* package */ InCallInitStatus internalResolveIntent(Intent intent) {internalResolveIntent1134,48770
    private void stopTimer() {stopTimer1229,53609
    private void initInCallScreen() {initInCallScreen1233,53701
    private boolean phoneIsInUse() {phoneIsInUse1267,55121
    private boolean handleDialerKeyDown(int keyCode, KeyEvent event) {handleDialerKeyDown1271,55216
    public void onBackPressed() {onBackPressed1293,56214
    private boolean handleCallKey() {handleCallKey1349,58459
    boolean isKeyEventAcceptableDTMF (KeyEvent event) {isKeyEventAcceptableDTMF1432,63070
    public void onWindowFocusChanged(boolean hasFocus) {onWindowFocusChanged1451,63918
    public boolean dispatchKeyEvent(KeyEvent event) {dispatchKeyEvent1461,64292
    public boolean onKeyUp(int keyCode, KeyEvent event) {onKeyUp1488,65324
    public boolean onKeyDown(int keyCode, KeyEvent event) {onKeyDown1502,65820
    void onSuppServiceFailed(AsyncResult r) {onSuppServiceFailed1621,71376
    private void onPhoneStateChanged(AsyncResult r) {onPhoneStateChanged1695,74497
    private void onDisconnect(AsyncResult r) {onDisconnect1729,75833
    private void onMMIInitiate(AsyncResult r) {onMMIInitiate1991,89566
    private void onMMICancel() {onMMICancel2024,90981
    private void handlePostOnDialChars(AsyncResult r, char ch) {handlePostOnDialChars2052,92224
    private void showWaitPromptDialogGSM(final Connection c, String postDialStr) {showWaitPromptDialogGSM2120,95078
    private void showWaitPromptDialogCDMA(final Connection c, String postDialStr) {showWaitPromptDialogCDMA2164,97086
    private void showPausePromptDialogCDMA(final Connection c, String postDialStrAfterPause) {showPausePromptDialogCDMA2204,98902
    private View createWildPromptView() {createWildPromptView2225,99763
    private void showWildPromptDialog(final Connection c) {showWildPromptDialog2259,101103
    private void updateScreen() {updateScreen2304,103120
    private InCallInitStatus syncWithPhoneState() {syncWithPhoneState2436,109663
    private String getInitialNumber(Intent intent)getInitialNumber2487,111791
    private InCallInitStatus placeCall(Intent intent) {placeCall2511,112644
    private InCallInitStatus checkIfOkToInitiateOutgoingCall(int state) {checkIfOkToInitiateOutgoingCall2718,122961
    private void handleMissingVoiceMailNumber() {handleMissingVoiceMailNumber2753,124608
    private void addVoiceMailNumberPanel() {addVoiceMailNumberPanel2794,126746
    private void dontAddVoiceMailNumber() {dontAddVoiceMailNumber2810,127342
    private void delayedCleanupAfterDisconnect() {delayedCleanupAfterDisconnect2835,128425
    public void onClick(View view) {onClick2914,132498
    private void onHoldClick() {onHoldClick3073,139228
    private void onSpeakerClick() {onSpeakerClick3107,140880
    private void onMuteClick() {onMuteClick3136,142036
    private void onBluetoothClick() {onBluetoothClick3142,142215
    private void onShowHideDialpad() {onShowHideDialpad3169,143375
    /* package */ void handleOnscreenButtonClick(int id) {handleOnscreenButtonClick3182,143786
    private void updateProviderOverlay() {updateProviderOverlay3263,147118
    private void updateMenuButtonHint() {updateMenuButtonHint3293,148394
    private void handleStartupError(InCallInitStatus status) {handleStartupError3348,150687
    private void showGenericErrorDialog(int resid, boolean isStartupError) {showGenericErrorDialog3441,154949
    private void showCallLostDialog() {showCallLostDialog3484,156796
    private void bailOutAfterErrorDialog() {bailOutAfterErrorDialog3506,157588
    private void dismissAllDialogs() {dismissAllDialogs3522,158256
    /* package */ void internalAnswerCall() {internalAnswerCall3586,160611
    /* package */ void internalAnswerAndEnd() {internalAnswerAndEnd3634,162959
    /* package */ void internalHangupRingingCall() {internalHangupRingingCall3645,163390
    /* package */ void internalHangup() {internalHangup3656,163812
    private void internalSwapCalls() {internalSwapCalls3664,164035
    private void setInCallScreenMode(InCallScreenMode newMode) {setInCallScreenMode3703,165895
    /* package */ boolean isManageConferenceMode() {isManageConferenceMode3840,172223
    private void updateManageConferencePanelIfNecessary() {updateManageConferencePanelIfNecessary3852,172756
    private void updateDialpadVisibility() {updateDialpadVisibility3902,175138
    /* package */ boolean isDialerOpened() {isDialerOpened3965,177848
    /* package */ void onDialerOpen() {onDialerOpen3973,178070
    /* package */ void onDialerClose() {onDialerClose4004,179156
    private boolean okToDialDTMFTones() {okToDialDTMFTones4039,180422
    /* package */ boolean okToShowDialpad() {okToShowDialpad4072,181945
    private void initInCallTouchUi() {initInCallTouchUi4081,182244
    private void updateInCallTouchUi() {updateInCallTouchUi4094,182824
    public boolean isTouchUiEnabled() {isTouchUiEnabled4104,183103
    public boolean isIncomingCallTouchUiEnabled() {isIncomingCallTouchUiEnabled4112,183360
    /* package */ void requestUpdateTouchUi() {requestUpdateTouchUi4123,183783
    /* package */ boolean okToShowInCallTouchUi() {okToShowInCallTouchUi4134,184140
    public boolean isPhoneStateRestricted() {isPhoneStateRestricted4150,184846
    public View onCreatePanelView(int featureId) {onCreatePanelView4183,186470
    /* package */ void dismissMenu(boolean dismissImmediate) {dismissMenu4225,188107
    public void onPanelClosed(int featureId, Menu menu) {onPanelClosed4243,188745
    /* package */ boolean isBluetoothAvailable() {isBluetoothAvailable4282,190468
    /* package */ boolean isBluetoothAudioConnected() {isBluetoothAudioConnected4324,192231
    /* package */ boolean isBluetoothAudioConnectedOrPending() {isBluetoothAudioConnectedOrPending4344,193129
    /* package */ void requestUpdateBluetoothIndication() {requestUpdateBluetoothIndication4377,194547
    private void dumpBluetoothState() {dumpBluetoothState4386,195042
    /* package */ void connectBluetoothAudio() {connectBluetoothAudio4411,196227
    /* package */ void disconnectBluetoothAudio() {disconnectBluetoothAudio4428,197011
    private void initTouchLock() {initTouchLock4462,198506
    private boolean isTouchLocked() {isTouchLocked4487,199481
    private void enableTouchLock(boolean enable) {enableTouchLock4510,200462
    private void resetTouchLockTimer() {resetTouchLockTimer4570,203105
    private void touchLockTimerExpired() {touchLockTimerExpired4599,204301
    public boolean onTouch(View v, MotionEvent event) {onTouch4607,204612
    public void onUserInteraction() {onUserInteraction4696,209100
    /* package */ void requestCloseOtaFailureNotice(long timeout) {requestCloseOtaFailureNotice4707,209431
    /* package */ void requestCloseSpcErrorNotice(long timeout) {requestCloseSpcErrorNotice4724,210287
    public boolean isOtaCallInActiveState() {isOtaCallInActiveState4729,210522
    public void handleOtaCallEnd() {handleOtaCallEnd4746,211215
    public boolean isOtaCallInEndState() {isOtaCallInEndState4762,211911
    private boolean checkIsOtaCall(Intent intent) {checkIsOtaCall4773,212300
    private boolean initOtaState() {initOtaState4860,216197
    public void updateMenuItems() {updateMenuItems4899,218062
    public InCallControlState getUpdatedInCallControlState() {getUpdatedInCallControlState4911,218374
    private void updateInCallBackground() {updateInCallBackground4924,218774
    public void resetInCallScreenMode() {resetInCallScreenMode4991,221838
    private void clearProvider() {clearProvider4999,222104
    /* package */ void updateSlidingTabHint(int hintTextResId, int hintColorResId) {updateSlidingTabHint5016,222687
    public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event) {dispatchPopulateAccessibilityEvent5033,223610
    public void onConfigurationChanged(Configuration newConfig) {onConfigurationChanged5049,224257
    private void log(String msg) {log5079,225732

src/com/android/phone/InCallScreenShowActivation.java,431
package com.android.phone;com.android.phone17,621
public class InCallScreenShowActivation extends Activity {InCallScreenShowActivation31,964
    private static final String LOG_TAG = "InCallScreenShowActivation";LOG_TAG32,1023
    private static final String EXTRA_USER_SKIP_PENDING_INTENT = "ota_user_skip_pending_intent";EXTRA_USER_SKIP_PENDING_INTENT36,1249
    protected void onCreate(Bundle icicle) {onCreate39,1361

src/com/android/phone/InCallTouchUi.java,4043
package com.android.phone;com.android.phone17,621
public class InCallTouchUi extends FrameLayoutInCallTouchUi48,1616
    private static final int IN_CALL_WIDGET_TRANSITION_TIME = 250; // in msIN_CALL_WIDGET_TRANSITION_TIME50,1735
    private static final String LOG_TAG = "InCallTouchUi";LOG_TAG51,1811
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG52,1870
    private InCallScreen mInCallScreen;mInCallScreen59,2137
    private PhoneApp mApplication;mApplication62,2204
    private SlidingTab mIncomingCallWidget;  // UI used for an incoming callmIncomingCallWidget65,2272
    private View mInCallControls;  // UI elements while on a regular callmInCallControls66,2349
    private Button mAddButton;mAddButton68,2430
    private Button mMergeButton;mMergeButton69,2461
    private Button mEndButton;mEndButton70,2494
    private Button mDialpadButton;mDialpadButton71,2525
    private ToggleButton mBluetoothButton;mBluetoothButton72,2560
    private ToggleButton mMuteButton;mMuteButton73,2603
    private ToggleButton mSpeakerButton;mSpeakerButton74,2641
    private View mHoldButtonContainer;mHoldButtonContainer76,2689
    private ImageButton mHoldButton;mHoldButton77,2728
    private TextView mHoldButtonLabel;mHoldButtonLabel78,2765
    private View mSwapButtonContainer;mSwapButtonContainer79,2804
    private ImageButton mSwapButton;mSwapButton80,2843
    private TextView mSwapButtonLabel;mSwapButtonLabel81,2880
    private View mCdmaMergeButtonContainer;mCdmaMergeButtonContainer82,2919
    private ImageButton mCdmaMergeButton;mCdmaMergeButton83,2963
    private Drawable mHoldIcon;mHoldIcon85,3012
    private Drawable mUnholdIcon;mUnholdIcon86,3044
    private Drawable mShowDialpadIcon;mShowDialpadIcon87,3078
    private Drawable mHideDialpadIcon;mHideDialpadIcon88,3117
    private long mLastIncomingCallActionTime;  // in SystemClock.uptimeMillis() time basemLastIncomingCallActionTime91,3236
    private boolean mAllowIncomingCallTouchUi;mAllowIncomingCallTouchUi94,3381
    private boolean mAllowInCallTouchUi;mAllowInCallTouchUi95,3428
    public InCallTouchUi(Context context, AttributeSet attrs) {InCallTouchUi97,3470
    void setInCallScreenInstance(InCallScreen inCallScreen) {setInCallScreenInstance125,4696
    protected void onFinishInflate() {onFinishInflate130,4817
    void updateState(CallManager cm) {updateState230,10469
    public void onClick(View view) {onClick318,14507
    void updateInCallControls(Phone phone) {updateInCallControls348,15538
    /* package */ boolean isTouchUiEnabled() {isTouchUiEnabled519,23856
    /* package */ boolean isIncomingCallTouchUiEnabled() {isIncomingCallTouchUiEnabled527,24078
    public void onTrigger(View v, int whichHandle) {onTrigger547,24697
    private void hideIncomingCallWidget() {hideIncomingCallWidget600,26866
    private void showIncomingCallWidget() {showIncomingCallWidget631,27958
    public void onGrabbedStateChange(View v, int grabbedState) {onGrabbedStateChange646,28489
    class SmallerHitTargetTouchListener implements View.OnTouchListener {SmallerHitTargetTouchListener690,30589
        private static final int HIT_TARGET_PERCENT_X = 50;HIT_TARGET_PERCENT_X695,30796
        private static final int HIT_TARGET_PERCENT_Y = 80;HIT_TARGET_PERCENT_Y705,31204
        private static final int X_EDGE = (100 - HIT_TARGET_PERCENT_X) / 2;X_EDGE708,31348
        private static final int Y_EDGE = (100 - HIT_TARGET_PERCENT_Y) / 2;Y_EDGE709,31424
        private static final int X_HIT_MIN = X_EDGE;X_HIT_MIN711,31579
        private static final int X_HIT_MAX = 100 - X_EDGE;X_HIT_MAX712,31632
        private static final int Y_HIT_MIN = Y_EDGE;Y_HIT_MIN713,31691
        private static final int Y_HIT_MAX = 100 - Y_EDGE;Y_HIT_MAX714,31744
        boolean mDownEventHit;mDownEventHit717,31863
        public boolean onTouch(View v, MotionEvent event) {onTouch728,32366
    private void log(String msg) {log779,34866

src/com/android/phone/ManageConferenceUtils.java,1998
package com.android.phone;com.android.phone17,621
public class ManageConferenceUtilsManageConferenceUtils42,1332
    private static final String LOG_TAG = "ManageConferenceUtils";LOG_TAG44,1433
    private static final boolean DBG =DBG45,1500
    private InCallScreen mInCallScreen;mInCallScreen48,1633
    private CallManager mCM;mCM49,1673
    private ViewGroup mManageConferencePanel;mManageConferencePanel52,1752
    private Button mButtonManageConferenceDone;mButtonManageConferenceDone53,1798
    private ViewGroup[] mConferenceCallList;mConferenceCallList54,1846
    private int mNumCallersInConference;mNumCallersInConference55,1891
    private Chronometer mConferenceTime;mConferenceTime56,1932
    private static final int MAX_CALLERS_IN_CONFERENCE = 5;MAX_CALLERS_IN_CONFERENCE59,2022
    public ManageConferenceUtils(InCallScreen inCallScreen, CallManager cm) {ManageConferenceUtils61,2083
    public void initManageConferencePanel() {initManageConferencePanel67,2286
    public void setPanelVisible(boolean visible) {setPanelVisible105,4029
    public void startConferenceTime(long base) {startConferenceTime114,4294
    public void stopConferenceTime() {stopConferenceTime124,4543
    public int getNumCallersInConference() {getNumCallersInConference130,4674
    public void updateManageConferencePanel(List<Connection> connections) {updateManageConferencePanel142,5088
    public void updateManageConferenceRow(final int i,updateManageConferenceRow176,6644
    public final void displayCallerInfoForConferenceRow(CallerInfo ci,displayCallerInfoForConferenceRow243,9952
    public void endConferenceConnection(int i, Connection connection) {endConferenceConnection285,11697
    public void separateConferenceConnection(int i, Connection connection) {separateConferenceConnection301,12478
    public void onQueryComplete(int token, Object cookie, CallerInfo ci) {onQueryComplete324,13464
    private void log(String msg) {log339,14102

src/com/android/phone/NetworkQueryService.java,1505
package com.android.phone;com.android.phone17,621
public class NetworkQueryService extends Service {NetworkQueryService39,1221
    private static final String LOG_TAG = "NetworkQuery";LOG_TAG41,1290
    private static final boolean DBG = false;DBG42,1348
    private static final int EVENT_NETWORK_SCAN_COMPLETED = 100; EVENT_NETWORK_SCAN_COMPLETED45,1416
    private static final int QUERY_READY = -1;QUERY_READY48,1552
    private static final int QUERY_IS_RUNNING = -2;QUERY_IS_RUNNING49,1599
    public static final int QUERY_OK = 0;QUERY_OK52,1716
    public static final int QUERY_EXCEPTION = 1;QUERY_EXCEPTION53,1758
    private int mState;mState56,1850
    private Phone mPhone;mPhone59,1923
    public class LocalBinder extends Binder {LocalBinder66,2130
        INetworkQueryService getService() {getService67,2176
    private final IBinder mLocalBinder = new LocalBinder();mLocalBinder71,2264
    Handler mHandler = new Handler() {mHandler77,2429
    final RemoteCallbackList<INetworkQueryServiceCallback> mCallbacks =mCallbacks95,3060
    private final INetworkQueryService.Stub mBinder = new INetworkQueryService.Stub() {mBinder101,3279
    public void onCreate() {onCreate158,5875
    public void onStart(Intent intent, int startId) {onStart167,6068
    public IBinder onBind(Intent intent) {onBind174,6195
    private void broadcastQueryResults (AsyncResult ar) {broadcastQueryResults186,6643
    private static void log(String msg) {log217,7869

src/com/android/phone/NetworkSetting.java,3498
package com.android.phone;com.android.phone17,621
public class NetworkSetting extends PreferenceActivityNetworkSetting48,1524
    private static final String LOG_TAG = "phone";LOG_TAG51,1634
    private static final boolean DBG = false;DBG52,1685
    private static final int EVENT_NETWORK_SCAN_COMPLETED = 100;EVENT_NETWORK_SCAN_COMPLETED54,1732
    private static final int EVENT_NETWORK_SELECTION_DONE = 200;EVENT_NETWORK_SELECTION_DONE55,1797
    private static final int EVENT_AUTO_SELECT_DONE = 300;EVENT_AUTO_SELECT_DONE56,1862
    private static final int DIALOG_NETWORK_SELECTION = 100;DIALOG_NETWORK_SELECTION59,1939
    private static final int DIALOG_NETWORK_LIST_LOAD = 200;DIALOG_NETWORK_LIST_LOAD60,2000
    private static final int DIALOG_NETWORK_AUTO_SELECT = 300;DIALOG_NETWORK_AUTO_SELECT61,2061
    private static final String LIST_NETWORKS_KEY = "list_networks_key";LIST_NETWORKS_KEY64,2165
    private static final String BUTTON_SRCH_NETWRKS_KEY = "button_srch_netwrks_key";BUTTON_SRCH_NETWRKS_KEY65,2238
    private static final String BUTTON_AUTO_SELECT_KEY = "button_auto_select_key";BUTTON_AUTO_SELECT_KEY66,2323
    private HashMap<Preference, NetworkInfo> mNetworkMap;mNetworkMap69,2458
    Phone mPhone;mPhone71,2517
    protected boolean mIsForeground = false;mIsForeground72,2535
    String mNetworkSelectMsg;mNetworkSelectMsg75,2622
    private PreferenceGroup mNetworkList;mNetworkList78,2678
    private Preference mSearchButton;mSearchButton79,2720
    private Preference mAutoSelect;mAutoSelect80,2758
    private final Handler mHandler = new Handler() {mHandler82,2795
    private INetworkQueryService mNetworkQueryService = null;mNetworkQueryService135,4847
    private final ServiceConnection mNetworkQueryServiceConnection = new ServiceConnection() {mNetworkQueryServiceConnection138,4940
    private final INetworkQueryServiceCallback mCallback = new INetworkQueryServiceCallback.Stub() {mCallback159,5879
    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {onPreferenceTreeClick171,6409
    public void onCancel(DialogInterface dialog) {onCancel198,7311
    public String getNormalizedCarrierName(NetworkInfo ni) {getNormalizedCarrierName208,7632
    protected void onCreate(Bundle icicle) {onCreate216,7856
    public void onResume() {onResume240,8971
    public void onPause() {onPause246,9077
    protected void onDestroy() {onDestroy256,9296
    protected Dialog onCreateDialog(int id) {onCreateDialog264,9464
    protected void onPrepareDialog(int id, Dialog dialog) {onPrepareDialog299,11075
    private void displayEmptyNetworkList(boolean flag) {displayEmptyNetworkList308,11477
    private void displayNetworkSeletionInProgress(String networkStr) {displayNetworkSeletionInProgress312,11636
    private void displayNetworkQueryFailed(int error) {displayNetworkQueryFailed321,11943
    private void displayNetworkSelectionFailed(Throwable ex) {displayNetworkSelectionFailed328,12232
    private void displayNetworkSelectionSucceeded() {displayNetworkSelectionSucceeded344,12831
    private void loadNetworksList() {loadNetworksList357,13253
    private void networksListLoaded(List<NetworkInfo> result, int status) {networksListLoaded380,13954
    private void clearList() {clearList420,15319
    private void selectNetworkAutomatic() {selectNetworkAutomatic427,15494
    private void log(String msg) {log437,15818

src/com/android/phone/NotificationMgr.java,5661
package com.android.phone;com.android.phone17,621
public class NotificationMgr implements CallerInfoAsyncQuery.OnQueryCompleteListener{NotificationMgr56,1972
    private static final String LOG_TAG = "NotificationMgr";LOG_TAG57,2058
    private static final boolean DBG =DBG58,2119
    private static final String[] CALL_LOG_PROJECTION = new String[] {CALL_LOG_PROJECTION61,2252
    static final int MISSED_CALL_NOTIFICATION = 1;MISSED_CALL_NOTIFICATION70,2462
    static final int IN_CALL_NOTIFICATION = 2;IN_CALL_NOTIFICATION71,2513
    static final int MMI_NOTIFICATION = 3;MMI_NOTIFICATION72,2560
    static final int NETWORK_SELECTION_NOTIFICATION = 4;NETWORK_SELECTION_NOTIFICATION73,2603
    static final int VOICEMAIL_NOTIFICATION = 5;VOICEMAIL_NOTIFICATION74,2660
    static final int CALL_FORWARD_NOTIFICATION = 6;CALL_FORWARD_NOTIFICATION75,2709
    static final int DATA_DISCONNECTED_ROAMING_NOTIFICATION = 7;DATA_DISCONNECTED_ROAMING_NOTIFICATION76,2761
    static final int SELECTED_OPERATOR_FAIL_NOTIFICATION = 8;SELECTED_OPERATOR_FAIL_NOTIFICATION77,2826
    private static NotificationMgr sMe = null;sMe79,2889
    private Phone mPhone;mPhone80,2936
    private CallManager mCM;mCM81,2962
    private Context mContext;mContext83,2992
    private NotificationManager mNotificationMgr;mNotificationMgr84,3022
    private StatusBarManager mStatusBar;mStatusBar85,3072
    private StatusBarMgr mStatusBarMgr;mStatusBarMgr86,3113
    private Toast mToast;mToast87,3153
    private boolean mShowingSpeakerphoneIcon;mShowingSpeakerphoneIcon88,3179
    private boolean mShowingMuteIcon;mShowingMuteIcon89,3225
    private int mNumberMissedCalls = 0;mNumberMissedCalls92,3324
    private int mInCallResId;mInCallResId96,3478
    private boolean mSelectedUnavailableNotify = false;mSelectedUnavailableNotify99,3579
    private static final int MAX_VM_NUMBER_RETRIES = 5;MAX_VM_NUMBER_RETRIES102,3708
    private static final int VM_NUMBER_RETRY_DELAY_MILLIS = 10000;VM_NUMBER_RETRY_DELAY_MILLIS103,3764
    private int mVmNumberRetriesRemaining = MAX_VM_NUMBER_RETRIES;mVmNumberRetriesRemaining104,3831
    private QueryHandler mQueryHandler = null;mQueryHandler107,3976
    private static final int CALL_LOG_TOKEN = -1;CALL_LOG_TOKEN108,4023
    private static final int CONTACT_TOKEN = -2;CONTACT_TOKEN109,4073
    NotificationMgr(Context context) {NotificationMgr111,4123
    static void init(Context context) {init123,4508
    static NotificationMgr getDefault() {getDefault130,4716
    StatusBarMgr getStatusBarMgr() {getStatusBarMgr144,5096
    class StatusBarMgr {StatusBarMgr154,5316
        private boolean mIsNotificationEnabled = true;mIsNotificationEnabled156,5369
        private boolean mIsExpandedViewEnabled = true;mIsExpandedViewEnabled157,5424
        private StatusBarMgr () {StatusBarMgr159,5480
        void enableNotificationAlerts(boolean enable) {enableNotificationAlerts169,5838
        void enableExpandedView(boolean enable) {enableExpandedView183,6348
        void updateStatusBar() {updateStatusBar194,6668
    private void updateNotificationsAtStartup() {updateNotificationsAtStartup215,7294
    static final String[] PHONES_PROJECTION = new String[] {PHONES_PROJECTION241,8371
    private class QueryHandler extends AsyncQueryHandler {QueryHandler250,8618
        private class NotificationInfo {NotificationInfo256,8789
            public String name;name257,8830
            public String number;number258,8862
            public String label;label259,8896
            public long date;date260,8929
        public QueryHandler(ContentResolver cr) {QueryHandler263,8970
        protected void onQueryComplete(int token, Object cookie, Cursor cursor) {onQueryComplete274,9350
        private final NotificationInfo getNotificationInfo(Cursor cursor) {getNotificationInfo341,12409
    private static void configureLedNotification(Notification note) {configureLedNotification368,13577
    void notifyMissedCall(String name, String number, String label, long date) {notifyMissedCall379,14016
    void cancelMissedCallNotification() {cancelMissedCallNotification427,15931
    void notifySpeakerphone() {notifySpeakerphone433,16121
    void cancelSpeakerphone() {cancelSpeakerphone440,16349
    void updateSpeakerNotification() {updateSpeakerNotification451,16673
    private void notifyMute() {notifyMute463,17161
    private void cancelMute() {cancelMute470,17365
    void updateMuteNotification() {updateMuteNotification481,17652
    void updateInCallNotification() {updateInCallNotification496,18173
    public void onQueryComplete(int token, Object cookie, CallerInfo ci){onQueryComplete703,28599
    private void cancelInCall() {cancelInCall728,29773
    void cancelCallInProgressNotification() {cancelCallInProgressNotification736,29990
    /* package */ void updateMwi(boolean visible) {updateMwi751,30420
    /* package */ void updateCfi(boolean visible) {updateCfi859,35707
    /* package */ void showDataDisconnectedRoaming() {showDataDisconnectedRoaming915,38406
    /* package */ void hideDataDisconnectedRoaming() {hideDataDisconnectedRoaming939,39386
    private void showNetworkSelection(String operator) {showNetworkSelection948,39712
    private void cancelNetworkSelection() {cancelNetworkSelection979,41075
    void updateNetworkSelection(int serviceState) {updateNetworkSelection989,41389
    /* package */ void postTransientNotification(int notifyId, CharSequence msg) {postTransientNotification1021,42810
    private void log(String msg) {log1030,43060

src/com/android/phone/OtaStartupReceiver.java,643
package com.android.phone;com.android.phone17,621
public class OtaStartupReceiver extends BroadcastReceiver {OtaStartupReceiver36,1264
    private static final String TAG = "OtaStartupReceiver";TAG37,1324
    private static final boolean DBG = (SystemProperties.getInt("ro.debuggable", 0) == 1);DBG38,1384
    private static final int MIN_READY = 10;MIN_READY39,1475
    private Context mContext;mContext40,1520
    private Handler mHandler = new Handler() {mHandler42,1551
    public void onReceive(Context context, Intent intent) {onReceive53,1898
    private boolean shouldPostpone(Context context) {shouldPostpone85,3457

src/com/android/phone/OtaUtils.java,8613
package com.android.phone;com.android.phone17,621
public class OtaUtils {OtaUtils59,1933
    private static final String LOG_TAG = "OtaUtils";LOG_TAG60,1957
    private static final String UNACTIVATED_MIN2_VALUE = "000000";UNACTIVATED_MIN2_VALUE61,2011
    private static final String UNACTIVATED_MIN_VALUE = "1111110111";UNACTIVATED_MIN_VALUE62,2078
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 1);DBG63,2148
    public static final int OTA_SHOW_ACTIVATION_SCREEN_OFF = 0;OTA_SHOW_ACTIVATION_SCREEN_OFF65,2215
    public static final int OTA_SHOW_ACTIVATION_SCREEN_ON = 1;OTA_SHOW_ACTIVATION_SCREEN_ON66,2279
    public static final int OTA_SHOW_LISTENING_SCREEN_OFF =0;OTA_SHOW_LISTENING_SCREEN_OFF67,2342
    public static final int OTA_SHOW_LISTENING_SCREEN_ON =1;OTA_SHOW_LISTENING_SCREEN_ON68,2404
    public static final int OTA_SHOW_ACTIVATE_FAIL_COUNT_OFF = 0;OTA_SHOW_ACTIVATE_FAIL_COUNT_OFF69,2465
    public static final int OTA_SHOW_ACTIVATE_FAIL_COUNT_THREE = 3;OTA_SHOW_ACTIVATE_FAIL_COUNT_THREE70,2531
    public static final int OTA_PLAY_SUCCESS_FAILURE_TONE_OFF = 0;OTA_PLAY_SUCCESS_FAILURE_TONE_OFF71,2599
    public static final int OTA_PLAY_SUCCESS_FAILURE_TONE_ON = 1;OTA_PLAY_SUCCESS_FAILURE_TONE_ON72,2666
    public final int OTA_SPC_TIMEOUT = 60;OTA_SPC_TIMEOUT75,2766
    public final int OTA_FAILURE_DIALOG_TIMEOUT = 2;OTA_FAILURE_DIALOG_TIMEOUT76,2809
    private InCallScreen mInCallScreen;mInCallScreen78,2863
    private Context mContext;mContext79,2903
    private PhoneApp mApplication;mApplication80,2933
    private OtaWidgetData mOtaWidgetData;mOtaWidgetData81,2968
    private ViewGroup mInCallPanel;mInCallPanel82,3010
    private CallCard mCallCard;mCallCard83,3046
    private DTMFTwelveKeyDialer mDialer;mDialer87,3206
    private DTMFTwelveKeyDialer mOtaCallCardDtmfDialer;mOtaCallCardDtmfDialer92,3457
    private static boolean mIsWizardMode = true;mIsWizardMode96,3651
    private class OtaWidgetData {OtaWidgetData101,3774
        public Button otaEndButton;otaEndButton102,3808
        public Button otaActivateButton;otaActivateButton103,3844
        public Button otaSkipButton;otaSkipButton104,3885
        public Button otaNextButton;otaNextButton105,3922
        public ToggleButton otaSpeakerButton;otaSpeakerButton106,3959
        public View otaCallCardBase;otaCallCardBase107,4005
        public View callCardOtaButtonsFailSuccess;callCardOtaButtonsFailSuccess108,4042
        public ProgressBar otaTextProgressBar;otaTextProgressBar109,4093
        public TextView otaTextSuccessFail;otaTextSuccessFail110,4140
        public View callCardOtaButtonsActivate;callCardOtaButtonsActivate111,4184
        public View callCardOtaButtonsListenProgress;callCardOtaButtonsListenProgress112,4232
        public TextView otaTextActivate;otaTextActivate113,4286
        public TextView otaTextListenProgress;otaTextListenProgress114,4327
        public ScrollView otaTextListenProgressContainer;otaTextListenProgressContainer115,4374
        public AlertDialog spcErrorDialog;spcErrorDialog116,4432
        public AlertDialog otaFailureDialog;otaFailureDialog117,4475
        public AlertDialog otaSkipConfirmationDialog;otaSkipConfirmationDialog118,4520
        public TextView otaTitle;otaTitle119,4574
        public DTMFTwelveKeyDialerView otaDtmfDialerView;otaDtmfDialerView120,4608
        public Button otaTryAgainButton;otaTryAgainButton121,4666
    public OtaUtils(Context context,OtaUtils124,4714
    public static boolean needsActivation(String minString) throws IllegalArgumentException {needsActivation154,5723
    public static boolean maybeDoOtaCall(Context context, Handler handler, int request) {maybeDoOtaCall172,6521
    private void setSpeaker(boolean state) {setSpeaker222,8508
    public void onOtaProvisionStatusChanged(AsyncResult r) {onOtaProvisionStatusChanged242,9240
    private void otaShowHome() {otaShowHome281,11134
    private void otaSkipActivation() {otaSkipActivation293,11612
    private void otaPerformActivation() {otaPerformActivation310,12250
    public void otaShowActivateScreen() {otaShowActivateScreen327,12978
    private void otaShowListeningScreen() {otaShowListeningScreen354,14257
    private void otaShowInProgressScreen() {otaShowInProgressScreen386,15824
    private void otaShowProgramFailure(int length) {otaShowProgramFailure413,17148
    public void otaShowSuccessFailure() {otaShowSuccessFailure435,18201
    private void otaShowProgramFailureDialog() {otaShowProgramFailureDialog454,18947
    private void otaShowProgramSuccessDialog() {otaShowProgramSuccessDialog472,19790
    private void otaShowSpcErrorNotice(int length) {otaShowSpcErrorNotice493,20820
    public void onOtaCloseSpcNotice() {onOtaCloseSpcNotice524,22263
    private void otaShowProgramFailureNotice(int length) {otaShowProgramFailureNotice536,22736
    public void onOtaCloseFailureNotice() {onOtaCloseFailureNotice556,23596
    private void otaScreenInitialize() {otaScreenInitialize570,24101
    public void hideOtaScreen() {hideOtaScreen593,25365
    public boolean isDialerOpened() {isDialerOpened602,25753
    public void otaShowProperScreen() {otaShowProperScreen610,25998
    private void readXmlSettings() {readXmlSettings639,27316
    public void onClickHandler(int id) {onClickHandler674,29087
    private void onClickOtaTryAgainButton() {onClickOtaTryAgainButton706,29946
    private void onClickOtaEndButton() {onClickOtaEndButton713,30165
    private void onClickOtaSpeakerButton() {onClickOtaSpeakerButton726,30702
    private void onClickOtaActivateButton() {onClickOtaActivateButton734,30983
    private void onClickOtaActivateSkipButton() {onClickOtaActivateSkipButton739,31118
    private void onClickOtaActivateNextButton() {onClickOtaActivateNextButton771,32602
    public void dismissAllOtaDialogs() {dismissAllOtaDialogs780,32943
    private int getOtaSpcDisplayTime() {getOtaSpcDisplayTime793,33449
    private void initOtaInCallScreen() {initOtaInCallScreen815,34309
    public void cleanOtaScreen(boolean disableSpeaker) {cleanOtaScreen884,38303
    public static class CdmaOtaProvisionData {CdmaOtaProvisionData929,40458
        public boolean isOtaCallCommitted;isOtaCallCommitted930,40505
        public boolean isOtaCallIntentProcessed;isOtaCallIntentProcessed931,40548
        public boolean inOtaSpcState;inOtaSpcState932,40597
        public int activationCount;activationCount933,40635
        public long otaSpcUptime;otaSpcUptime934,40671
    public static class CdmaOtaConfigData {CdmaOtaConfigData941,40835
        public int otaShowActivationScreen;otaShowActivationScreen942,40879
        public int otaShowListeningScreen;otaShowListeningScreen943,40923
        public int otaShowActivateFailTimes;otaShowActivateFailTimes944,40966
        public int otaPlaySuccessFailureTone;otaPlaySuccessFailureTone945,41011
        public boolean configComplete;configComplete946,41057
        public CdmaOtaConfigData() {CdmaOtaConfigData947,41096
    public static class CdmaOtaInCallScreenUiState {CdmaOtaInCallScreenUiState959,41557
        public enum State {State960,41610
            UNDEFINED,UNDEFINED961,41638
            NORMAL,NORMAL962,41661
            ENDEDENDED963,41681
        public State state;state966,41710
        public CdmaOtaInCallScreenUiState() {CdmaOtaInCallScreenUiState968,41739
        public PendingIntent reportSkipPendingIntent;reportSkipPendingIntent974,42027
    public void setCdmaOtaInCallScreenUiState(CdmaOtaInCallScreenUiState.State state) {setCdmaOtaInCallScreenUiState980,42146
    public CdmaOtaInCallScreenUiState.State getCdmaOtaInCallScreenUiState() {getCdmaOtaInCallScreenUiState988,42424
    public static class CdmaOtaScreenState {CdmaOtaScreenState996,42727
        public enum OtaScreenState {OtaScreenState997,42772
            OTA_STATUS_UNDEFINED,OTA_STATUS_UNDEFINED998,42809
            OTA_STATUS_ACTIVATION,OTA_STATUS_ACTIVATION999,42843
            OTA_STATUS_LISTENING,OTA_STATUS_LISTENING1000,42878
            OTA_STATUS_PROGRESS,OTA_STATUS_PROGRESS1001,42912
            OTA_STATUS_SUCCESS_FAILURE_DLGOTA_STATUS_SUCCESS_FAILURE_DLG1002,42945
        public OtaScreenState otaScreenState;otaScreenState1005,42999
        public CdmaOtaScreenState() {CdmaOtaScreenState1007,43046
    private static void log(String msg) {log1012,43167
    public static boolean isCdmaPhone() {isCdmaPhone1016,43245

src/com/android/phone/OutgoingCallBroadcaster.java,1604
package com.android.phone;com.android.phone17,621
public class OutgoingCallBroadcaster extends Activity {OutgoingCallBroadcaster47,1673
    private static final String PERMISSION = android.Manifest.permission.PROCESS_OUTGOING_CALLS;PERMISSION49,1730
    private static final String TAG = "OutgoingCallBroadcaster";TAG50,1827
    private static final boolean DBG =DBG51,1892
    public static final String EXTRA_ALREADY_CALLED = "android.phone.extra.ALREADY_CALLED";EXTRA_ALREADY_CALLED54,2025
    public static final String EXTRA_ORIGINAL_URI = "android.phone.extra.ORIGINAL_URI";EXTRA_ORIGINAL_URI55,2117
    public static final String EXTRA_NEW_CALL_INTENT = "android.phone.extra.NEW_CALL_INTENT";EXTRA_NEW_CALL_INTENT56,2205
    public static final String EXTRA_SIP_PHONE_URI = "android.phone.extra.SIP_PHONE_URI";EXTRA_SIP_PHONE_URI57,2299
    public static final String EXTRA_SEND_EMPTY_FLASH = "com.android.phone.extra.SEND_EMPTY_FLASH";EXTRA_SEND_EMPTY_FLASH69,2955
    public class OutgoingCallReceiver extends BroadcastReceiver {OutgoingCallReceiver76,3321
        private static final String TAG = "OutgoingCallReceiver";TAG77,3387
        public void onReceive(Context context, Intent intent) {onReceive79,3454
        public void doReceive(Context context, Intent intent) {doReceive84,3591
    private void startSipCallOptionsHandler(Context context, Intent intent,startSipCallOptionsHandler154,6607
    protected void onCreate(Bundle icicle) {onCreate174,7521
    public void onConfigurationChanged(Configuration newConfig) {onConfigurationChanged356,16258

src/com/android/phone/PhoneApp.java,10298
package com.android.phone;com.android.phone17,621
public class PhoneApp extends Application implements AccelerometerListener.OrientationListener {PhoneApp70,2463
    /* package */ static final String LOG_TAG = "PhoneApp";LOG_TAG71,2560
    /* package */ static final int DBG_LEVEL = 0;DBG_LEVEL89,3239
    private static final boolean DBG =DBG91,3290
    private static final boolean VDBG = (PhoneApp.DBG_LEVEL >= 2);VDBG93,3422
    private static final int EVENT_SIM_NETWORK_LOCKED = 3;EVENT_SIM_NETWORK_LOCKED96,3532
    private static final int EVENT_WIRED_HEADSET_PLUG = 7;EVENT_WIRED_HEADSET_PLUG97,3591
    private static final int EVENT_SIM_STATE_CHANGED = 8;EVENT_SIM_STATE_CHANGED98,3650
    private static final int EVENT_UPDATE_INCALL_NOTIFICATION = 9;EVENT_UPDATE_INCALL_NOTIFICATION99,3708
    private static final int EVENT_DATA_ROAMING_DISCONNECTED = 10;EVENT_DATA_ROAMING_DISCONNECTED100,3775
    private static final int EVENT_DATA_ROAMING_OK = 11;EVENT_DATA_ROAMING_OK101,3842
    private static final int EVENT_UNSOL_CDMA_INFO_RECORD = 12;EVENT_UNSOL_CDMA_INFO_RECORD102,3899
    private static final int EVENT_DOCK_STATE_CHANGED = 13;EVENT_DOCK_STATE_CHANGED103,3963
    private static final int EVENT_TTY_PREFERRED_MODE_CHANGED = 14;EVENT_TTY_PREFERRED_MODE_CHANGED104,4023
    private static final int EVENT_TTY_MODE_GET = 15;EVENT_TTY_MODE_GET105,4091
    private static final int EVENT_TTY_MODE_SET = 16;EVENT_TTY_MODE_SET106,4145
    public static final int MMI_INITIATE = 51;MMI_INITIATE109,4256
    public static final int MMI_COMPLETE = 52;MMI_COMPLETE110,4303
    public static final int MMI_CANCEL = 53;MMI_CANCEL111,4350
    public enum ScreenTimeoutDuration {ScreenTimeoutDuration123,4987
        SHORT,SHORT124,5027
        MEDIUM,MEDIUM125,5042
        DEFAULTDEFAULT126,5058
    public enum WakeState {WakeState135,5334
        SLEEP,SLEEP136,5362
        PARTIAL,PARTIAL137,5377
        FULLFULL138,5394
    private static PhoneApp sMe;sMe141,5414
    Phone phone;phone145,5582
    CallNotifier notifier;notifier146,5599
    Ringer ringer;ringer147,5626
    BluetoothHandsfree mBtHandsfree;mBtHandsfree148,5645
    PhoneInterfaceManager phoneMgr;phoneMgr149,5682
    CallManager mCM;mCM150,5718
    int mBluetoothHeadsetState = BluetoothHeadset.STATE_ERROR;mBluetoothHeadsetState151,5739
    int mBluetoothHeadsetAudioState = BluetoothHeadset.STATE_ERROR;mBluetoothHeadsetAudioState152,5802
    boolean mShowBluetoothIndication = false;mShowBluetoothIndication153,5870
    static int mDockState = Intent.EXTRA_DOCK_STATE_UNDOCKED;mDockState154,5916
    CdmaPhoneCallState cdmaPhoneCallState;cdmaPhoneCallState157,6023
    private InCallScreen mInCallScreen;mInCallScreen161,6162
    private Activity mPUKEntryActivity;mPUKEntryActivity167,6426
    private ProgressDialog mPUKEntryProgressDialog;mPUKEntryProgressDialog168,6466
    private boolean mIsSimPinEnabled;mIsSimPinEnabled170,6519
    private String mCachedSimPin;mCachedSimPin171,6557
    private boolean mIsHeadsetPlugged;mIsHeadsetPlugged176,6772
    private boolean mIsHardKeyboardOpen;mIsHardKeyboardOpen180,6927
    private boolean mBeginningCall;mBeginningCall183,7049
    Phone.State mLastPhoneState = Phone.State.IDLE;mLastPhoneState186,7137
    private WakeState mWakeState = WakeState.SLEEP;mWakeState188,7190
    private ScreenTimeoutDuration mScreenTimeoutDuration = ScreenTimeoutDuration.DEFAULT;mScreenTimeoutDuration189,7242
    private boolean mIgnoreTouchUserActivity = false;mIgnoreTouchUserActivity190,7332
    private IBinder mPokeLockToken = new Binder();mPokeLockToken191,7386
    private IPowerManager mPowerManagerService;mPowerManagerService192,7437
    private PowerManager.WakeLock mWakeLock;mWakeLock193,7485
    private PowerManager.WakeLock mPartialWakeLock;mPartialWakeLock194,7530
    private PowerManager.WakeLock mProximityWakeLock;mProximityWakeLock195,7582
    private KeyguardManager mKeyguardManager;mKeyguardManager196,7636
    private StatusBarManager mStatusBarManager;mStatusBarManager197,7682
    private int mStatusBarDisableCount;mStatusBarDisableCount198,7730
    private AccelerometerListener mAccelerometerListener;mAccelerometerListener199,7770
    private int mOrientation = AccelerometerListener.ORIENTATION_UNKNOWN;mOrientation200,7828
    private final BroadcastReceiver mReceiver = new PhoneAppBroadcastReceiver();mReceiver203,7976
    private final BroadcastReceiver mMediaButtonReceiver = new MediaButtonBroadcastReceiver();mMediaButtonReceiver206,8126
    private boolean mShouldRestoreMuteOnInCallResume;mShouldRestoreMuteOnInCallResume209,8300
    public OtaUtils.CdmaOtaProvisionData cdmaOtaProvisionData;cdmaOtaProvisionData217,8747
    public OtaUtils.CdmaOtaConfigData cdmaOtaConfigData;cdmaOtaConfigData218,8810
    public OtaUtils.CdmaOtaScreenState cdmaOtaScreenState;cdmaOtaScreenState219,8867
    public OtaUtils.CdmaOtaInCallScreenUiState cdmaOtaInCallScreenUiState;cdmaOtaInCallScreenUiState220,8926
    private boolean mTtyEnabled;mTtyEnabled223,9046
    private int mPreferredTtyMode = Phone.TTY_MODE_OFF;mPreferredTtyMode225,9130
    /*package*/void setRestoreMuteOnInCallResume (boolean mode) {setRestoreMuteOnInCallResume231,9357
    /*package*/boolean getRestoreMuteOnInCallResume () {getRestoreMuteOnInCallResume240,9694
    Handler mHandler = new Handler() {mHandler244,9807
    public PhoneApp() {PhoneApp390,16876
    public void onCreate() {onCreate395,16941
    public void onConfigurationChanged(Configuration newConfig) {onConfigurationChanged573,25528
    static PhoneApp getInstance() {getInstance588,26027
    static Phone getPhone() {getPhone595,26161
    Ringer getRinger() {getRinger599,26234
    BluetoothHandsfree getBluetoothHandsfree() {getBluetoothHandsfree603,26289
    static Intent createCallLogIntent() {createCallLogIntent607,26374
    /* package */ static Intent createInCallIntent() {createInCallIntent619,26796
    /* package */ static Intent createInCallIntent(boolean showDialpad) {createInCallIntent633,27365
    static String getCallScreenClassName() {getCallScreenClassName639,27586
    private void displayCallScreen() {displayCallScreen646,27740
    boolean isSimPinEnabled() {isSimPinEnabled652,27931
    boolean authenticateAgainstCachedSimPin(String pin) {authenticateAgainstCachedSimPin656,28003
    void setCachedSimPin(String pin) {setCachedSimPin660,28137
    void setInCallScreenInstance(InCallScreen inCallScreen) {setInCallScreenInstance664,28212
    boolean isShowingCallScreen() {isShowingCallScreen679,28822
    void dismissCallScreen() {dismissCallScreen693,29322
    void handleOtaEvents(Message msg) {handleOtaEvents723,30608
    void setPukEntryActivity(Activity activity) {setPukEntryActivity746,31517
    Activity getPUKEntryActivity() {getPUKEntryActivity750,31612
    void setPukEntryProgressDialog(ProgressDialog dialog) {setPukEntryProgressDialog763,32050
    ProgressDialog getPUKEntryProgressDialog() {getPUKEntryProgressDialog767,32159
    /* package */ void disableStatusBar() {disableStatusBar777,32481
    /* package */ void reenableStatusBar() {reenableStatusBar793,33057
    /* package */ void setScreenTimeout(ScreenTimeoutDuration duration) {setScreenTimeout821,34212
    private void updatePokeLock() {updatePokeLock843,35029
    /* package */ void requestWakeState(WakeState ws) {requestWakeState902,37697
    /* package */ void wakeUpScreen() {wakeUpScreen943,39345
    /* package */ void updateWakeState() {updateWakeState967,40321
    /* package */ void preventScreenOn(boolean prevent) {preventScreenOn1059,45009
    /* package */ void setIgnoreTouchUserActivity(boolean ignore) {setIgnoreTouchUserActivity1081,45978
    /* package */ void pokeUserActivity() {pokeUserActivity1094,46552
    /* package */ void setBeginningCall(boolean beginning) {setBeginningCall1109,47141
    /* package */ void updateProximitySensorMode(Phone.State state) {updateProximitySensorMode1144,48748
    public void orientationChanged(int orientation) {orientationChanged1191,51399
    /* package */ void updatePhoneState(Phone.State state) {updatePhoneState1200,51680
    /* package */ Phone.State getPhoneState() {getPhoneState1222,52770
    /* package */ boolean proximitySensorModeEnabled() {proximitySensorModeEnabled1230,53014
    KeyguardManager getKeyguardManager() {getKeyguardManager1234,53123
    private void onMMIComplete(AsyncResult r) {onMMIComplete1238,53206
    private void initForNewRadioTechnology() {initForNewRadioTechnology1244,53445
    boolean isHeadsetPlugged() {isHeadsetPlugged1295,55498
    /* package */ boolean showBluetoothIndication() {showBluetoothIndication1310,56018
    /* package */ void updateBluetoothIndication(boolean forceUiUpdate) {updateBluetoothIndication1324,56517
    private static boolean shouldShowBluetoothIndication(int bluetoothState,shouldShowBluetoothIndication1349,57799
    private class PhoneAppBroadcastReceiver extends BroadcastReceiver {PhoneAppBroadcastReceiver1388,59600
        public void onReceive(Context context, Intent intent) {onReceive1390,59690
    private class MediaButtonBroadcastReceiver extends BroadcastReceiver {MediaButtonBroadcastReceiver1496,66782
        public void onReceive(Context context, Intent intent) {onReceive1498,66875
    private void handleServiceStateChanged(Intent intent) {handleServiceStateChanged1529,68518
    public boolean isOtaCallInActiveState() {isOtaCallInActiveState1558,69519
    public boolean isOtaCallInEndState() {isOtaCallInEndState1567,69835
    public void clearOtaState() {clearOtaState1577,70218
    public void dismissOtaDialogs() {dismissOtaDialogs1587,70633
    public void clearInCallScreenMode() {clearInCallScreenMode1597,71067
    public void updateInCallScreenTouchUi() {updateInCallScreenTouchUi1605,71370
    private void handleQueryTTYModeResponse(Message msg) {handleQueryTTYModeResponse1612,71588
    private void handleSetTTYModeResponse(Message msg) {handleSetTTYModeResponse1648,73012
    /* package */ void clearUserActivityTimeout() {clearUserActivityTimeout1659,73402

src/com/android/phone/PhoneInterfaceManager.java,5445
package com.android.phone;com.android.phone17,621
public class PhoneInterfaceManager extends ITelephony.Stub {PhoneInterfaceManager46,1447
    private static final String LOG_TAG = "PhoneInterfaceManager";LOG_TAG47,1508
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG48,1575
    private static final int CMD_HANDLE_PIN_MMI = 1;CMD_HANDLE_PIN_MMI51,1692
    private static final int CMD_HANDLE_NEIGHBORING_CELL = 2;CMD_HANDLE_NEIGHBORING_CELL52,1745
    private static final int EVENT_NEIGHBORING_CELL_DONE = 3;EVENT_NEIGHBORING_CELL_DONE53,1807
    private static final int CMD_ANSWER_RINGING_CALL = 4;CMD_ANSWER_RINGING_CALL54,1869
    private static final int CMD_END_CALL = 5;  // not used yetCMD_END_CALL55,1927
    private static final int CMD_SILENCE_RINGER = 6;CMD_SILENCE_RINGER56,1991
    PhoneApp mApp;mApp58,2045
    Phone mPhone;mPhone59,2064
    CallManager mCM;mCM60,2082
    MainThreadHandler mMainThreadHandler;mMainThreadHandler61,2103
    private static final class MainThreadRequest {MainThreadRequest67,2349
        public Object argument;argument69,2451
        public Object result;result71,2555
        public MainThreadRequest(Object argument) {MainThreadRequest73,2586
    private final class MainThreadHandler extends Handler {MainThreadHandler90,3386
        public void handleMessage(Message msg) {handleMessage92,3464
    private Object sendRequest(int command, Object argument) {sendRequest172,6816
    private void sendRequestAsync(int command) {sendRequestAsync200,7831
    public PhoneInterfaceManager(PhoneApp app, Phone phone) {PhoneInterfaceManager204,7941
    private void publish() {publish212,8169
    public void dial(String number) {dial222,8364
    public void call(String number) {call242,9142
    private boolean showCallScreenInternal(boolean specifyInitialDialpadState,showCallScreenInternal261,9799
    public boolean showCallScreen() {showCallScreen283,10615
    public boolean showCallScreenWithDialpad(boolean showDialpad) {showCallScreenWithDialpad290,10925
    public boolean endCall() {endCall298,11152
    public void answerRingingCall() {answerRingingCall303,11281
    private void answerRingingCallInternal() {answerRingingCallInternal325,12397
    public void silenceRinger() {silenceRinger350,13540
    private void silenceRingerInternal() {silenceRingerInternal364,14094
    public boolean isOffhook() {isOffhook373,14419
    public boolean isRinging() {isRinging377,14518
    public boolean isIdle() {isIdle381,14617
    public boolean isSimPinEnabled() {isSimPinEnabled385,14710
    public boolean supplyPin(String pin) {supplyPin390,14848
    private static class CheckSimPin extends Thread {CheckSimPin401,15198
        private final IccCard mSimCard;mSimCard403,15253
        private boolean mDone = false;mDone405,15294
        private boolean mResult = false;mResult406,15333
        private Handler mHandler;mHandler409,15421
        private static final int SUPPLY_PIN_COMPLETE = 100;SUPPLY_PIN_COMPLETE412,15510
        public CheckSimPin(IccCard simCard) {CheckSimPin414,15571
        public void run() {run419,15678
        synchronized boolean checkPin(String pin) {checkPin443,16639
    public void updateServiceLocation() {updateServiceLocation470,17453
    public boolean isRadioOn() {isRadioOn477,17751
    public void toggleRadioOnOff() {toggleRadioOnOff481,17875
    public boolean setRadio(boolean turnOn) {setRadio485,17997
    public boolean enableDataConnectivity() {enableDataConnectivity493,18243
    public int enableApnType(String type) {enableApnType498,18379
    public int disableApnType(String type) {disableApnType503,18508
    public boolean disableDataConnectivity() {disableDataConnectivity508,18639
    public boolean isDataConnectivityPossible() {isDataConnectivityPossible513,18777
    public boolean handlePinMmi(String dialString) {handlePinMmi517,18886
    public void cancelMissedCallsNotification() {cancelMissedCallsNotification522,19051
    public int getCallState() {getCallState527,19212
    public int getDataState() {getDataState531,19324
    public int getDataActivity() {getDataActivity535,19450
    public Bundle getCellLocation() {getCellLocation539,19585
    public void enableLocationUpdates() {enableLocationUpdates555,20300
    public void disableLocationUpdates() {disableLocationUpdates561,20511
    public List<NeighboringCellInfo> getNeighboringCellInfo() {getNeighboringCellInfo568,20759
    private void enforceReadPermission() {enforceReadPermission603,21977
    private void enforceModifyPermission() {enforceModifyPermission612,22299
    private void enforceCallPermission() {enforceCallPermission621,22617
    private String createTelUrl(String number) {createTelUrl626,22759
    private void log(String msg) {log636,23006
    public int getActivePhoneType() {getActivePhoneType640,23097
    public int getCdmaEriIconIndex() {getCdmaEriIconIndex647,23246
    public int getCdmaEriIconMode() {getCdmaEriIconMode656,23426
    public String getCdmaEriText() {getCdmaEriText663,23565
    public boolean getCdmaNeedsProvisioning() {getCdmaNeedsProvisioning670,23720
    public int getVoiceMessageCount() {getVoiceMessageCount689,24363
    public int getNetworkType() {getNetworkType696,24504
    public boolean hasIccCard() {hasIccCard730,26103

src/com/android/phone/PhoneUtils.java,8846
package com.android.phone;com.android.phone17,621
public class PhoneUtils {PhoneUtils71,2416
    private static final String LOG_TAG = "PhoneUtils";LOG_TAG72,2442
    private static final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG73,2498
    private static final boolean DBG_SETAUDIOMODE_STACK = false;DBG_SETAUDIOMODE_STACK76,2620
    static final String ADD_CALL_MODE_KEY = "add_call_mode";ADD_CALL_MODE_KEY79,2741
    static final int CALL_STATUS_DIALED = 0;  // The number was successfully dialedCALL_STATUS_DIALED82,2840
    static final int CALL_STATUS_DIALED_MMI = 1;  // The specified number was an MMI codeCALL_STATUS_DIALED_MMI83,2924
    static final int CALL_STATUS_FAILED = 2;  // The call failedCALL_STATUS_FAILED84,3014
    static final int AUDIO_IDLE = 0;  /** audio behaviour at phone idle */AUDIO_IDLE89,3262
    static final int AUDIO_RINGING = 1;  /** audio behaviour while ringing */AUDIO_RINGING90,3337
    static final int AUDIO_OFFHOOK = 2;  /** audio behaviour while in call. */AUDIO_OFFHOOK91,3415
    private static boolean sIsSpeakerEnabled = false;sIsSpeakerEnabled94,3572
    private static Hashtable<Connection, Boolean> sConnectionMuteTable =sConnectionMuteTable97,3706
    private static ConnectionHandler mConnectionHandler;mConnectionHandler101,3885
    private static final int PHONE_STATE_CHANGED = -1;PHONE_STATE_CHANGED104,3979
    private static final int CNAP_SPECIAL_CASE_NO = -1;CNAP_SPECIAL_CASE_NO107,4083
    private static IExtendedNetworkService mNwService = null;mNwService110,4191
    private static Message mMmiTimeoutCbMsg = null;mMmiTimeoutCbMsg112,4338
    private static boolean sIsNoiseSuppressionEnabled = true;sIsNoiseSuppressionEnabled115,4447
    private static class ConnectionHandler extends Handler {ConnectionHandler121,4650
        public void handleMessage(Message msg) {handleMessage123,4729
    private static ServiceConnection ExtendedNetworkServiceConnection = new ServiceConnection() {ExtendedNetworkServiceConnection194,8313
    public static void initializeConnectionHandler(CallManager cm) {initializeConnectionHandler209,8911
    private PhoneUtils() {PhoneUtils225,9595
    static boolean answerCall(Call ringing) {answerCall237,9917
    static boolean hangup(CallManager cm) {hangup327,13962
    static boolean hangupRingingCall(Call ringing) {hangupRingingCall349,14634
    static boolean hangupActiveCall(Call foreground) {hangupActiveCall384,16361
    static boolean hangupHoldingCall(Call background) {hangupHoldingCall389,16502
    static boolean hangupRingingAndActive(Phone phone) {hangupRingingAndActive399,16818
    static boolean hangup(Call call) {hangup428,17827
    static void hangup(Connection c) {hangup451,18612
    static boolean answerAndEndHolding(CallManager cm, Call ringing) {answerAndEndHolding461,18862
    static boolean answerAndEndActive(CallManager cm, Call ringing) {answerAndEndActive473,19240
    private static void updateCdmaCallStateOnNewOutgoingCall(PhoneApp app) {updateCdmaCallStateOnNewOutgoingCall511,20549
    static int placeCall(Phone phone, String number, Uri contactRef) {placeCall534,21614
    static int placeCallVia(Context context, Phone phone,placeCallVia626,25779
    static void sendEmptyFlash(Phone phone) {sendEmptyFlash698,28686
    static void switchHoldingAndActive(Call heldCall) {switchHoldingAndActive712,29216
    static Boolean restoreMuteState() {restoreMuteState733,29987
    static void mergeCalls() {mergeCalls770,31478
    static void mergeCalls(CallManager cm) {mergeCalls774,31564
    static void separateCall(Connection c) {separateCall801,32768
    static Dialog displayMMIInitiate(Context context,displayMMIInitiate820,33458
    static void displayMMIComplete(final Phone phone, Context context, final MmiCode mmiCode,displayMMIComplete920,37896
    static boolean cancelMmiCode(Phone phone) {cancelMmiCode1131,47715
    public static class VoiceMailNumberMissingException extends Exception {VoiceMailNumberMissingException1163,48889
        VoiceMailNumberMissingException() {VoiceMailNumberMissingException1164,48965
        VoiceMailNumberMissingException(String msg) {VoiceMailNumberMissingException1168,49041
    static String getNumberFromIntent(Context context, Intent intent)getNumberFromIntent1196,50168
    static CallerInfo getCallerInfo(Context context, Connection c) {getCallerInfo1237,51893
    public static class CallerInfoToken {CallerInfoToken1282,53784
        public boolean isFinal;isFinal1284,53903
        public CallerInfo currentInfo;currentInfo1286,53936
        public CallerInfoAsyncQuery asyncQuery;asyncQuery1287,53975
    static CallerInfoToken startGetCallerInfo(Context context, Call call,startGetCallerInfo1293,54124
    static CallerInfoToken startGetCallerInfo(Context context, Connection c,startGetCallerInfo1314,55005
    private static final int QUERY_TOKEN = -1;QUERY_TOKEN1515,66298
    static CallerInfoAsyncQuery.OnQueryCompleteListener sCallerInfoQueryListener =sCallerInfoQueryListener1516,66345
    static String getCompactNameFromCallerInfo(CallerInfo ci, Context context) {getCompactNameFromCallerInfo1562,68747
    static boolean isConferenceCall(Call call) {isConferenceCall1609,71085
    static void startNewCall(final CallManager cm) {startNewCall1657,73351
    static void turnOnSpeaker(Context context, boolean flag, boolean store) {turnOnSpeaker1684,74439
    static void restoreSpeakerMode(Context context) {restoreSpeakerMode1716,75635
    static boolean isSpeakerOn(Context context) {isSpeakerOn1725,75944
    static void turnOnNoiseSuppression(Context context, boolean flag, boolean store) {turnOnNoiseSuppression1731,76150
    static void restoreNoiseSuppression(Context context) {restoreNoiseSuppression1754,76866
    static boolean isNoiseSuppressionOn(Context context) {isNoiseSuppressionOn1767,77349
    static void setMute(boolean muted) {setMute1794,78272
    private static void setMuteInternal(Phone phone, boolean muted) {setMuteInternal1814,78946
    static boolean getMute() {getMute1834,79749
    /* package */ static void setAudioMode() {setAudioMode1849,80301
    /* package */ static void setAudioMode(CallManager cm) {setAudioMode1856,80473
    private static String audioModeToString(int mode) {audioModeToString1874,81278
    /* package */ static boolean handleHeadsetHook(Phone phone, KeyEvent event) {handleHeadsetHook1895,82133
    /* package */ static boolean hasDisconnectedConnections(Phone phone) {hasDisconnectedConnections1982,86356
    private static final boolean hasDisconnectedConnections(Call call) {hasDisconnectedConnections1996,86970
    /* package */ static boolean okToSwapCalls(CallManager cm) {okToSwapCalls2014,87438
    /* package */ static boolean okToMergeCalls(CallManager cm) {okToMergeCalls2041,88889
    /* package */ static boolean okToAddCall(CallManager cm) {okToAddCall2064,89992
    private static int checkCnapSpecialCases(String n) {checkCnapSpecialCases2103,91955
    /* package */ static String modifyForSpecialCnapCases(Context context, CallerInfo ci,modifyForSpecialCnapCases2129,93165
    /* package */ static boolean hasPhoneProviderExtras(Intent intent) {hasPhoneProviderExtras2183,96095
    /* package */ static void checkAndCopyPhoneProviderExtras(Intent src, Intent dst) {checkAndCopyPhoneProviderExtras2201,96892
    /* package */ static CharSequence getProviderLabel(Context context, Intent intent) {getProviderLabel2220,97769
    /* package */ static Drawable getProviderIcon(Context context, Intent intent) {getProviderIcon2239,98521
    /* package */ static Uri getProviderGatewayUri(Intent intent) {getProviderGatewayUri2255,99095
    /* package */ static String formatProviderUri(Uri uri) {formatProviderUri2267,99655
    /* package */ static boolean isRoutableViaGateway(String number) {isRoutableViaGateway2289,100423
    private static void activateSpeakerIfDocked(Phone phone) {activateSpeakerIfDocked2307,101128
    /* package */ static boolean isPhoneInEcm(Phone phone) {isPhoneInEcm2326,101872
    public static Phone pickPhoneBasedOnNumber(CallManager cm,pickPhoneBasedOnNumber2350,102886
    public static Phone getSipPhoneFromUri(CallManager cm, String target) {getSipPhoneFromUri2362,103352
    public static boolean isRealIncomingCall(Call.State state) {isRealIncomingCall2377,103933
    private static void dumpStateForCall(Call call, String prefix) {dumpStateForCall2386,104176
    /* package */ static void dumpCallState() {dumpCallState2398,104775
    /* package */ static void dumpCallState(Phone phone) {dumpCallState2437,106622
    private static void log(String msg) {log2504,109788
    static void dumpCallManager() {dumpCallManager2508,109866

src/com/android/phone/ProcessOutgoingCallTest.java,779
package com.android.phone;com.android.phone17,621
public class ProcessOutgoingCallTest extends BroadcastReceiver {ProcessOutgoingCallTest32,1055
    private static final String TAG = "ProcessOutgoingCallTest";TAG33,1120
    private static final String AREACODE = "617";AREACODE34,1185
    private static final boolean LOGV = Config.LOGV;LOGV36,1236
    private static final boolean REDIRECT_411_TO_GOOG411 = true;REDIRECT_411_TO_GOOG41138,1290
    private static final boolean SEVEN_DIGIT_DIALING = true;SEVEN_DIGIT_DIALING39,1355
    private static final boolean POUND_POUND_SEARCH = true;POUND_POUND_SEARCH40,1416
    private static final boolean BLOCK_555 = true;BLOCK_55541,1476
    public void onReceive(Context context, Intent intent) {onReceive43,1528

src/com/android/phone/Profiler.java,1499
package com.android.phone;com.android.phone17,621
public class Profiler {Profiler28,842
    private static final String LOG_TAG = PhoneApp.LOG_TAG;LOG_TAG29,866
    private static final boolean PROFILE = false;PROFILE37,1262
    static long sTimeCallScreenRequested;sTimeCallScreenRequested39,1313
    static long sTimeCallScreenOnCreate;sTimeCallScreenOnCreate40,1355
    static long sTimeCallScreenCreated;sTimeCallScreenCreated41,1396
    static long sTimeIncomingCallPanelRequested;sTimeIncomingCallPanelRequested46,1620
    static long sTimeIncomingCallPanelOnCreate;sTimeIncomingCallPanelOnCreate47,1669
    static long sTimeIncomingCallPanelCreated;sTimeIncomingCallPanelCreated48,1717
    private Profiler() {Profiler51,1810
    static void profileViewCreate(Window win, String tag) {profileViewCreate54,1842
    static void callScreenRequested() {callScreenRequested65,2185
    static void callScreenOnCreate() {callScreenOnCreate71,2332
    static void callScreenCreated() {callScreenCreated77,2477
    private static void dumpCallScreenStat() {dumpCallScreenStat84,2654
    static void incomingCallPanelRequested() {incomingCallPanelRequested94,3034
    static void incomingCallPanelOnCreate() {incomingCallPanelOnCreate100,3195
    static void incomingCallPanelCreated() {incomingCallPanelCreated106,3354
    private static void dumpIncomingCallPanelStat() {dumpIncomingCallPanelStat113,3552
    private static void log(String msg) {log123,3975

src/com/android/phone/Ringer.java,2249
package com.android.phone;com.android.phone17,621
public class Ringer {Ringer39,1202
    private static final String LOG_TAG = "Ringer";LOG_TAG40,1224
    private static final boolean DBG =DBG41,1276
    private static final int PLAY_RING_ONCE = 1;PLAY_RING_ONCE44,1409
    private static final int STOP_RING = 3;STOP_RING45,1458
    private static final int VIBRATE_LENGTH = 1000; // msVIBRATE_LENGTH47,1503
    private static final int PAUSE_LENGTH = 1000; // msPAUSE_LENGTH48,1561
    Uri mCustomRingtoneUri;mCustomRingtoneUri51,1647
    Ringtone mRingtone;mRingtone53,1676
    Vibrator mVibrator = new Vibrator();mVibrator54,1700
    IPowerManager mPowerManager;mPowerManager55,1741
    volatile boolean mContinueVibrating;mContinueVibrating56,1774
    VibratorThread mVibratorThread;mVibratorThread57,1815
    Context mContext;mContext58,1851
    private Worker mRingThread;mRingThread59,1873
    private Handler mRingHandler;mRingHandler60,1905
    private long mFirstRingEventTime = -1;mFirstRingEventTime61,1939
    private long mFirstRingStartTime = -1;mFirstRingStartTime62,1982
    Ringer(Context context) {Ringer64,2026
    void updateRingerContextAfterRadioTechnologyChange(Phone phone) {updateRingerContextAfterRadioTechnologyChange76,2470
    boolean isRinging() {isRinging91,3069
    private boolean isRingtonePlaying() {isRingtonePlaying102,3310
    private boolean isVibrating() {isVibrating114,3687
    void ring() {ring123,3875
    boolean shouldVibrate() {shouldVibrate177,6170
    void stopRing() {stopRing186,6498
    private class VibratorThread extends Thread {VibratorThread221,7739
        public void run() {run222,7789
    private class Worker implements Runnable {Worker229,8005
        private final Object mLock = new Object();mLock230,8052
        private Looper mLooper;mLooper231,8103
        Worker(String name) {Worker233,8136
        public Looper getLooper() {getLooper246,8504
        public void run() {run250,8579
        public void quit() {quit259,8808
    void setCustomRingtoneUri (Uri uri) {setCustomRingtoneUri269,9054
    private void makeLooper() {makeLooper275,9178
    private static void log(String msg) {log322,11421

src/com/android/phone/Settings.java,3274
package com.android.phone;com.android.phone17,621
public class Settings extends PreferenceActivity implements DialogInterface.OnClickListener,Settings45,1514
    private static final String LOG_TAG = "NetworkSettings";LOG_TAG49,1708
    private static final boolean DBG = true;DBG50,1769
    public static final int REQUEST_CODE_EXIT_ECM = 17;REQUEST_CODE_EXIT_ECM51,1814
    private static final String BUTTON_DATA_ENABLED_KEY = "button_data_enabled_key";BUTTON_DATA_ENABLED_KEY54,1911
    private static final String BUTTON_DATA_USAGE_KEY = "button_data_usage_key";BUTTON_DATA_USAGE_KEY55,1996
    private static final String BUTTON_PREFERED_NETWORK_MODE = "preferred_network_mode_key";BUTTON_PREFERED_NETWORK_MODE56,2077
    private static final String BUTTON_ROAMING_KEY = "button_roaming_key";BUTTON_ROAMING_KEY57,2170
    static final int preferredNetworkMode = Phone.PREFERRED_NT_MODE;preferredNetworkMode59,2246
    private ListPreference mButtonPreferredNetworkMode;mButtonPreferredNetworkMode62,2333
    private CheckBoxPreference mButtonDataRoam;mButtonDataRoam63,2389
    private CheckBoxPreference mButtonDataEnabled;mButtonDataEnabled64,2437
    private Preference mButtonDataUsage;mButtonDataUsage66,2489
    private DataUsageListener mDataUsageListener;mDataUsageListener67,2530
    private static final String iface = "rmnet0"; //TODO: this will go awayiface68,2580
    private Phone mPhone;mPhone70,2657
    private MyHandler mHandler;mHandler71,2683
    private boolean mOkClicked;mOkClicked72,2715
    GsmUmtsOptions mGsmUmtsOptions;mGsmUmtsOptions75,2787
    CdmaOptions mCdmaOptions;mCdmaOptions76,2823
    private Preference mClickedPreference;mClickedPreference78,2854
    public void onClick(DialogInterface dialog, int which) {onClick83,3026
    public void onDismiss(DialogInterface dialog) {onDismiss93,3335
    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {onPreferenceTreeClick106,3736
    protected void onCreate(Bundle icicle) {onCreate168,6803
    protected void onResume() {onResume213,9040
    protected void onPause() {onPause237,10024
    public boolean onPreferenceChange(Preference preference, Object objValue) {onPreferenceChange250,10445
    private class MyHandler extends Handler {MyHandler305,13218
        private static final int MESSAGE_GET_PREFERRED_NETWORK_TYPE = 0;MESSAGE_GET_PREFERRED_NETWORK_TYPE307,13265
        private static final int MESSAGE_SET_PREFERRED_NETWORK_TYPE = 1;MESSAGE_SET_PREFERRED_NETWORK_TYPE308,13338
        public void handleMessage(Message msg) {handleMessage311,13430
        private void handleGetPreferredNetworkTypeResponse(Message msg) {handleGetPreferredNetworkTypeResponse323,13833
        private void handleSetPreferredNetworkTypeResponse(Message msg) {handleSetPreferredNetworkTypeResponse388,17055
        private void resetNetworkModeToDefault() {resetNetworkModeToDefault402,17712
    private void UpdatePreferredNetworkModeSummary(int NetworkMode) {UpdatePreferredNetworkModeSummary415,18361
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {onActivityResult446,19839
    private static void log(String msg) {log464,20428

src/com/android/phone/SimContacts.java,2422
package com.android.phone;com.android.phone17,621
public class SimContacts extends ADNList {SimContacts59,2126
    private static final String LOG_TAG = "SimContacts";LOG_TAG60,2169
    static final ContentValues sEmptyContentValues = new ContentValues();sEmptyContentValues62,2227
    private static final int MENU_IMPORT_ONE = 1;MENU_IMPORT_ONE64,2302
    private static final int MENU_IMPORT_ALL = 2;MENU_IMPORT_ALL65,2352
    private ProgressDialog mProgressDialog;mProgressDialog66,2402
    private Account mAccount;mAccount68,2447
    private static class NamePhoneTypePair {NamePhoneTypePair70,2478
        final String name;name71,2523
        final int phoneType;phoneType72,2550
        public NamePhoneTypePair(String nameWithPhoneType) {NamePhoneTypePair73,2579
    private class ImportAllSimContactsThread extends ThreadImportAllSimContactsThread95,3519
        boolean mCanceled = false;mCanceled98,3639
        public ImportAllSimContactsThread() {ImportAllSimContactsThread100,3675
        public void run() {run105,3799
        public void onCancel(DialogInterface dialog) {onCancel119,4283
        public void onClick(DialogInterface dialog, int which) {onClick123,4379
    private static final String ACCOUNT_TYPE_GOOGLE = "com.google";ACCOUNT_TYPE_GOOGLE135,4794
    private static final String GOOGLE_MY_CONTACTS_GROUP = "System Group: My Contacts";GOOGLE_MY_CONTACTS_GROUP136,4862
    private static void actuallyImportOneSimContact(actuallyImportOneSimContact138,4951
    private void importOneSimContact(int position) {importOneSimContact225,9019
    protected void onCreate(Bundle icicle) {onCreate237,9440
    protected CursorAdapter newAdapter() {newAdapter253,9986
    protected Uri resolveIntent() {resolveIntent259,10212
    public boolean onCreateOptionsMenu(Menu menu) {onCreateOptionsMenu270,10568
    public boolean onPrepareOptionsMenu(Menu menu) {onPrepareOptionsMenu277,10774
    public boolean onOptionsItemSelected(MenuItem item) {onOptionsItemSelected286,11063
    public boolean onContextItemSelected(MenuItem item) {onContextItemSelected314,12172
    public void onCreateContextMenu(ContextMenu menu, View v,onCreateContextMenu328,12728
    public void onListItemClick(ListView l, View v, int position, long id) {onListItemClick342,13342
    public boolean onKeyDown(int keyCode, KeyEvent event) {onKeyDown347,13479

src/com/android/phone/sip/SipEditor.java,5456
package com.android.phone.sip;com.android.phone.sip17,621
public class SipEditor extends PreferenceActivitySipEditor54,1687
    private static final int MENU_SAVE = Menu.FIRST;MENU_SAVE56,1796
    private static final int MENU_DISCARD = Menu.FIRST + 1;MENU_DISCARD57,1849
    private static final String TAG = SipEditor.class.getSimpleName();TAG59,1910
    private static final String KEY_PROFILE = "profile";KEY_PROFILE60,1981
    private static final String GET_METHOD_PREFIX = "get";GET_METHOD_PREFIX61,2038
    private static final char SCRAMBLED = '*';SCRAMBLED62,2097
    private static final int NA = 0;NA63,2144
    private PrimaryAccountSelector mPrimaryAccountSelector;mPrimaryAccountSelector65,2182
    private AdvancedSettings mAdvancedSettings;mAdvancedSettings66,2242
    private SipSharedPreferences mSharedPreferences;mSharedPreferences67,2290
    private boolean mDisplayNameSet;mDisplayNameSet68,2343
    private boolean mHomeButtonClicked = false;mHomeButtonClicked69,2380
    private SipManager mSipManager;mSipManager71,2429
    private SipProfileDb mProfileDb;mProfileDb72,2465
    private SipProfile mOldProfile;mOldProfile73,2502
    enum PreferenceKey {PreferenceKey75,2539
        Username(R.string.username, 0, R.string.default_preference_summary),Username76,2564
        Password(R.string.password, 0, R.string.default_preference_summary),Password77,2641
        DomainAddress(R.string.domain_address, 0, R.string.default_preference_summary),DomainAddress78,2718
        DisplayName(R.string.display_name, 0, R.string.display_name_summary),DisplayName79,2806
        ProxyAddress(R.string.proxy_address, 0, R.string.optional_summary),ProxyAddress80,2884
        Port(R.string.port, R.string.default_port, R.string.default_port),Port81,2960
        Transport(R.string.transport, R.string.default_transport, NA),Transport82,3035
        SendKeepAlive(R.string.send_keepalive, R.string.sip_system_decide, NA);SendKeepAlive83,3106
        final int text;text85,3187
        final int initValue;initValue86,3211
        final int defaultSummary;defaultSummary87,3240
        Preference preference;preference88,3274
        PreferenceKey(int text, int initValue, int defaultSummary) {PreferenceKey96,3580
        String getValue() {getValue102,3780
        void setValue(String value) {setValue111,4170
    public void onCreate(Bundle savedInstanceState) {onCreate137,5186
    public void onPause() {onPause179,6866
    public boolean onCreateOptionsMenu(Menu menu) {onCreateOptionsMenu189,7127
    public boolean onOptionsItemSelected(MenuItem item) {onOptionsItemSelected199,7516
    public boolean onKeyDown(int keyCode, KeyEvent event) {onKeyDown213,7875
    private void saveAndRegisterProfile(SipProfile p) throws IOException {saveAndRegisterProfile222,8136
    private void deleteAndUnregisterProfile(SipProfile p) {deleteAndUnregisterProfile236,8655
    private void unregisterProfile(String uri) {unregisterProfile242,8835
    private void setRemovedProfileAndFinish() {setRemovedProfileAndFinish250,9039
    private void showAlert(Throwable e) {showAlert259,9411
    private void showAlert(final String message) {showAlert265,9577
    private boolean isEditTextEmpty(PreferenceKey key) {isEditTextEmpty282,10223
    private void validateAndSetResult() {validateAndSetResult288,10483
    private void unregisterOldPrimaryAccount() {unregisterOldPrimaryAccount349,12930
    private void replaceProfile(final SipProfile oldProfile,replaceProfile359,13358
    private String getProfileName() {getProfileName379,14174
    private SipProfile createSipProfile() throws Exception {createSipProfile384,14332
    public boolean onPreferenceChange(Preference pref, Object newValue) {onPreferenceChange400,15187
    private PreferenceKey getPreferenceKey(Preference pref) {getPreferenceKey418,15865
    private void loadPreferencesFromProfile(SipProfile p) {loadPreferencesFromProfile425,16121
    private boolean isAlwaysSendKeepAlive() {isAlwaysSendKeepAlive466,18075
    private void setCheckBox(PreferenceKey key, boolean checked) {setCheckBox473,18334
    private void setupPreference(Preference pref) {setupPreference478,18513
    private void checkIfDisplayNameSet() {checkIfDisplayNameSet489,18861
    private static String getDefaultDisplayName() {getDefaultDisplayName501,19344
    private static String scramble(String s) {scramble505,19453
    private class PrimaryAccountSelector {PrimaryAccountSelector512,19691
        private CheckBoxPreference mCheckbox;mCheckbox513,19734
        private final boolean mWasPrimaryAccount;mWasPrimaryAccount514,19780
        PrimaryAccountSelector(SipProfile profile) {PrimaryAccountSelector517,19906
        void commit(SipProfile profile) {commit536,20801
    private class AdvancedSettingsAdvancedSettings547,21236
        private Preference mAdvancedSettingsTrigger;mAdvancedSettingsTrigger549,21333
        private Preference[] mPreferences;mPreferences550,21386
        private boolean mShowing = false;mShowing551,21429
        AdvancedSettings() {AdvancedSettings553,21472
        private void loadAdvancedPreferences() {loadAdvancedPreferences561,21762
        private void show() {show579,22540
        private void hide() {hide589,22967
        public boolean onPreferenceClick(Preference preference) {onPreferenceClick598,23310

src/com/android/phone/sip/SipProfileDb.java,1207
package com.android.phone.sip;com.android.phone.sip17,621
public class SipProfileDb {SipProfileDb38,1138
    private static final String TAG = SipProfileDb.class.getSimpleName();TAG39,1166
    private static final String PROFILES_DIR = "/profiles/";PROFILES_DIR41,1241
    private static final String PROFILE_OBJ_FILE = ".pobj";PROFILE_OBJ_FILE42,1302
    private String mProfilesDirectory;mProfilesDirectory44,1363
    private SipSharedPreferences mSipSharedPreferences;mSipSharedPreferences45,1402
    private int mProfilesCount = -1;mProfilesCount46,1458
    public SipProfileDb(Context context) {SipProfileDb48,1496
    public void deleteProfile(SipProfile p) {deleteProfile54,1714
    private void deleteProfile(File file) {deleteProfile62,2038
    public void saveProfile(SipProfile p) throws IOException {saveProfile69,2226
    public int getProfilesCount() {getProfilesCount94,3209
    public List<SipProfile> retrieveSipProfileList() {retrieveSipProfileList99,3365
    private List<SipProfile> retrieveSipProfileListInternal() {retrieveSipProfileListInternal105,3533
    private SipProfile deserialize(File profileObjectFile) throws IOException {deserialize130,4483

src/com/android/phone/sip/SipSettings.java,3540
package com.android.phone.sip;com.android.phone.sip17,621
public class SipSettings extends PreferenceActivity {SipSettings60,1990
    public static final String SIP_SHARED_PREFERENCES = "SIP_PREFERENCES";SIP_SHARED_PREFERENCES61,2044
    static final String KEY_SIP_PROFILE = "sip_profile";KEY_SIP_PROFILE63,2120
    private static final String BUTTON_SIP_RECEIVE_CALLS =BUTTON_SIP_RECEIVE_CALLS65,2178
    private static final String PREF_SIP_LIST = "sip_account_list";PREF_SIP_LIST67,2274
    private static final String TAG = "SipSettings";TAG68,2342
    private static final int REQUEST_ADD_OR_EDIT_SIP_PROFILE = 1;REQUEST_ADD_OR_EDIT_SIP_PROFILE70,2396
    private PackageManager mPackageManager;mPackageManager72,2463
    private SipManager mSipManager;mSipManager73,2507
    private SipProfileDb mProfileDb;mProfileDb74,2543
    private SipProfile mProfile; // profile that's being editedmProfile76,2581
    private CheckBoxPreference mButtonSipReceiveCalls;mButtonSipReceiveCalls78,2646
    private PreferenceCategory mSipListContainer;mSipListContainer79,2701
    private Map<String, SipPreference> mSipPreferenceMap;mSipPreferenceMap80,2751
    private List<SipProfile> mSipProfileList;mSipProfileList81,2809
    private SipSharedPreferences mSipSharedPreferences;mSipSharedPreferences82,2855
    private int mUid = Process.myUid();mUid83,2911
    private class SipPreference extends Preference {SipPreference85,2952
        SipProfile mProfile;mProfile86,3005
        SipPreference(Context c, SipProfile p) {SipPreference87,3034
        SipProfile getProfile() {getProfile92,3143
        void setProfile(SipProfile p) {setProfile96,3217
        void updateSummary(String registrationStatus) {updateSummary104,3566
    private String getPackageNameFromUid(int uid) {getPackageNameFromUid127,4636
    public void onCreate(Bundle savedInstanceState) {onCreate140,5112
    public void onResume() {onResume158,5739
    protected void onDestroy() {onDestroy163,5815
    protected void onActivityResult(final int requestCode, final int resultCode,onActivityResult169,5945
    private void registerForAddSipListener() {registerForAddSipListener192,6862
    private void registerForReceiveCallsCheckBox() {registerForReceiveCallsCheckBox201,7196
    private synchronized void handleSipReceiveCallsOption(boolean enabled) {handleSipReceiveCallsOption221,8121
    private SipProfile updateAutoRegistrationFlag(updateAutoRegistrationFlag245,9095
    private void updateProfilesStatus() {updateProfilesStatus259,9563
    private void retrieveSipLists() {retrieveSipLists271,9885
    private void processActiveProfilesFromSipService() {processActiveProfilesFromSipService303,11076
    private SipProfile getProfileFromList(SipProfile activeProfile) {getProfileFromList315,11531
    private void addPreferenceFor(SipProfile p) {addPreferenceFor324,11799
    private void handleProfileClick(final SipProfile profile) {handleProfileClick340,12436
    private void unregisterProfile(final SipProfile p) {unregisterProfile360,13278
    void deleteProfile(SipProfile p) {deleteProfile373,13738
    private void addProfile(SipProfile p) throws IOException {addProfile379,13942
    private void startSipEditor(final SipProfile profile) {startSipEditor390,14309
    private void showRegistrationMessage(final String profileUri,showRegistrationMessage397,14600
    private SipRegistrationListener createRegistrationListener() {createRegistrationListener409,14981

src/com/android/phone/sip/SipSharedPreferences.java,1424
package com.android.phone.sip;com.android.phone.sip17,621
public class SipSharedPreferences {SipSharedPreferences32,995
    private static final String SIP_SHARED_PREFERENCES = "SIP_PREFERENCES";SIP_SHARED_PREFERENCES33,1031
    private static final String KEY_PRIMARY_ACCOUNT = "primary";KEY_PRIMARY_ACCOUNT34,1107
    private static final String KEY_NUMBER_OF_PROFILES = "profiles";KEY_NUMBER_OF_PROFILES35,1172
    private SharedPreferences mPreferences;mPreferences37,1242
    private Context mContext;mContext38,1286
    public SipSharedPreferences(Context context) {SipSharedPreferences40,1317
    public void setPrimaryAccount(String accountUri) {setPrimaryAccount46,1526
    public void unsetPrimaryAccount() {unsetPrimaryAccount52,1734
    public String getPrimaryAccount() {getPrimaryAccount57,1887
    public boolean isPrimaryAccount(String accountUri) {isPrimaryAccount61,2000
    public boolean hasPrimaryAccount() {hasPrimaryAccount66,2166
    public void setProfilesCount(int number) {setProfilesCount71,2317
    public int getProfilesCount() {getProfilesCount77,2513
    public void setSipCallOption(String option) {setSipCallOption81,2619
    public String getSipCallOption() {getSipCallOption86,2800
    public void setReceivingCallsEnabled(boolean enabled) {setReceivingCallsEnabled93,3100
    public boolean isReceivingCallsEnabled() {isReceivingCallsEnabled98,3300

src/com/android/phone/SipBroadcastReceiver.java,609
package com.android.phone;com.android.phone17,621
public class SipBroadcastReceiver extends BroadcastReceiver {SipBroadcastReceiver42,1400
    private static final String TAG = SipBroadcastReceiver.class.getSimpleName();TAG43,1462
    private SipSharedPreferences mSipSharedPreferences;mSipSharedPreferences44,1544
    public void onReceive(Context context, final Intent intent) {onReceive47,1615
    private void removeSipPhone(String sipUri) {removeSipPhone80,3110
    private void takeCall(Intent intent) {takeCall92,3600
    private void registerAllProfiles() {registerAllProfiles109,4305

src/com/android/phone/SipCallOptionHandler.java,2493
package com.android.phone;com.android.phone17,622
public class SipCallOptionHandler extends Activity implementsSipCallOptionHandler53,1725
    static final String TAG = "SipCallOptionHandler";TAG57,1912
    static final int DIALOG_SELECT_PHONE_TYPE = 0;DIALOG_SELECT_PHONE_TYPE58,1966
    static final int DIALOG_SELECT_OUTGOING_SIP_PHONE = 1;DIALOG_SELECT_OUTGOING_SIP_PHONE59,2017
    static final int DIALOG_START_SIP_SETTINGS = 2;DIALOG_START_SIP_SETTINGS60,2076
    static final int DIALOG_NO_INTERNET_ERROR = 3;DIALOG_NO_INTERNET_ERROR61,2128
    static final int DIALOG_NO_VOIP = 4;DIALOG_NO_VOIP62,2179
    static final int DIALOG_SIZE = 5;DIALOG_SIZE63,2220
    private Intent mIntent;mIntent65,2259
    private List<SipProfile> mProfileList;mProfileList66,2287
    private String mCallOption;mCallOption67,2330
    private String mNumber;mNumber68,2362
    private SipSharedPreferences mSipSharedPreferences;mSipSharedPreferences69,2390
    private SipProfileDb mSipProfileDb;mSipProfileDb70,2446
    private Dialog[] mDialogs = new Dialog[DIALOG_SIZE];mDialogs71,2486
    private SipProfile mOutgoingSipProfile;mOutgoingSipProfile72,2543
    private TextView mUnsetPriamryHint;mUnsetPriamryHint73,2587
    private boolean mUseSipPhone = false;mUseSipPhone74,2627
    private boolean mMakePrimary = false;mMakePrimary75,2669
    public void onCreate(Bundle savedInstanceState) {onCreate78,2726
    public void onPause() {onPause157,6095
    protected Dialog onCreateDialog(int id) {onCreateDialog166,6309
    private void addMakeDefaultCheckBox(Dialog dialog) {addMakeDefaultCheckBox227,9098
    private CharSequence[] getProfileNameArray() {getProfileNameArray243,9923
    public void onClick(DialogInterface dialog, int id) {onClick252,10197
    public void onCancel(DialogInterface dialog) {onCancel285,11542
    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {onCheckedChanged289,11618
    private void createSipPhoneIfNeeded(SipProfile p) {createSipPhoneIfNeeded298,11912
    private void setResultAndFinish() {setResultAndFinish316,12589
    private boolean isNetworkConnected() {isNetworkConnected345,13762
    private void startGetPrimarySipPhoneThread() {startGetPrimarySipPhoneThread358,14237
    private void getPrimarySipPhone() {getPrimarySipPhone366,14435
    private SipProfile getPrimaryFromExistingProfiles(String primarySipUri) {getPrimaryFromExistingProfiles383,15025

src/com/android/phone/SipUtil.java,236
package com.android.phone;com.android.phone17,621
public class SipUtil {SipUtil24,782
    private SipUtil() {SipUtil25,805
    public static PendingIntent createIncomingCallPendingIntent() {createIncomingCallPendingIntent28,836

src/com/android/phone/SpecialCharSequenceMgr.java,1256
package com.android.phone;com.android.phone17,621
public class SpecialCharSequenceMgr {SpecialCharSequenceMgr39,1375
    private static final String TAG = PhoneApp.LOG_TAG;TAG40,1413
    private static final boolean DBG = false;DBG41,1469
    private static final String MMI_IMEI_DISPLAY = "*#06#";MMI_IMEI_DISPLAY43,1516
    private SpecialCharSequenceMgr() {SpecialCharSequenceMgr46,1622
    static boolean handleChars(Context context, String input) {handleChars55,1870
    static boolean handleChars(Context context,handleChars81,3028
    static boolean handleCharsForLockedDevice(Context context,handleCharsForLockedDevice106,3947
    static private boolean handleSecretCode(Context context, String input) {handleSecretCode134,5144
    static private boolean handleAdnEntry(Context context, String input) {handleAdnEntry147,5650
    static private boolean handlePinEntry(Context context, String input,handlePinEntry176,6839
    static private boolean handleIMEIDisplay(Context context,handleIMEIDisplay199,7891
    static private void showIMEIPanel(Context context) {showIMEIPanel217,8534
    static private void showMEIDPanel(Context context) {showMEIDPanel231,9049
    private static void log(String msg) {log245,9564

src/com/android/phone/TelephonyCapabilities.java,1172
package com.android.phone;com.android.phone17,621
public class TelephonyCapabilities {TelephonyCapabilities30,1014
    private static final String LOG_TAG = "TelephonyCapabilities";LOG_TAG31,1051
    private TelephonyCapabilities() {TelephonyCapabilities34,1164
    /* package */ static boolean useShortDtmfTones(Phone phone, Context context) {useShortDtmfTones43,1450
    /* package */ static boolean supportsEcm(Phone phone) {supportsEcm83,3231
    /* package */ static boolean supportsOtasp(Phone phone) {supportsOtasp110,4417
    /* package */ static boolean supportsVoiceMessageCount(Phone phone) {supportsVoiceMessageCount122,4880
    /* package */ static boolean supportsNetworkSelection(Phone phone) {supportsNetworkSelection134,5259
    /* package */ static int getDeviceIdLabel(Phone phone) {getDeviceIdLabel148,5837
    /* package */ static boolean supportsConferenceCallManagement(Phone phone) {supportsConferenceCallManagement172,6831
    /* package */ static boolean supportsHoldAndUnhold(Phone phone) {supportsHoldAndUnhold188,7569
    /* package */ static boolean supportsAnswerAndHold(Phone phone) {supportsAnswerAndHold210,8613

src/com/android/phone/TimeConsumingPreferenceActivity.java,2128
package com.android.phone;com.android.phone1,0
interface  TimeConsumingPreferenceListener {TimeConsumingPreferenceListener16,393
    public void onStarted(Preference preference, boolean reading);onStarted17,438
    public void onFinished(Preference preference, boolean reading);onFinished18,505
    public void onError(Preference preference, int error);onError19,573
    public void onException(Preference preference, CommandException exception);onException20,632
public class TimeConsumingPreferenceActivity extends PreferenceActivityTimeConsumingPreferenceActivity23,715
    private static final String LOG_TAG = "TimeConsumingPreferenceActivity";LOG_TAG26,947
    private final boolean DBG = (PhoneApp.DBG_LEVEL >= 2);DBG27,1024
    private static final int BUSY_READING_DIALOG = 100;BUSY_READING_DIALOG29,1084
    private static final int BUSY_SAVING_DIALOG = 200;BUSY_SAVING_DIALOG30,1140
    static final int EXCEPTION_ERROR = 300;EXCEPTION_ERROR32,1196
    static final int RESPONSE_ERROR = 400;RESPONSE_ERROR33,1240
    static final int RADIO_OFF_ERROR = 500;RADIO_OFF_ERROR34,1283
    static final int FDN_CHECK_FAILURE = 600;FDN_CHECK_FAILURE35,1327
    private final ArrayList<String> mBusyList=new ArrayList<String> ();mBusyList37,1374
    protected boolean mIsForeground = false;mIsForeground39,1447
    protected Dialog onCreateDialog(int id) {onCreateDialog42,1507
    public void onResume() {onResume109,4148
    public void onPause() {onPause115,4254
    public void onClick(DialogInterface dialog, int which) {onClick120,4345
    public void onStarted(Preference preference, boolean reading) {onStarted124,4439
    public void onFinished(Preference preference, boolean reading) {onFinished140,4920
    public void onError(Preference preference, int error) {onError155,5436
    public void onException(Preference preference, CommandException exception) {onException164,5704
    public void onCancel(DialogInterface dialog) {onCancel172,6049
    private void dismissDialogSafely(int id) {dismissDialogSafely177,6155
    void dumpState() {dumpState187,6492

src/com/android/phone/Use2GOnlyCheckBoxPreference.java,1384
package com.android.phone;com.android.phone17,621
public class Use2GOnlyCheckBoxPreference extends CheckBoxPreference {Use2GOnlyCheckBoxPreference30,970
    private static final String LOG_TAG = "Use2GOnlyCheckBoxPreference";LOG_TAG31,1040
    private static final boolean DBG = true;DBG32,1113
    private Phone mPhone;mPhone34,1159
    private MyHandler mHandler;mHandler35,1185
    public Use2GOnlyCheckBoxPreference(Context context) {Use2GOnlyCheckBoxPreference37,1218
    public Use2GOnlyCheckBoxPreference(Context context, AttributeSet attrs) {Use2GOnlyCheckBoxPreference41,1312
    public Use2GOnlyCheckBoxPreference(Context context, AttributeSet attrs, int defStyle) {Use2GOnlyCheckBoxPreference45,1479
    protected void  onClick() {onClick54,1845
    private class MyHandler extends Handler {MyHandler63,2207
        private static final int MESSAGE_GET_PREFERRED_NETWORK_TYPE = 0;MESSAGE_GET_PREFERRED_NETWORK_TYPE65,2254
        private static final int MESSAGE_SET_PREFERRED_NETWORK_TYPE = 1;MESSAGE_SET_PREFERRED_NETWORK_TYPE66,2327
        public void handleMessage(Message msg) {handleMessage69,2419
        private void handleGetPreferredNetworkTypeResponse(Message msg) {handleGetPreferredNetworkTypeResponse81,2822
        private void handleSetPreferredNetworkTypeResponse(Message msg) {handleSetPreferredNetworkTypeResponse95,3387

tests/Android.mk,432
LOCAL_PATH := $(call my-dir)LOCAL_PATH17,605
LOCAL_SRC_FILES := $(call all-java-files-under, src)LOCAL_SRC_FILES20,657
LOCAL_JAVA_LIBRARIES := android.test.runnerLOCAL_JAVA_LIBRARIES22,711
LOCAL_PACKAGE_NAME := PhoneAppTestsLOCAL_PACKAGE_NAME23,755
LOCAL_CERTIFICATE := platformLOCAL_CERTIFICATE24,791
LOCAL_MODULE_TAGS := testsLOCAL_MODULE_TAGS26,822
LOCAL_INSTRUMENTATION_FOR := PhoneLOCAL_INSTRUMENTATION_FOR28,850

tests/src/com/android/phone/unit/CnapTest.java,701
package com.android.phone;com.android.phone18,678
public class CnapTest extends AndroidTestCase {CnapTest32,1373
    private static final String TAG = "CnapTest";TAG33,1421
    private Context mContext;mContext34,1471
    private CallerInfo mCallerInfo;mCallerInfo35,1501
    private String mUnknown = "Unknown";mUnknown38,1628
    protected void setUp() throws Exception {setUp41,1684
    public void testAbsentNumberIsMappedToUnknown() throws Exception {testAbsentNumberIsMappedToUnknown49,1926
    private void assertIsUnknown(String number) {assertIsUnknown60,2242
    private String modifyForSpecialCnapCases(String number, int presentation) {modifyForSpecialCnapCases72,2787
